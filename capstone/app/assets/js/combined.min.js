var app=angular.module("app",["ngProgress"]);app.config(function(){SC.initialize({client_id:"2553d3948bd996a6f522c024161d134b",redirect_uri:"http://example.com/callback.html"})}),angular.module("app").directive("currentTrack",function(player,ngProgress,$log){return ngProgress.color("black"),ngProgress.height("10px"),{restrict:"E",scope:!0,templateUrl:"assets/partials/currentTrack.html",controller:function($scope,player){$scope.percent=0;var playing=!1,whilePlaying=function(){var newPercent=Math.round(this.position/$scope.track.duration*100);newPercent!==$scope.percent&&($scope.percent=newPercent,ngProgress.set($scope.percent))};$scope.$watch(player.tracksLoaded,function(loaded){loaded&&!playing&&(playing=!0,player.start(whilePlaying))})},link:function(scope){scope.$watch(player.getCurrentTrack_,function(track){$log.log("current track",track),scope.track=track})}}}),angular.module("app").service("player",function($rootScope){var mokb=9251246,gvb=496642,users=[gvb,mokb],trackIds=[],currentTrack=null,soundManager=null,loaded=!1,options=null,addTrack_=function(id){trackIds.push(id),trackIds.length>50&&loaded===!1&&(loaded=!0,$rootScope.$apply()),trackIds.push(id)},addPlayList_=function(id){return SC.get("/playlists/"+id,function(playlist){angular.forEach(playlist.tracks,function(track){addTrack_(track.id)})})},setSongs_=function(){angular.forEach(users,function(user){SC.get("/users/"+user+"/playlists",function(playlists){angular.forEach(playlists,function(playlist){addPlayList_(playlist.id)})})})},playNext=function(){var index=Math.floor(Math.random()*(trackIds.length-1)),trackId=trackIds[index];SC.get("/tracks/"+trackId,function(track){return null===track||track.errors&&track.errors.length>0||!track.streamable||null===track.stream_url?void playNext():(currentTrack=track,$rootScope.$apply(),void SC.stream(currentTrack.stream_url,options,function(soundManagerObj){return null===soundManagerObj?void playNext():(soundManager=soundManagerObj,void soundManager.play())},playNext))})};this.start=function(whilePlaying){options={onfinish:playNext,whileplaying:whilePlaying,usePeakData:!0,useWaveformData:!0,useEQData:!0},playNext()},this.getCurrentTrack_=function(){return currentTrack},this.tracksLoaded=function(){return loaded},setSongs_()});
//# sourceMappingURL=combined.min.js.map