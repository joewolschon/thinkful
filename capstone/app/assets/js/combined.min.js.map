{"version":3,"sources":["assets/js/app.js","app/bower_components/moment/moment.js","assets/js/directives/currentTrack.js","assets/js/directives/globe.js","assets/js/services/echonestApi.js","assets/js/services/player.js","app/bower_components/moment/benchmarks/clone.js","app/bower_components/moment/locale/af.js","app/bower_components/moment/locale/ar-ma.js","app/bower_components/moment/locale/ar-sa.js","app/bower_components/moment/locale/ar.js","app/bower_components/moment/locale/az.js","app/bower_components/moment/locale/be.js","app/bower_components/moment/locale/bg.js","app/bower_components/moment/locale/bn.js","app/bower_components/moment/locale/bo.js","app/bower_components/moment/locale/br.js","app/bower_components/moment/locale/bs.js","app/bower_components/moment/locale/ca.js","app/bower_components/moment/locale/cs.js","app/bower_components/moment/locale/cv.js","app/bower_components/moment/locale/cy.js","app/bower_components/moment/locale/da.js","app/bower_components/moment/locale/de-at.js","app/bower_components/moment/locale/de.js","app/bower_components/moment/locale/el.js","app/bower_components/moment/locale/en-au.js","app/bower_components/moment/locale/en-ca.js","app/bower_components/moment/locale/en-gb.js","app/bower_components/moment/locale/eo.js","app/bower_components/moment/locale/es.js","app/bower_components/moment/locale/et.js","app/bower_components/moment/locale/eu.js","app/bower_components/moment/locale/fa.js","app/bower_components/moment/locale/fi.js","app/bower_components/moment/locale/fo.js","app/bower_components/moment/locale/fr-ca.js","app/bower_components/moment/locale/fr.js","app/bower_components/moment/locale/gl.js","app/bower_components/moment/locale/he.js","app/bower_components/moment/locale/hi.js","app/bower_components/moment/locale/hr.js","app/bower_components/moment/locale/hu.js","app/bower_components/moment/locale/hy-am.js","app/bower_components/moment/locale/id.js","app/bower_components/moment/locale/is.js","app/bower_components/moment/locale/it.js","app/bower_components/moment/locale/ja.js","app/bower_components/moment/locale/ka.js","app/bower_components/moment/locale/km.js","app/bower_components/moment/locale/ko.js","app/bower_components/moment/locale/lb.js","app/bower_components/moment/locale/lt.js","app/bower_components/moment/locale/lv.js","app/bower_components/moment/locale/mk.js","app/bower_components/moment/locale/ml.js","app/bower_components/moment/locale/mr.js","app/bower_components/moment/locale/ms-my.js","app/bower_components/moment/locale/my.js","app/bower_components/moment/locale/nb.js","app/bower_components/moment/locale/ne.js","app/bower_components/moment/locale/nl.js","app/bower_components/moment/locale/nn.js","app/bower_components/moment/locale/pl.js","app/bower_components/moment/locale/pt-br.js","app/bower_components/moment/locale/pt.js","app/bower_components/moment/locale/ro.js","app/bower_components/moment/locale/ru.js","app/bower_components/moment/locale/sk.js","app/bower_components/moment/locale/sl.js","app/bower_components/moment/locale/sq.js","app/bower_components/moment/locale/sr-cyrl.js","app/bower_components/moment/locale/sr.js","app/bower_components/moment/locale/sv.js","app/bower_components/moment/locale/ta.js","app/bower_components/moment/locale/th.js","app/bower_components/moment/locale/tl-ph.js","app/bower_components/moment/locale/tr.js","app/bower_components/moment/locale/tzm-latn.js","app/bower_components/moment/locale/tzm.js","app/bower_components/moment/locale/uk.js","app/bower_components/moment/locale/uz.js","app/bower_components/moment/locale/vi.js","app/bower_components/moment/locale/zh-cn.js","app/bower_components/moment/locale/zh-tw.js","app/bower_components/moment/min/locales.js","app/bower_components/moment/min/moment-with-locales.js"],"names":[],"mappings":"AAAA,GAAA,KAAA,QAAA,OAAA,OAAA,aAAA,cAEA,KAAA,OAAA,WACA,GAAA,YACA,UAAA,mCACA,aAAA,uCCCA,SAAA,WA6RA,QAAA,KAAA,EAAA,EAAA,GACA,OAAA,UAAA,QACA,IAAA,GAAA,MAAA,OAAA,EAAA,EAAA,CACA,KAAA,GAAA,MAAA,OAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CACA,SAAA,KAAA,IAAA,OAAA,iBAIA,QAAA,YAAA,EAAA,GACA,MAAA,gBAAA,KAAA,EAAA,GAGA,QAAA,uBAGA,OACA,OAAA,EACA,gBACA,eACA,SAAA,GACA,cAAA,EACA,WAAA,EACA,aAAA,KACA,eAAA,EACA,iBAAA,EACA,KAAA,GAIA,QAAA,UAAA,KACA,OAAA,+BAAA,GACA,mBAAA,UAAA,QAAA,MACA,QAAA,KAAA,wBAAA,KAIA,QAAA,WAAA,IAAA,IACA,GAAA,YAAA,CACA,OAAA,QAAA,WAKA,MAJA,aACA,SAAA,KACA,WAAA,GAEA,GAAA,MAAA,KAAA,YACA,IAGA,QAAA,iBAAA,KAAA,KACA,aAAA,QACA,SAAA,KACA,aAAA,OAAA,GAIA,QAAA,UAAA,KAAA,OACA,MAAA,UAAA,GACA,MAAA,cAAA,KAAA,KAAA,KAAA,GAAA,QAGA,QAAA,iBAAA,KAAA,QACA,MAAA,UAAA,GACA,MAAA,MAAA,aAAA,QAAA,KAAA,KAAA,KAAA,GAAA,SAmBA,QAAA,WAIA,QAAA,QAAA,OAAA,cACA,gBAAA,GACA,cAAA,QAEA,WAAA,KAAA,QACA,KAAA,GAAA,GAAA,OAAA,OAAA,IAIA,QAAA,UAAA,UACA,GAAA,iBAAA,qBAAA,UACA,MAAA,gBAAA,MAAA,EACA,SAAA,gBAAA,SAAA,EACA,OAAA,gBAAA,OAAA,EACA,MAAA,gBAAA,MAAA,EACA,KAAA,gBAAA,KAAA,EACA,MAAA,gBAAA,MAAA,EACA,QAAA,gBAAA,QAAA,EACA,QAAA,gBAAA,QAAA,EACA,aAAA,gBAAA,aAAA,CAGA,MAAA,eAAA,aACA,IAAA,QACA,IAAA,QACA,KAAA,MAGA,KAAA,OAAA,KACA,EAAA,MAIA,KAAA,SAAA,OACA,EAAA,SACA,GAAA,MAEA,KAAA,SAEA,KAAA,QAAA,OAAA,aAEA,KAAA,UAQA,QAAA,QAAA,EAAA,GACA,IAAA,GAAA,KAAA,GACA,WAAA,EAAA,KACA,EAAA,GAAA,EAAA,GAYA,OARA,YAAA,EAAA,cACA,EAAA,SAAA,EAAA,UAGA,WAAA,EAAA,aACA,EAAA,QAAA,EAAA,SAGA,EAGA,QAAA,YAAA,GAAA,MACA,GAAA,GAAA,KAAA,GAiCA,IA/BA,mBAAA,MAAA,mBACA,GAAA,iBAAA,KAAA,kBAEA,mBAAA,MAAA,KACA,GAAA,GAAA,KAAA,IAEA,mBAAA,MAAA,KACA,GAAA,GAAA,KAAA,IAEA,mBAAA,MAAA,KACA,GAAA,GAAA,KAAA,IAEA,mBAAA,MAAA,UACA,GAAA,QAAA,KAAA,SAEA,mBAAA,MAAA,OACA,GAAA,KAAA,KAAA,MAEA,mBAAA,MAAA,SACA,GAAA,OAAA,KAAA,QAEA,mBAAA,MAAA,UACA,GAAA,QAAA,KAAA,SAEA,mBAAA,MAAA,MACA,GAAA,IAAA,KAAA,KAEA,mBAAA,MAAA,UACA,GAAA,QAAA,KAAA,SAGA,iBAAA,OAAA,EACA,IAAA,IAAA,kBACA,KAAA,iBAAA,GACA,IAAA,KAAA,MACA,mBAAA,OACA,GAAA,MAAA,IAKA,OAAA,IAGA,QAAA,UAAA,QACA,MAAA,GAAA,OACA,KAAA,KAAA,QAEA,KAAA,MAAA,QAMA,QAAA,cAAA,OAAA,aAAA,WAIA,IAHA,GAAA,QAAA,GAAA,KAAA,IAAA,QACA,KAAA,QAAA,EAEA,OAAA,OAAA,cACA,OAAA,IAAA,MAEA,QAAA,KAAA,UAAA,IAAA,GAAA,KAAA,OAGA,QAAA,2BAAA,KAAA,OACA,GAAA,MAAA,aAAA,EAAA,OAAA,EAUA,OARA,KAAA,OAAA,MAAA,QAAA,KAAA,QACA,IAAA,MAAA,OAAA,KAAA,QACA,KAAA,QAAA,IAAA,IAAA,OAAA,KAAA,QAAA,UACA,IAAA,OAGA,IAAA,cAAA,OAAA,KAAA,QAAA,IAAA,IAAA,OAAA,KAEA,IAGA,QAAA,mBAAA,KAAA,OACA,GAAA,IAUA,OATA,OAAA,OAAA,MAAA,MACA,KAAA,SAAA,OACA,IAAA,0BAAA,KAAA,QAEA,IAAA,0BAAA,MAAA,MACA,IAAA,cAAA,IAAA,aACA,IAAA,QAAA,IAAA,QAGA,IAIA,QAAA,aAAA,UAAA,MACA,MAAA,UAAA,IAAA,QACA,GAAA,KAAA,GAUA,OARA,QAAA,QAAA,OAAA,UACA,gBAAA,KAAA,YAAA,KAAA,uDAAA,KAAA,qBACA,IAAA,IAAA,IAAA,OAAA,OAAA,KAGA,IAAA,gBAAA,MAAA,IAAA,IACA,IAAA,OAAA,SAAA,IAAA,QACA,gCAAA,KAAA,IAAA,WACA,MAIA,QAAA,iCAAA,IAAA,SAAA,SAAA,cACA,GAAA,cAAA,SAAA,cACA,KAAA,SAAA,MACA,OAAA,SAAA,OACA,cAAA,MAAA,cAAA,EAAA,aAEA,cACA,IAAA,GAAA,SAAA,IAAA,GAAA,aAAA,UAEA,MACA,UAAA,IAAA,OAAA,UAAA,IAAA,QAAA,KAAA,UAEA,QACA,eAAA,IAAA,UAAA,IAAA,SAAA,OAAA,UAEA,cACA,OAAA,aAAA,IAAA,MAAA,QAKA,QAAA,SAAA,OACA,MAAA,mBAAA,OAAA,UAAA,SAAA,KAAA,OAGA,QAAA,QAAA,OACA,MAAA,kBAAA,OAAA,UAAA,SAAA,KAAA,QACA,gBAAA,MAIA,QAAA,eAAA,OAAA,OAAA,aACA,GAGA,GAHA,IAAA,KAAA,IAAA,OAAA,OAAA,OAAA,QACA,WAAA,KAAA,IAAA,OAAA,OAAA,OAAA,QACA,MAAA,CAEA,KAAA,EAAA,EAAA,IAAA,EAAA,KACA,aAAA,OAAA,KAAA,OAAA,KACA,aAAA,MAAA,OAAA,MAAA,MAAA,OAAA,MACA,OAGA,OAAA,OAAA,WAGA,QAAA,gBAAA,OACA,GAAA,MAAA,CACA,GAAA,SAAA,MAAA,cAAA,QAAA,QAAA,KACA,OAAA,YAAA,QAAA,eAAA,UAAA,QAEA,MAAA,OAGA,QAAA,sBAAA,aACA,GACA,gBACA,KAFA,kBAIA,KAAA,OAAA,aACA,WAAA,YAAA,QACA,eAAA,eAAA,MACA,iBACA,gBAAA,gBAAA,YAAA,OAKA,OAAA,iBAGA,QAAA,UAAA,OACA,GAAA,OAAA,MAEA,IAAA,IAAA,MAAA,QAAA,QACA,MAAA,EACA,OAAA,UAEA,CAAA,GAAA,IAAA,MAAA,QAAA,SAKA,MAJA,OAAA,GACA,OAAA,QAMA,OAAA,OAAA,SAAA,OAAA,OACA,GAAA,GAAA,OACA,OAAA,OAAA,QAAA,OACA,UAYA,IAVA,gBAAA,UACA,MAAA,OACA,OAAA,WAGA,OAAA,SAAA,GACA,GAAA,GAAA,SAAA,MAAA,IAAA,OAAA,EACA,OAAA,QAAA,KAAA,OAAA,QAAA,EAAA,QAAA,KAGA,MAAA,MACA,MAAA,QAAA,MAGA,KAAA,EAAA,EAAA,MAAA,EAAA,IACA,QAAA,KAAA,OAAA,GAEA,OAAA,UAKA,QAAA,OAAA,qBACA,GAAA,gBAAA,oBACA,MAAA,CAUA,OARA,KAAA,eAAA,SAAA,iBAEA,MADA,eAAA,EACA,KAAA,MAAA,eAEA,KAAA,KAAA,gBAIA,MAGA,QAAA,aAAA,KAAA,OACA,MAAA,IAAA,MAAA,KAAA,IAAA,KAAA,MAAA,EAAA,IAAA,aAGA,QAAA,aAAA,KAAA,IAAA,KACA,MAAA,YAAA,QAAA,KAAA,GAAA,GAAA,IAAA,MAAA,IAAA,KAAA,KAGA,QAAA,YAAA,MACA,MAAA,YAAA,MAAA,IAAA,IAGA,QAAA,YAAA,MACA,MAAA,MAAA,IAAA,GAAA,KAAA,MAAA,GAAA,KAAA,MAAA,EAGA,QAAA,eAAA,GACA,GAAA,SACA,GAAA,IAAA,KAAA,EAAA,IAAA,WACA,SACA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,OAAA,GAAA,MACA,EAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,YAAA,EAAA,GAAA,MAAA,EAAA,GAAA,QAAA,KACA,EAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IACA,KAAA,EAAA,GAAA,QAAA,IAAA,EAAA,GAAA,SACA,IAAA,EAAA,GAAA,SACA,IAAA,EAAA,GAAA,cAAA,KACA,EAAA,GAAA,QAAA,GAAA,EAAA,GAAA,QAAA,GAAA,OACA,EAAA,GAAA,QAAA,GAAA,EAAA,GAAA,QAAA,GAAA,OACA,EAAA,GAAA,aAAA,GAAA,EAAA,GAAA,aAAA,IAAA,YACA,GAEA,EAAA,IAAA,qBAAA,KAAA,UAAA,SAAA,QACA,SAAA,MAGA,EAAA,IAAA,SAAA,UAIA,QAAA,SAAA,GAiBA,MAhBA,OAAA,EAAA,WACA,EAAA,UAAA,MAAA,EAAA,GAAA,YACA,EAAA,IAAA,SAAA,IACA,EAAA,IAAA,QACA,EAAA,IAAA,eACA,EAAA,IAAA,YACA,EAAA,IAAA,gBACA,EAAA,IAAA,gBAEA,EAAA,UACA,EAAA,SAAA,EAAA,UACA,IAAA,EAAA,IAAA,eACA,IAAA,EAAA,IAAA,aAAA,QACA,EAAA,IAAA,UAAA,YAGA,EAAA,SAGA,QAAA,iBAAA,KACA,MAAA,KAAA,IAAA,cAAA,QAAA,IAAA,KAAA,IAMA,QAAA,cAAA,OAGA,IAFA,GAAA,GAAA,KAAA,OAAA,MAAA,EAAA,EAEA,EAAA,MAAA,QAAA,CAKA,IAJA,MAAA,gBAAA,MAAA,IAAA,MAAA,KACA,EAAA,MAAA,OACA,KAAA,gBAAA,MAAA,EAAA,IACA,KAAA,KAAA,KAAA,MAAA,KAAA,KACA,EAAA,GAAA,CAEA,GADA,OAAA,WAAA,MAAA,MAAA,EAAA,GAAA,KAAA,MAEA,MAAA,OAEA,IAAA,MAAA,KAAA,QAAA,GAAA,cAAA,MAAA,MAAA,IAAA,EAAA,EAEA,KAEA,KAEA,IAEA,MAAA,MAGA,QAAA,YAAA,MACA,GAAA,WAAA,IACA,KAAA,QAAA,OAAA,UACA,IACA,UAAA,OAAA,SACA,QAAA,YAAA,MAEA,OAAA,OAAA,WACA,MAAA,IAEA,MAAA,SAAA,MAIA,QAAA,QAAA,MAAA,OACA,GAAA,KAAA,IACA,OAAA,OAAA,QACA,IAAA,MAAA,QACA,MAAA,OAAA,SAAA,QAAA,OAAA,QACA,OAAA,OAAA,SAAA,IAEA,IAAA,GAAA,SAAA,IAAA,GAAA,MACA,OAAA,aAAA,KAAA,GACA,KAEA,OAAA,OAAA,QAoNA,QAAA,wBAAA,OACA,MAAA,OAAA,MAAA,YACA,MAAA,QAAA,WAAA,IAEA,MAAA,QAAA,MAAA,IAGA,QAAA,oBAAA,QACA,GAAA,GAAA,OAAA,MAAA,OAAA,MAAA,iBAEA,KAAA,EAAA,EAAA,OAAA,MAAA,OAAA,OAAA,EAAA,IAEA,MAAA,GADA,qBAAA,MAAA,IACA,qBAAA,MAAA,IAEA,uBAAA,MAAA,GAIA,OAAA,UAAA,KACA,GAAA,QAAA,EACA,KAAA,EAAA,EAAA,OAAA,EAAA,IACA,QAAA,MAAA,YAAA,UAAA,MAAA,GAAA,KAAA,IAAA,QAAA,MAAA,EAEA,OAAA,SAKA,QAAA,cAAA,EAAA,QACA,MAAA,GAAA,WAIA,OAAA,aAAA,OAAA,EAAA,cAEA,gBAAA,UACA,gBAAA,QAAA,mBAAA,SAGA,gBAAA,QAAA,IATA,EAAA,aAAA,cAYA,QAAA,cAAA,OAAA,QAGA,QAAA,6BAAA,OACA,MAAA,QAAA,eAAA,QAAA,MAHA,GAAA,GAAA,CAOA,KADA,sBAAA,UAAA,EACA,GAAA,GAAA,sBAAA,KAAA,SACA,OAAA,OAAA,QAAA,sBAAA,6BACA,sBAAA,UAAA,EACA,GAAA,CAGA,OAAA,QAUA,QAAA,uBAAA,MAAA,QACA,GAAA,GAAA,OAAA,OAAA,OACA,QAAA,OACA,IAAA,IACA,MAAA,mBACA,KAAA,OACA,MAAA,sBACA,KAAA,OACA,IAAA,OACA,IAAA,OACA,MAAA,QAAA,qBAAA,yBACA,KAAA,IACA,IAAA,IACA,IAAA,IACA,MAAA,uBACA,KAAA,SACA,IAAA,QACA,IAAA,QACA,IAAA,QACA,MAAA,QAAA,oBAAA,wBACA,KAAA,IACA,GAAA,OACA,MAAA,mBAGA,KAAA,KACA,GAAA,OACA,MAAA,oBAGA,KAAA,MACA,GAAA,OACA,MAAA,sBAGA,KAAA,MACA,MAAA,2BACA,KAAA,MACA,IAAA,OACA,IAAA,KACA,IAAA,MACA,IAAA,OACA,MAAA,eACA,KAAA,IACA,IAAA,IACA,MAAA,QAAA,QAAA,cACA,KAAA,IACA,MAAA,mBACA,KAAA,IACA,MAAA,sBACA,KAAA,IACA,IAAA,KACA,MAAA,mBACA,KAAA,IACA,MAAA,YACA,KAAA,OACA,MAAA,iBACA,KAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,MAAA,QAAA,oBAAA,wBACA,KAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,MAAA,yBACA,KAAA,KACA,MAAA,QAAA,OAAA,QAAA,cAAA,OAAA,QAAA,oBACA,SAEA,MADA,GAAA,GAAA,QAAA,aAAA,eAAA,MAAA,QAAA,KAAA,KAAA,OAKA,QAAA,2BAAA,QACA,OAAA,QAAA,EACA,IAAA,mBAAA,OAAA,MAAA,wBACA,QAAA,kBAAA,kBAAA,OAAA,OACA,OAAA,QAAA,IAAA,MAAA,wBAAA,IAAA,EAAA,GACA,UAAA,GAAA,MAAA,IAAA,MAAA,MAAA,GAEA,OAAA,MAAA,MAAA,IAAA,QAAA,QAIA,QAAA,yBAAA,MAAA,MAAA,QACA,GAAA,GAAA,cAAA,OAAA,EAEA,QAAA,OAEA,IAAA,IACA,MAAA,QACA,cAAA,OAAA,GAAA,MAAA,OAAA,GAEA,MAEA,KAAA,IACA,IAAA,KACA,MAAA,QACA,cAAA,OAAA,MAAA,OAAA,EAEA,MACA,KAAA,MACA,IAAA,OACA,EAAA,OAAA,QAAA,YAAA,MAAA,MAAA,OAAA,SAEA,MAAA,EACA,cAAA,OAAA,EAEA,OAAA,IAAA,aAAA,KAEA,MAEA,KAAA,IACA,IAAA,KACA,MAAA,QACA,cAAA,MAAA,MAAA,OAEA,MACA,KAAA,KACA,MAAA,QACA,cAAA,MAAA,MAAA,SACA,MAAA,MAAA,WAAA,GAAA,KAEA,MAEA,KAAA,MACA,IAAA,OACA,MAAA,QACA,OAAA,WAAA,MAAA,OAGA,MAEA,KAAA,KACA,cAAA,MAAA,OAAA,kBAAA,MACA,MACA,KAAA,OACA,IAAA,QACA,IAAA,SACA,cAAA,MAAA,MAAA,MACA,MAEA,KAAA,IACA,IAAA,IACA,OAAA,MAAA,OAAA,QAAA,KAAA,MACA,MAEA,KAAA,IACA,IAAA,KACA,OAAA,IAAA,SAAA,CAEA,KAAA,IACA,IAAA,KACA,cAAA,MAAA,MAAA,MACA,MAEA,KAAA,IACA,IAAA,KACA,cAAA,QAAA,MAAA,MACA,MAEA,KAAA,IACA,IAAA,KACA,cAAA,QAAA,MAAA,MACA,MAEA,KAAA,IACA,IAAA,KACA,IAAA,MACA,IAAA,OACA,cAAA,aAAA,MAAA,KAAA,KAAA,OACA,MAEA,KAAA,IACA,OAAA,GAAA,GAAA,MAAA,MAAA,OACA,MAEA,KAAA,IACA,OAAA,GAAA,GAAA,MAAA,IAAA,WAAA,OACA,MAEA,KAAA,IACA,IAAA,KACA,OAAA,SAAA,EACA,OAAA,KAAA,0BAAA,MACA,MAEA,KAAA,KACA,IAAA,MACA,IAAA,OACA,EAAA,OAAA,QAAA,cAAA,OAEA,MAAA,GACA,OAAA,GAAA,OAAA,OACA,OAAA,GAAA,EAAA,GAEA,OAAA,IAAA,eAAA,KAEA,MAEA,KAAA,IACA,IAAA,KACA,IAAA,IACA,IAAA,KACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,MAAA,MAAA,OAAA,EAAA,EAEA,KAAA,OACA,IAAA,OACA,IAAA,QACA,MAAA,MAAA,OAAA,EAAA,GACA,QACA,OAAA,GAAA,OAAA,OACA,OAAA,GAAA,OAAA,MAAA,OAEA,MACA,KAAA,KACA,IAAA,KACA,OAAA,GAAA,OAAA,OACA,OAAA,GAAA,OAAA,OAAA,kBAAA,QAIA,QAAA,uBAAA,QACA,GAAA,GAAA,SAAA,KAAA,QAAA,IAAA,IAAA,IAEA,GAAA,OAAA,GACA,MAAA,EAAA,IAAA,MAAA,EAAA,GAAA,MAAA,EAAA,GACA,IAAA,EACA,IAAA,EAMA,SAAA,IAAA,EAAA,GAAA,OAAA,GAAA,MAAA,WAAA,SAAA,EAAA,GAAA,MACA,KAAA,IAAA,EAAA,EAAA,GACA,QAAA,IAAA,EAAA,EAAA,KAEA,IAAA,OAAA,QAAA,MAAA,IACA,IAAA,OAAA,QAAA,MAAA,IAEA,SAAA,IAAA,EAAA,GAAA,OAAA,GAAA,MAAA,WAAA,SAAA,IAAA,KAAA,MACA,KAAA,IAAA,EAAA,EAAA,GAEA,MAAA,EAAA,GAEA,QAAA,EAAA,EACA,IAAA,WACA,MAIA,QAFA,MAAA,EAAA,EAEA,EAAA,EAAA,IAGA,KAGA,KAAA,mBAAA,SAAA,KAAA,QAAA,IAAA,KAEA,OAAA,GAAA,MAAA,KAAA,KACA,OAAA,WAAA,KAAA,UAOA,QAAA,gBAAA,QACA,GAAA,GAAA,KAAA,YAAA,UAAA,QAEA,KAAA,OAAA,GAAA,CA6BA,IAzBA,YAAA,iBAAA,QAGA,OAAA,IAAA,MAAA,OAAA,GAAA,OAAA,MAAA,OAAA,GAAA,QACA,sBAAA,QAIA,OAAA,aACA,UAAA,IAAA,OAAA,GAAA,MAAA,YAAA,OAEA,OAAA,WAAA,WAAA,aACA,OAAA,IAAA,oBAAA,GAGA,KAAA,YAAA,UAAA,EAAA,OAAA,YACA,OAAA,GAAA,OAAA,KAAA,cACA,OAAA,GAAA,MAAA,KAAA,cAQA,EAAA,EAAA,EAAA,GAAA,MAAA,OAAA,GAAA,KAAA,EACA,OAAA,GAAA,GAAA,MAAA,GAAA,YAAA,EAIA,MAAA,EAAA,EAAA,IACA,OAAA,GAAA,GAAA,MAAA,GAAA,MAAA,OAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAIA,MAAA,OAAA,GAAA,OACA,IAAA,OAAA,GAAA,SACA,IAAA,OAAA,GAAA,SACA,IAAA,OAAA,GAAA,eACA,OAAA,UAAA,EACA,OAAA,GAAA,MAAA,GAGA,OAAA,IAAA,OAAA,QAAA,YAAA,UAAA,MAAA,KAAA,OAGA,MAAA,OAAA,MACA,OAAA,GAAA,cAAA,OAAA,GAAA,gBAAA,OAAA,MAGA,OAAA,WACA,OAAA,GAAA,MAAA,KAIA,QAAA,gBAAA,QACA,GAAA,gBAEA,QAAA,KAIA,gBAAA,qBAAA,OAAA,IACA,OAAA,IACA,gBAAA,KACA,gBAAA,MACA,gBAAA,KAAA,gBAAA,KACA,gBAAA,KACA,gBAAA,OACA,gBAAA,OACA,gBAAA,aAGA,eAAA,SAGA,QAAA,kBAAA,QACA,GAAA,KAAA,GAAA,KACA,OAAA,QAAA,SAEA,IAAA,iBACA,IAAA,cACA,IAAA,eAGA,IAAA,cAAA,IAAA,WAAA,IAAA,WAKA,QAAA,6BAAA,QACA,GAAA,OAAA,KAAA,OAAA,SAEA,WADA,UAAA,OAIA,QAAA,MACA,OAAA,IAAA,OAAA,CAGA,IACA,GAAA,YAAA,OAAA,MAAA,QADA,OAAA,GAAA,OAAA,GAEA,aAAA,OAAA,OACA,uBAAA,CAIA,KAFA,OAAA,aAAA,OAAA,GAAA,OAAA,SAAA,MAAA,sBAEA,EAAA,EAAA,EAAA,OAAA,OAAA,IACA,MAAA,OAAA,GACA,aAAA,OAAA,MAAA,sBAAA,MAAA,cAAA,GACA,cACA,QAAA,OAAA,OAAA,EAAA,OAAA,QAAA,cACA,QAAA,OAAA,GACA,OAAA,IAAA,YAAA,KAAA,SAEA,OAAA,OAAA,MAAA,OAAA,QAAA,aAAA,YAAA,QACA,wBAAA,YAAA,QAGA,qBAAA,QACA,YACA,OAAA,IAAA,OAAA,EAGA,OAAA,IAAA,aAAA,KAAA,OAEA,wBAAA,MAAA,YAAA,SAEA,OAAA,UAAA,aACA,OAAA,IAAA,aAAA,KAAA,MAKA,QAAA,IAAA,cAAA,aAAA,uBACA,OAAA,OAAA,GACA,OAAA,IAAA,YAAA,KAAA,QAIA,OAAA,IAAA,WAAA,GAAA,OAAA,GAAA,OAAA,KACA,OAAA,IAAA,QAAA,WAGA,OAAA,OAAA,OAAA,GAAA,MAAA,KACA,OAAA,GAAA,OAAA,IAGA,OAAA,SAAA,GAAA,KAAA,OAAA,GAAA,QACA,OAAA,GAAA,MAAA,GAEA,eAAA,QACA,cAAA,QAGA,QAAA,gBAAA,GACA,MAAA,GAAA,QAAA,sCAAA,SAAA,QAAA,GAAA,GAAA,GAAA,IACA,MAAA,KAAA,IAAA,IAAA,KAKA,QAAA,cAAA,GACA,MAAA,GAAA,QAAA,yBAAA,QAIA,QAAA,4BAAA,QACA,GAAA,YACA,WAEA,YACA,EACA,YAEA,IAAA,IAAA,OAAA,GAAA,OAGA,MAFA,QAAA,IAAA,eAAA,OACA,OAAA,GAAA,GAAA,MAAA,KAIA,KAAA,EAAA,EAAA,EAAA,OAAA,GAAA,OAAA,IACA,aAAA,EACA,WAAA,cAAA,QACA,MAAA,OAAA,UACA,WAAA,QAAA,OAAA,SAEA,WAAA,IAAA,sBACA,WAAA,GAAA,OAAA,GAAA,GACA,4BAAA,YAEA,QAAA,cAKA,cAAA,WAAA,IAAA,cAGA,cAAA,GAAA,WAAA,IAAA,aAAA,OAEA,WAAA,IAAA,MAAA,cAEA,MAAA,aAAA,YAAA,gBACA,YAAA,aACA,WAAA,YAIA,QAAA,OAAA,YAAA,YAIA,QAAA,UAAA,QACA,GAAA,GAAA,EACA,OAAA,OAAA,GACA,MAAA,SAAA,KAAA,OAEA,IAAA,MAAA,CAEA,IADA,OAAA,IAAA,KAAA,EACA,EAAA,EAAA,EAAA,SAAA,OAAA,EAAA,EAAA,IACA,GAAA,SAAA,GAAA,GAAA,KAAA,QAAA,CAEA,OAAA,GAAA,SAAA,GAAA,IAAA,MAAA,IAAA,IACA,OAGA,IAAA,EAAA,EAAA,EAAA,SAAA,OAAA,EAAA,EAAA,IACA,GAAA,SAAA,GAAA,GAAA,KAAA,QAAA,CACA,OAAA,IAAA,SAAA,GAAA,EACA,OAGA,OAAA,MAAA,sBACA,OAAA,IAAA,KAEA,4BAAA,YAEA,QAAA,UAAA,EAKA,QAAA,oBAAA,QACA,SAAA,QACA,OAAA,YAAA,UACA,QAAA,SACA,OAAA,wBAAA,SAIA,QAAA,KAAA,IAAA,IACA,GAAA,GAAA,MACA,KAAA,EAAA,EAAA,EAAA,IAAA,SAAA,EACA,IAAA,KAAA,GAAA,IAAA,GAAA,GAEA,OAAA,KAGA,QAAA,mBAAA,QACA,GAAA,SAAA,MAAA,OAAA,EACA,SAAA,UACA,OAAA,GAAA,GAAA,MACA,OAAA,OACA,OAAA,GAAA,GAAA,OAAA,OACA,QAAA,QAAA,gBAAA,KAAA,QACA,OAAA,GAAA,GAAA,OAAA,QAAA,IACA,gBAAA,OACA,mBAAA,QACA,QAAA,QACA,OAAA,GAAA,IAAA,MAAA,MAAA,GAAA,SAAA,KACA,MAAA,UAAA,IAAA,MAEA,eAAA,SACA,gBAAA,OACA,eAAA,QACA,gBAAA,OAEA,OAAA,GAAA,GAAA,MAAA,OAEA,OAAA,wBAAA,QAIA,QAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAGA,GAAA,MAAA,GAAA,MAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAMA,OAHA,MAAA,GACA,KAAA,YAAA,GAEA,KAGA,QAAA,aAAA,GACA,GAAA,MAAA,GAAA,MAAA,KAAA,IAAA,MAAA,KAAA,WAIA,OAHA,MAAA,GACA,KAAA,eAAA,GAEA,KAGA,QAAA,cAAA,MAAA,QACA,GAAA,gBAAA,OACA,GAAA,MAAA,QAKA,GADA,MAAA,OAAA,cAAA,OACA,gBAAA,OACA,MAAA,UALA,OAAA,SAAA,MAAA,GASA,OAAA,OASA,QAAA,mBAAA,OAAA,OAAA,cAAA,SAAA,QACA,MAAA,QAAA,aAAA,QAAA,IAAA,cAAA,OAAA,UAGA,QAAA,cAAA,eAAA,cAAA,QACA,GAAA,UAAA,OAAA,SAAA,gBAAA,MACA,QAAA,MAAA,SAAA,GAAA,MACA,QAAA,MAAA,SAAA,GAAA,MACA,MAAA,MAAA,SAAA,GAAA,MACA,KAAA,MAAA,SAAA,GAAA,MACA,OAAA,MAAA,SAAA,GAAA,MACA,MAAA,MAAA,SAAA,GAAA,MAEA,KAAA,QAAA,uBAAA,IAAA,IAAA,UACA,IAAA,UAAA,MACA,QAAA,uBAAA,IAAA,KAAA,UACA,IAAA,QAAA,MACA,MAAA,uBAAA,IAAA,KAAA,QACA,IAAA,OAAA,MACA,KAAA,uBAAA,IAAA,KAAA,OACA,IAAA,SAAA,MACA,OAAA,uBAAA,IAAA,KAAA,SACA,IAAA,QAAA,OAAA,KAAA,MAKA,OAHA,MAAA,GAAA,cACA,KAAA,IAAA,eAAA,EACA,KAAA,GAAA,OACA,kBAAA,SAAA,MAgBA,QAAA,YAAA,IAAA,eAAA,sBACA,GAEA,gBAFA,IAAA,qBAAA,eACA,gBAAA,qBAAA,IAAA,KAaA,OATA,iBAAA,MACA,iBAAA,GAGA,IAAA,EAAA,kBACA,iBAAA,GAGA,eAAA,OAAA,KAAA,IAAA,gBAAA,MAEA,KAAA,KAAA,KAAA,eAAA,YAAA,GACA,KAAA,eAAA,QAKA,QAAA,oBAAA,KAAA,KAAA,QAAA,qBAAA,gBACA,GAAA,WAAA,UAAA,EAAA,YAAA,KAAA,EAAA,GAAA,WAOA,OALA,GAAA,IAAA,EAAA,EAAA,EACA,QAAA,MAAA,QAAA,QAAA,eACA,UAAA,eAAA,GAAA,EAAA,qBAAA,EAAA,IAAA,eAAA,EAAA,EAAA,GACA,UAAA,GAAA,KAAA,IAAA,QAAA,gBAAA,UAAA,GAGA,KAAA,UAAA,EAAA,KAAA,KAAA,EACA,UAAA,UAAA,EAAA,UAAA,WAAA,KAAA,GAAA,WAQA,QAAA,YAAA,QACA,GAEA,KAFA,MAAA,OAAA,GACA,OAAA,OAAA,EAKA,OAFA,QAAA,QAAA,OAAA,SAAA,OAAA,WAAA,OAAA,IAEA,OAAA,OAAA,SAAA,WAAA,KAAA,MACA,OAAA,SAAA,WAAA,KAGA,gBAAA,SACA,OAAA,GAAA,MAAA,OAAA,QAAA,SAAA,QAGA,OAAA,SAAA,OACA,GAAA,QAAA,OAAA,IACA,OACA,QAAA,QACA,2BAAA,QAEA,4BAAA,QAGA,kBAAA,QAGA,IAAA,GAAA,QAAA,QACA,IAAA,WAEA,IAAA,IAAA,EAAA,KACA,IAAA,SAAA,WAGA,MAyCA,QAAA,QAAA,GAAA,SACA,GAAA,KAAA,CAIA,IAHA,IAAA,QAAA,QAAA,QAAA,QAAA,MACA,QAAA,QAAA,KAEA,QAAA,OACA,MAAA,SAGA,KADA,IAAA,QAAA,GACA,EAAA,EAAA,EAAA,QAAA,SAAA,EACA,QAAA,GAAA,IAAA,OACA,IAAA,QAAA,GAGA,OAAA,KA8sBA,QAAA,gBAAA,IAAA,OACA,GAAA,WAGA,OAAA,gBAAA,SACA,MAAA,IAAA,aAAA,YAAA,OAEA,gBAAA,QACA,KAIA,WAAA,KAAA,IAAA,IAAA,OACA,YAAA,IAAA,OAAA,QACA,IAAA,GAAA,OAAA,IAAA,OAAA,MAAA,IAAA,SAAA,MAAA,YACA,KAGA,QAAA,WAAA,IAAA,MACA,MAAA,KAAA,GAAA,OAAA,IAAA,OAAA,MAAA,IAAA,QAGA,QAAA,WAAA,IAAA,KAAA,OACA,MAAA,UAAA,KACA,eAAA,IAAA,OAEA,IAAA,GAAA,OAAA,IAAA,OAAA,MAAA,IAAA,MAAA,OAIA,QAAA,cAAA,KAAA,UACA,MAAA,UAAA,OACA,MAAA,OAAA,OACA,UAAA,KAAA,KAAA,OACA,OAAA,aAAA,KAAA,UACA,MAEA,UAAA,KAAA,OAkCA,QAAA,aAAA,MAEA,MAAA,KAAA,KAAA,OAGA,QAAA,aAAA,OAGA,MAAA,QAAA,MAAA,IAmLA,QAAA,oBAAA,MACA,OAAA,SAAA,GAAA,MAAA,WACA,MAAA,MAAA,MAAA,OA2DA,QAAA,YAAA,iBAEA,mBAAA,SAGA,gBAAA,YAAA,OAEA,YAAA,OADA,gBACA,UACA,uGAGA,QAEA,QA//EA,IAzVA,GAAA,QAIA,gBAGA,EANA,QAAA,QAEA,YAAA,mBAAA,QAAA,OAAA,KAEA,MAAA,KAAA,MACA,eAAA,OAAA,UAAA,eAGA,KAAA,EACA,MAAA,EACA,KAAA,EACA,KAAA,EACA,OAAA,EACA,OAAA,EACA,YAAA,EAGA,WAGA,oBAGA,UAAA,mBAAA,SAAA,QAAA,OAAA,QAGA,gBAAA,sBACA,wBAAA,uDAIA,iBAAA,gIAGA,iBAAA,qKACA,sBAAA,6CAGA,yBAAA,QACA,2BAAA,UACA,0BAAA,UACA,yBAAA,gBACA,iBAAA,MACA,eAAA,mHACA,mBAAA,uBACA,YAAA,KACA,mBAAA,aACA,sBAAA,yBAGA,mBAAA,KACA,oBAAA,OACA,sBAAA,QACA,qBAAA,QACA,oBAAA,aACA,uBAAA,WAIA,SAAA,4IAEA,UAAA,uBAEA,WACA,eAAA,0BACA,aAAA,sBACA,eAAA,oBACA,aAAA,iBACA,WAAA,gBAIA,WACA,gBAAA,6BACA,WAAA,wBACA,QAAA,mBACA,KAAA,cAIA,qBAAA,kBAIA,wBADA,0CAAA,MAAA,MAEA,aAAA,EACA,QAAA,IACA,QAAA,IACA,MAAA,KACA,KAAA,MACA,OAAA,OACA,MAAA,UAGA,aACA,GAAA,cACA,EAAA,SACA,EAAA,SACA,EAAA,OACA,EAAA,MACA,EAAA,OACA,EAAA,OACA,EAAA,UACA,EAAA,QACA,EAAA,UACA,EAAA,OACA,IAAA,YACA,EAAA,UACA,EAAA,aACA,GAAA,WACA,GAAA,eAGA,gBACA,UAAA,YACA,WAAA,aACA,QAAA,UACA,SAAA,WACA,YAAA,eAIA,mBAGA,wBACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,IAIA,iBAAA,gBAAA,MAAA,KACA,aAAA,kBAAA,MAAA,KAEA,sBACA,EAAA,WACA,MAAA,MAAA,QAAA,GAEA,IAAA,SAAA,QACA,MAAA,MAAA,aAAA,YAAA,KAAA,SAEA,KAAA,SAAA,QACA,MAAA,MAAA,aAAA,OAAA,KAAA,SAEA,EAAA,WACA,MAAA,MAAA,QAEA,IAAA,WACA,MAAA,MAAA,aAEA,EAAA,WACA,MAAA,MAAA,OAEA,GAAA,SAAA,QACA,MAAA,MAAA,aAAA,YAAA,KAAA,SAEA,IAAA,SAAA,QACA,MAAA,MAAA,aAAA,cAAA,KAAA,SAEA,KAAA,SAAA,QACA,MAAA,MAAA,aAAA,SAAA,KAAA,SAEA,EAAA,WACA,MAAA,MAAA,QAEA,EAAA,WACA,MAAA,MAAA,WAEA,GAAA,WACA,MAAA,cAAA,KAAA,OAAA,IAAA,IAEA,KAAA,WACA,MAAA,cAAA,KAAA,OAAA,IAEA,MAAA,WACA,MAAA,cAAA,KAAA,OAAA,IAEA,OAAA,WACA,GAAA,GAAA,KAAA,OAAA,KAAA,GAAA,EAAA,IAAA,GACA,OAAA,MAAA,aAAA,KAAA,IAAA,GAAA,IAEA,GAAA,WACA,MAAA,cAAA,KAAA,WAAA,IAAA,IAEA,KAAA,WACA,MAAA,cAAA,KAAA,WAAA,IAEA,MAAA,WACA,MAAA,cAAA,KAAA,WAAA,IAEA,GAAA,WACA,MAAA,cAAA,KAAA,cAAA,IAAA,IAEA,KAAA,WACA,MAAA,cAAA,KAAA,cAAA,IAEA,MAAA,WACA,MAAA,cAAA,KAAA,cAAA,IAEA,EAAA,WACA,MAAA,MAAA,WAEA,EAAA,WACA,MAAA,MAAA,cAEA,EAAA,WACA,MAAA,MAAA,aAAA,SAAA,KAAA,QAAA,KAAA,WAAA,IAEA,EAAA,WACA,MAAA,MAAA,aAAA,SAAA,KAAA,QAAA,KAAA,WAAA,IAEA,EAAA,WACA,MAAA,MAAA,SAEA,EAAA,WACA,MAAA,MAAA,QAAA,IAAA,IAEA,EAAA,WACA,MAAA,MAAA,WAEA,EAAA,WACA,MAAA,MAAA,WAEA,EAAA,WACA,MAAA,OAAA,KAAA,eAAA,MAEA,GAAA,WACA,MAAA,cAAA,MAAA,KAAA,eAAA,IAAA,IAEA,IAAA,WACA,MAAA,cAAA,KAAA,eAAA,IAEA,KAAA,WACA,MAAA,cAAA,KAAA,eAAA,IAEA,EAAA,WACA,GAAA,IAAA,KAAA,OACA,EAAA,GAKA,OAJA,GAAA,IACA,GAAA,EACA,EAAA,KAEA,EAAA,aAAA,MAAA,EAAA,IAAA,GAAA,IAAA,aAAA,MAAA,GAAA,GAAA,IAEA,GAAA,WACA,GAAA,IAAA,KAAA,OACA,EAAA,GAKA,OAJA,GAAA,IACA,GAAA,EACA,EAAA,KAEA,EAAA,aAAA,MAAA,EAAA,IAAA,GAAA,aAAA,MAAA,GAAA,GAAA,IAEA,EAAA,WACA,MAAA,MAAA,YAEA,GAAA,WACA,MAAA,MAAA,YAEA,EAAA,WACA,MAAA,MAAA,WAEA,EAAA,WACA,MAAA,MAAA,QAEA,EAAA,WACA,MAAA,MAAA,YAIA,gBAEA,OAAA,SAAA,cAAA,WAAA,gBAAA,eAqEA,iBAAA,QACA,EAAA,iBAAA,MACA,qBAAA,EAAA,KAAA,gBAAA,qBAAA,GAAA,EAEA,MAAA,aAAA,QACA,EAAA,aAAA,MACA,qBAAA,EAAA,GAAA,SAAA,qBAAA,GAAA,EAEA,sBAAA,KAAA,SAAA,qBAAA,IAAA,GAybA,OAAA,OAAA,WAEA,IAAA,SAAA,QACA,GAAA,MAAA,CACA,KAAA,IAAA,QACA,KAAA,OAAA,GACA,kBAAA,MACA,KAAA,GAAA,KAEA,KAAA,IAAA,GAAA,IAKA,MAAA,qBAAA,GAAA,QAAA,KAAA,cAAA,OAAA,IAAA,UAAA,SAGA,QAAA,wFAAA,MAAA,KACA,OAAA,SAAA,GACA,MAAA,MAAA,QAAA,EAAA,UAGA,aAAA,kDAAA,MAAA,KACA,YAAA,SAAA,GACA,MAAA,MAAA,aAAA,EAAA,UAGA,YAAA,SAAA,UAAA,OAAA,QACA,GAAA,GAAA,IAAA,KAQA,KANA,KAAA,eACA,KAAA,gBACA,KAAA,oBACA,KAAA,sBAGA,EAAA,EAAA,GAAA,EAAA,IAAA,CAYA,GAVA,IAAA,OAAA,KAAA,IAAA,IACA,SAAA,KAAA,iBAAA,KACA,KAAA,iBAAA,GAAA,GAAA,QAAA,IAAA,KAAA,OAAA,IAAA,IAAA,QAAA,IAAA,IAAA,IAAA,KACA,KAAA,kBAAA,GAAA,GAAA,QAAA,IAAA,KAAA,YAAA,IAAA,IAAA,QAAA,IAAA,IAAA,IAAA,MAEA,QAAA,KAAA,aAAA,KACA,MAAA,IAAA,KAAA,OAAA,IAAA,IAAA,KAAA,KAAA,YAAA,IAAA,IACA,KAAA,aAAA,GAAA,GAAA,QAAA,MAAA,QAAA,IAAA,IAAA,MAGA,QAAA,SAAA,QAAA,KAAA,iBAAA,GAAA,KAAA,WACA,MAAA,EACA,IAAA,QAAA,QAAA,QAAA,KAAA,kBAAA,GAAA,KAAA,WACA,MAAA,EACA,KAAA,QAAA,KAAA,aAAA,GAAA,KAAA,WACA,MAAA,KAKA,UAAA,2DAAA,MAAA,KACA,SAAA,SAAA,GACA,MAAA,MAAA,UAAA,EAAA,QAGA,eAAA,8BAAA,MAAA,KACA,cAAA,SAAA,GACA,MAAA,MAAA,eAAA,EAAA,QAGA,aAAA,uBAAA,MAAA,KACA,YAAA,SAAA,GACA,MAAA,MAAA,aAAA,EAAA,QAGA,cAAA,SAAA,aACA,GAAA,GAAA,IAAA,KAMA,KAJA,KAAA,iBACA,KAAA,mBAGA,EAAA,EAAA,EAAA,EAAA,IAQA,GANA,KAAA,eAAA,KACA,IAAA,QAAA,IAAA,IAAA,IAAA,GACA,MAAA,IAAA,KAAA,SAAA,IAAA,IAAA,KAAA,KAAA,cAAA,IAAA,IAAA,KAAA,KAAA,YAAA,IAAA,IACA,KAAA,eAAA,GAAA,GAAA,QAAA,MAAA,QAAA,IAAA,IAAA,MAGA,KAAA,eAAA,GAAA,KAAA,aACA,MAAA,IAKA,iBACA,IAAA,YACA,GAAA,SACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,eAAA,SAAA,KACA,GAAA,QAAA,KAAA,gBAAA,IAOA,QANA,QAAA,KAAA,gBAAA,IAAA,iBACA,OAAA,KAAA,gBAAA,IAAA,eAAA,QAAA,mBAAA,SAAA,KACA,MAAA,KAAA,MAAA,KAEA,KAAA,gBAAA,KAAA,QAEA,QAGA,KAAA,SAAA,OAGA,MAAA,OAAA,MAAA,IAAA,cAAA,OAAA,IAGA,eAAA,gBACA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,OAAA,GACA,QAAA,KAAA,KAEA,QAAA,KAAA,MAIA,WACA,QAAA,gBACA,QAAA,mBACA,SAAA,eACA,QAAA,oBACA,SAAA,sBACA,SAAA,KAEA,SAAA,SAAA,IAAA,IAAA,KACA,GAAA,QAAA,KAAA,UAAA,IACA,OAAA,kBAAA,QAAA,OAAA,MAAA,KAAA,MAAA,QAGA,eACA,OAAA,QACA,KAAA,SACA,EAAA,gBACA,EAAA,WACA,GAAA,aACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,UACA,EAAA,UACA,GAAA,YACA,EAAA,SACA,GAAA,YAGA,aAAA,SAAA,OAAA,cAAA,OAAA,UACA,GAAA,QAAA,KAAA,cAAA,OACA,OAAA,kBAAA,QACA,OAAA,OAAA,cAAA,OAAA,UACA,OAAA,QAAA,MAAA,SAGA,WAAA,SAAA,KAAA,QACA,GAAA,QAAA,KAAA,cAAA,KAAA,EAAA,SAAA,OACA,OAAA,kBAAA,QAAA,OAAA,QAAA,OAAA,QAAA,MAAA,SAGA,QAAA,SAAA,QACA,MAAA,MAAA,SAAA,QAAA,KAAA,SAEA,SAAA,KACA,cAAA,UAEA,SAAA,SAAA,QACA,MAAA,SAGA,WAAA,SAAA,QACA,MAAA,SAGA,KAAA,SAAA,KACA,MAAA,YAAA,IAAA,KAAA,MAAA,IAAA,KAAA,MAAA,KAAA,MAGA,OACA,IAAA,EACA,IAAA,GAGA,aAAA,eACA,YAAA,WACA,MAAA,MAAA,gBA8yBA,OAAA,SAAA,MAAA,OAAA,OAAA,QACA,GAAA,EAiBA,OAfA,iBAAA,UACA,OAAA,OACA,OAAA,WAIA,KACA,EAAA,kBAAA,EACA,EAAA,GAAA,MACA,EAAA,GAAA,OACA,EAAA,GAAA,OACA,EAAA,QAAA,OACA,EAAA,QAAA,EACA,EAAA,IAAA,sBAEA,WAAA,IAGA,OAAA,6BAAA,EAEA,OAAA,wBAAA,UACA,4LAIA,SAAA,QACA,OAAA,GAAA,GAAA,MAAA,OAAA,IAAA,OAAA,QAAA,OAAA,OA0BA,OAAA,IAAA,WACA,GAAA,SAAA,MAAA,KAAA,UAAA,EAEA,OAAA,QAAA,WAAA,OAGA,OAAA,IAAA,WACA,GAAA,SAAA,MAAA,KAAA,UAAA,EAEA,OAAA,QAAA,UAAA,OAIA,OAAA,IAAA,SAAA,MAAA,OAAA,OAAA,QACA,GAAA,EAkBA,OAhBA,iBAAA,UACA,OAAA,OACA,OAAA,WAIA,KACA,EAAA,kBAAA,EACA,EAAA,SAAA,EACA,EAAA,QAAA,EACA,EAAA,GAAA,OACA,EAAA,GAAA,MACA,EAAA,GAAA,OACA,EAAA,QAAA,OACA,EAAA,IAAA,sBAEA,WAAA,GAAA;EAIA,OAAA,KAAA,SAAA,OACA,MAAA,QAAA,IAAA,QAIA,OAAA,SAAA,SAAA,MAAA,KACA,GAGA,MACA,IACA,SACA,QANA,SAAA,MAEA,MAAA,IA+DA,OAzDA,QAAA,WAAA,OACA,UACA,GAAA,MAAA,cACA,EAAA,MAAA,MACA,EAAA,MAAA,SAEA,gBAAA,QACA,YACA,IACA,SAAA,KAAA,MAEA,SAAA,aAAA,QAEA,MAAA,wBAAA,KAAA,SACA,KAAA,MAAA,MAAA,GAAA,GAAA,EACA,UACA,EAAA,EACA,EAAA,MAAA,MAAA,OAAA,KACA,EAAA,MAAA,MAAA,OAAA,KACA,EAAA,MAAA,MAAA,SAAA,KACA,EAAA,MAAA,MAAA,SAAA,KACA,GAAA,MAAA,MAAA,cAAA,QAEA,MAAA,iBAAA,KAAA,SACA,KAAA,MAAA,MAAA,GAAA,GAAA,EACA,SAAA,SAAA,KAIA,GAAA,KAAA,KAAA,WAAA,IAAA,QAAA,IAAA,KAEA,QAAA,MAAA,KAAA,EAAA,KAAA,MAEA,UACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,MAEA,gBAAA,YACA,QAAA,WAAA,MAAA,aACA,QAAA,kBAAA,OAAA,SAAA,MAAA,OAAA,SAAA,KAEA,YACA,SAAA,GAAA,QAAA,aACA,SAAA,EAAA,QAAA,QAGA,IAAA,GAAA,UAAA,UAEA,OAAA,WAAA,QAAA,WAAA,MAAA,aACA,IAAA,QAAA,MAAA,SAGA,KAIA,OAAA,QAAA,QAGA,OAAA,cAAA,UAGA,OAAA,SAAA,aAIA,OAAA,iBAAA,iBAIA,OAAA,aAAA,aAGA,OAAA,sBAAA,SAAA,UAAA,OACA,MAAA,wBAAA,aAAA,WACA,EAEA,QAAA,UACA,uBAAA,YAEA,uBAAA,WAAA,OACA,IAGA,OAAA,KAAA,UACA,wDACA,SAAA,IAAA,OACA,MAAA,QAAA,OAAA,IAAA,SAOA,OAAA,OAAA,SAAA,IAAA,QACA,GAAA,KAcA,OAbA,OAEA,KADA,mBAAA,QACA,OAAA,aAAA,IAAA,QAGA,OAAA,WAAA,KAGA,OACA,OAAA,SAAA,QAAA,OAAA,QAAA,OAIA,OAAA,QAAA,OAGA,OAAA,aAAA,SAAA,KAAA,QACA,MAAA,QAAA,QACA,OAAA,KAAA,KACA,QAAA,QACA,QAAA,MAAA,GAAA,SAEA,QAAA,MAAA,IAAA,QAGA,OAAA,OAAA,MAEA,QAAA,cAGA,SAAA,MACA,OAIA,OAAA,SAAA,UACA,gEACA,SAAA,KACA,MAAA,QAAA,WAAA,OAKA,OAAA,WAAA,SAAA,KACA,GAAA,OAMA,IAJA,KAAA,IAAA,SAAA,IAAA,QAAA,QACA,IAAA,IAAA,QAAA,QAGA,IACA,MAAA,QAAA,OAGA,KAAA,QAAA,KAAA,CAGA,GADA,OAAA,WAAA,KAEA,MAAA,OAEA,MAAA,KAGA,MAAA,cAAA,MAIA,OAAA,SAAA,SAAA,KACA,MAAA,eAAA,SACA,MAAA,KAAA,WAAA,IAAA,qBAIA,OAAA,WAAA,SAAA,KACA,MAAA,eAAA,UAGA,KAAA,EAAA,MAAA,OAAA,EAAA,GAAA,IAAA,EACA,SAAA,MAAA,GAGA,QAAA,eAAA,SAAA,OACA,MAAA,gBAAA,QAGA,OAAA,QAAA,SAAA,OACA,GAAA,GAAA,OAAA,IAAA,IAQA,OAPA,OAAA,MACA,OAAA,EAAA,IAAA,OAGA,EAAA,IAAA,iBAAA,EAGA,GAGA,OAAA,UAAA,WACA,MAAA,QAAA,MAAA,KAAA,WAAA,aAGA,OAAA,kBAAA,SAAA,OACA,MAAA,OAAA,QAAA,MAAA,OAAA,GAAA,KAAA,MAQA,OAAA,OAAA,GAAA,OAAA,WAEA,MAAA,WACA,MAAA,QAAA,OAGA,QAAA,WACA,OAAA,KAAA,GAAA,KAAA,KAAA,SAAA,IAGA,KAAA,WACA,MAAA,MAAA,OAAA,KAAA,MAGA,SAAA,WACA,MAAA,MAAA,QAAA,OAAA,MAAA,OAAA,qCAGA,OAAA,WACA,MAAA,MAAA,QAAA,GAAA,OAAA,MAAA,KAAA,IAGA,YAAA,WACA,GAAA,GAAA,OAAA,MAAA,KACA,OAAA,GAAA,EAAA,QAAA,EAAA,QAAA,KACA,kBAAA,MAAA,UAAA,YAEA,KAAA,SAAA,cAEA,aAAA,EAAA,gCAGA,aAAA,EAAA,mCAIA,QAAA,WACA,GAAA,GAAA,IACA,QACA,EAAA,OACA,EAAA,QACA,EAAA,OACA,EAAA,QACA,EAAA,UACA,EAAA,UACA,EAAA,iBAIA,QAAA,WACA,MAAA,SAAA,OAGA,aAAA,WACA,MAAA,MAAA,GACA,KAAA,WAAA,cAAA,KAAA,IAAA,KAAA,OAAA,OAAA,IAAA,KAAA,IAAA,OAAA,KAAA,KAAA,WAAA,GAGA,GAGA,aAAA,WACA,MAAA,WAAA,KAAA,MAGA,UAAA,WACA,MAAA,MAAA,IAAA,UAGA,IAAA,SAAA,eACA,MAAA,MAAA,KAAA,EAAA,gBAGA,MAAA,SAAA,eASA,MARA,MAAA,SACA,KAAA,KAAA,EAAA,eACA,KAAA,QAAA,EAEA,eACA,KAAA,IAAA,KAAA,gBAAA,MAGA,MAGA,OAAA,SAAA,aACA,GAAA,QAAA,aAAA,KAAA,aAAA,OAAA,cACA,OAAA,MAAA,aAAA,WAAA,SAGA,IAAA,YAAA,EAAA,OAEA,SAAA,YAAA,GAAA,YAEA,KAAA,SAAA,MAAA,MAAA,SACA,GAEA,MAAA,OAAA,WAFA,KAAA,OAAA,MAAA,MACA,SAAA,KAAA,KAAA,OAAA,KAAA,OA8BA,OA3BA,OAAA,eAAA,OAEA,SAAA,OAAA,UAAA,OAEA,KAAA,OAAA,KAAA,cAAA,KAAA,eAEA,OAAA,IAAA,KAAA,OAAA,KAAA,SAAA,KAAA,QAAA,KAAA,SAGA,WAAA,KAAA,OAAA,MAAA,QAAA,UACA,KAAA,OAAA,MAAA,QAAA,UAEA,YACA,KADA,KAAA,OAAA,OAAA,MAAA,QAAA,SAAA,QACA,KAAA,OAAA,OAAA,MAAA,QAAA,SAAA,SACA,QAAA,WAAA,KACA,SAAA,QACA,QAAA,MAGA,KAAA,KAAA,KACA,OAAA,WAAA,MAAA,KAAA,IACA,WAAA,MAAA,KAAA,IACA,SAAA,MAAA,KAAA,KACA,QAAA,OAAA,KAAA,UAAA,MACA,SAAA,OAAA,KAAA,UAAA,OACA,MAEA,QAAA,OAAA,SAAA,SAGA,KAAA,SAAA,KAAA,eACA,MAAA,QAAA,UAAA,GAAA,KAAA,KAAA,OAAA,OAAA,KAAA,UAAA,UAAA,gBAGA,QAAA,SAAA,eACA,MAAA,MAAA,KAAA,SAAA,gBAGA,SAAA,SAAA,MAGA,GAAA,KAAA,MAAA,SACA,IAAA,OAAA,IAAA,MAAA,QAAA,OACA,KAAA,KAAA,KAAA,IAAA,QAAA,GACA,OAAA,GAAA,KAAA,WACA,GAAA,KAAA,WACA,EAAA,KAAA,UACA,EAAA,KAAA,UACA,EAAA,KAAA,UACA,EAAA,KAAA,WAAA,UACA,OAAA,MAAA,OAAA,KAAA,aAAA,SAAA,OAAA,KAAA,OAAA,QAGA,WAAA,WACA,MAAA,YAAA,KAAA,SAGA,MAAA,WACA,MAAA,MAAA,OAAA,KAAA,QAAA,MAAA,GAAA,QACA,KAAA,OAAA,KAAA,QAAA,MAAA,GAAA,QAGA,IAAA,SAAA,OACA,GAAA,KAAA,KAAA,OAAA,KAAA,GAAA,YAAA,KAAA,GAAA,QACA,OAAA,OAAA,OACA,MAAA,aAAA,MAAA,KAAA,cACA,KAAA,IAAA,MAAA,IAAA,MAEA,KAIA,MAAA,aAAA,SAAA,GAEA,QAAA,SAAA,OAIA,OAHA,MAAA,eAAA,QAIA,IAAA,OACA,KAAA,MAAA,EAEA,KAAA,UACA,IAAA,QACA,KAAA,KAAA,EAEA,KAAA,OACA,IAAA,UACA,IAAA,MACA,KAAA,MAAA,EAEA,KAAA,OACA,KAAA,QAAA,EAEA,KAAA,SACA,KAAA,QAAA,EAEA,KAAA,SACA,KAAA,aAAA,GAgBA,MAXA,SAAA,MACA,KAAA,QAAA,GACA,YAAA,OACA,KAAA,WAAA,GAIA,YAAA,OACA,KAAA,MAAA,EAAA,KAAA,MAAA,KAAA,QAAA,IAGA,MAGA,MAAA,SAAA,OAEA,MADA,OAAA,eAAA,OACA,QAAA,WAAA,gBAAA,MACA,KAEA,KAAA,QAAA,OAAA,IAAA,EAAA,YAAA,MAAA,OAAA,OAAA,SAAA,EAAA,OAGA,QAAA,SAAA,MAAA,OACA,GAAA,QAEA,OADA,OAAA,eAAA,mBAAA,OAAA,MAAA,eACA,gBAAA,OACA,MAAA,OAAA,SAAA,OAAA,MAAA,OAAA,QACA,MAAA,QAEA,QAAA,OAAA,SAAA,QAAA,OAAA,OAAA,OACA,SAAA,KAAA,QAAA,QAAA,SAIA,SAAA,SAAA,MAAA,OACA,GAAA,QAEA,OADA,OAAA,eAAA,mBAAA,OAAA,MAAA,eACA,gBAAA,OACA,MAAA,OAAA,SAAA,OAAA,MAAA,OAAA,QACA,OAAA,OAEA,QAAA,OAAA,SAAA,QAAA,OAAA,OAAA,QACA,KAAA,QAAA,MAAA,OAAA,UAIA,OAAA,SAAA,MAAA,OACA,GAAA,QAEA,OADA,OAAA,eAAA,OAAA,eACA,gBAAA,OACA,MAAA,OAAA,SAAA,OAAA,MAAA,OAAA,QACA,QAAA,QAEA,SAAA,OAAA,QACA,KAAA,QAAA,QAAA,QAAA,SAAA,UAAA,KAAA,QAAA,MAAA,SAIA,IAAA,UACA,mGACA,SAAA,OAEA,MADA,OAAA,OAAA,MAAA,KAAA,WACA,KAAA,MAAA,KAAA,QAIA,IAAA,UACA,mGACA,SAAA,OAEA,MADA,OAAA,OAAA,MAAA,KAAA,WACA,MAAA,KAAA,KAAA,QAcA,KAAA,SAAA,MAAA,eACA,GACA,aADA,OAAA,KAAA,SAAA,CAEA,OAAA,OAAA,MA0BA,KAAA,OAAA,OAAA,KAAA,iBAzBA,gBAAA,SACA,MAAA,0BAAA,QAEA,KAAA,IAAA,OAAA,KACA,MAAA,GAAA,QAEA,KAAA,QAAA,gBACA,YAAA,KAAA,iBAEA,KAAA,QAAA,MACA,KAAA,QAAA,EACA,MAAA,aACA,KAAA,SAAA,YAAA,KAEA,SAAA,SACA,eAAA,KAAA,kBACA,gCAAA,KACA,OAAA,SAAA,OAAA,MAAA,KAAA,GAAA,GACA,KAAA,oBACA,KAAA,mBAAA,EACA,OAAA,aAAA,MAAA,GACA,KAAA,kBAAA,OAMA,OAGA,SAAA,WACA,MAAA,MAAA,OAAA,MAAA,IAGA,SAAA,WACA,MAAA,MAAA,OAAA,6BAAA,IAGA,UAAA,WAMA,MALA,MAAA,KACA,KAAA,KAAA,KAAA,MACA,gBAAA,MAAA,IACA,KAAA,KAAA,KAAA,IAEA,MAGA,qBAAA,SAAA,OAQA,MAHA,OAJA,MAIA,OAAA,OAAA,OAHA,GAMA,KAAA,OAAA,OAAA,KAAA,GAGA,YAAA,WACA,MAAA,aAAA,KAAA,OAAA,KAAA,UAGA,UAAA,SAAA,OACA,GAAA,WAAA,OAAA,OAAA,MAAA,QAAA,OAAA,OAAA,MAAA,QAAA,SAAA,OAAA,CACA,OAAA,OAAA,MAAA,UAAA,KAAA,IAAA,MAAA,UAAA,MAGA,QAAA,SAAA,OACA,MAAA,OAAA,MAAA,KAAA,MAAA,KAAA,QAAA,GAAA,GAAA,KAAA,MAAA,GAAA,MAAA,GAAA,KAAA,QAAA,IAGA,SAAA,SAAA,OACA,GAAA,MAAA,WAAA,KAAA,KAAA,aAAA,MAAA,IAAA,KAAA,aAAA,MAAA,KAAA,IACA,OAAA,OAAA,MAAA,KAAA,KAAA,IAAA,MAAA,KAAA,MAGA,YAAA,SAAA,OACA,GAAA,MAAA,WAAA,KAAA,EAAA,GAAA,IACA,OAAA,OAAA,MAAA,KAAA,KAAA,IAAA,MAAA,KAAA,MAGA,KAAA,SAAA,OACA,GAAA,MAAA,KAAA,aAAA,KAAA,KACA,OAAA,OAAA,MAAA,KAAA,KAAA,IAAA,GAAA,MAAA,MAAA,MAGA,QAAA,SAAA,OACA,GAAA,MAAA,WAAA,KAAA,EAAA,GAAA,IACA,OAAA,OAAA,MAAA,KAAA,KAAA,IAAA,GAAA,MAAA,MAAA,MAGA,QAAA,SAAA,OACA,GAAA,UAAA,KAAA,MAAA,EAAA,KAAA,aAAA,MAAA,KAAA,CACA,OAAA,OAAA,MAAA,QAAA,KAAA,IAAA,MAAA,QAAA,MAGA,WAAA,SAAA,OAIA,MAAA,OAAA,MAAA,KAAA,OAAA,EAAA,KAAA,IAAA,KAAA,MAAA,EAAA,MAAA,MAAA,IAGA,eAAA,WACA,MAAA,aAAA,KAAA,OAAA,EAAA,IAGA,YAAA,WACA,GAAA,UAAA,KAAA,aAAA,KACA,OAAA,aAAA,KAAA,OAAA,SAAA,IAAA,SAAA,MAGA,IAAA,SAAA,OAEA,MADA,OAAA,eAAA,OACA,KAAA,UAGA,IAAA,SAAA,MAAA,OAKA,MAJA,OAAA,eAAA,OACA,kBAAA,MAAA,QACA,KAAA,OAAA,OAEA,MAMA,OAAA,SAAA,KACA,GAAA,cAEA,OAAA,OAAA,UACA,KAAA,QAAA,OAEA,cAAA,OAAA,WAAA,KACA,MAAA,gBACA,KAAA,QAAA,eAEA,OAIA,KAAA,UACA,kJACA,SAAA,KACA,MAAA,OAAA,UACA,KAAA,aAEA,KAAA,OAAA,OAKA,WAAA,WACA,MAAA,MAAA,SAGA,cAAA,WAGA,MAAA,IAAA,KAAA,MAAA,KAAA,GAAA,oBAAA,OA8CA,OAAA,GAAA,YAAA,OAAA,GAAA,aAAA,aAAA,gBAAA,GACA,OAAA,GAAA,OAAA,OAAA,GAAA,QAAA,aAAA,WAAA,GACA,OAAA,GAAA,OAAA,OAAA,GAAA,QAAA,aAAA,WAAA,GAKA,OAAA,GAAA,KAAA,OAAA,GAAA,MAAA,aAAA,SAAA,GAEA,OAAA,GAAA,KAAA,aAAA,QAAA,GACA,OAAA,GAAA,MAAA,UAAA,kDAAA,aAAA,QAAA,IACA,OAAA,GAAA,KAAA,aAAA,YAAA,GACA,OAAA,GAAA,MAAA,UAAA,kDAAA,aAAA,YAAA,IAGA,OAAA,GAAA,KAAA,OAAA,GAAA,IACA,OAAA,GAAA,OAAA,OAAA,GAAA,MACA,OAAA,GAAA,MAAA,OAAA,GAAA,KACA,OAAA,GAAA,SAAA,OAAA,GAAA,QACA,OAAA,GAAA,SAAA,OAAA,GAAA,QAGA,OAAA,GAAA,OAAA,OAAA,GAAA,YAkBA,OAAA,OAAA,SAAA,GAAA,SAAA,WAEA,QAAA,WACA,GAIA,SAAA,QAAA,MAJA,aAAA,KAAA,cACA,KAAA,KAAA,MACA,OAAA,KAAA,QACA,KAAA,KAAA,MACA,MAAA,CAIA,MAAA,aAAA,aAAA,IAEA,QAAA,SAAA,aAAA,KACA,KAAA,QAAA,QAAA,GAEA,QAAA,SAAA,QAAA,IACA,KAAA,QAAA,QAAA,GAEA,MAAA,SAAA,QAAA,IACA,KAAA,MAAA,MAAA,GAEA,MAAA,SAAA,MAAA,IAGA,MAAA,SAAA,YAAA,OACA,MAAA,SAAA,YAAA,QAIA,QAAA,SAAA,KAAA,IACA,MAAA,GAGA,OAAA,SAAA,OAAA,IACA,QAAA,GAEA,KAAA,KAAA,KACA,KAAA,OAAA,OACA,KAAA,MAAA,OAGA,IAAA,WAYA,MAXA,MAAA,cAAA,KAAA,IAAA,KAAA,eACA,KAAA,MAAA,KAAA,IAAA,KAAA,OACA,KAAA,QAAA,KAAA,IAAA,KAAA,SAEA,KAAA,MAAA,aAAA,KAAA,IAAA,KAAA,MAAA,cACA,KAAA,MAAA,QAAA,KAAA,IAAA,KAAA,MAAA,SACA,KAAA,MAAA,QAAA,KAAA,IAAA,KAAA,MAAA,SACA,KAAA,MAAA,MAAA,KAAA,IAAA,KAAA,MAAA,OACA,KAAA,MAAA,OAAA,KAAA,IAAA,KAAA,MAAA,QACA,KAAA,MAAA,MAAA,KAAA,IAAA,KAAA,MAAA,OAEA,MAGA,MAAA,WACA,MAAA,UAAA,KAAA,OAAA,IAGA,QAAA,WACA,MAAA,MAAA,cACA,MAAA,KAAA,MACA,KAAA,QAAA,GAAA,OACA,QAAA,MAAA,KAAA,QAAA,KAGA,SAAA,SAAA,YACA,GAAA,QAAA,aAAA,MAAA,WAAA,KAAA,aAMA,OAJA,cACA,OAAA,KAAA,aAAA,YAAA,KAAA,SAGA,KAAA,aAAA,WAAA,SAGA,IAAA,SAAA,MAAA,KAEA,GAAA,KAAA,OAAA,SAAA,MAAA,IAQA,OANA,MAAA,eAAA,IAAA,cACA,KAAA,OAAA,IAAA,MACA,KAAA,SAAA,IAAA,QAEA,KAAA,UAEA,MAGA,SAAA,SAAA,MAAA,KACA,GAAA,KAAA,OAAA,SAAA,MAAA,IAQA,OANA,MAAA,eAAA,IAAA,cACA,KAAA,OAAA,IAAA,MACA,KAAA,SAAA,IAAA,QAEA,KAAA,UAEA,MAGA,IAAA,SAAA,OAEA,MADA,OAAA,eAAA,OACA,KAAA,MAAA,cAAA,QAGA,GAAA,SAAA,OACA,GAAA,MAAA,MAGA,IAFA,MAAA,eAAA,OAEA,UAAA,OAAA,SAAA,MAGA,MAFA,MAAA,KAAA,MAAA,KAAA,cAAA,MACA,OAAA,KAAA,QAAA,GAAA,YAAA,MACA,UAAA,MAAA,OAAA,OAAA,EAIA,QADA,KAAA,KAAA,MAAA,KAAA,MAAA,YAAA,KAAA,QAAA,KACA,OACA,IAAA,OAAA,MAAA,MAAA,EAAA,KAAA,cAAA,MACA,KAAA,MAAA,MAAA,MAAA,KAAA,cAAA,KACA,KAAA,OAAA,MAAA,IAAA,KAAA,KAAA,cAAA,IACA,KAAA,SAAA,MAAA,IAAA,KAAA,GAAA,KAAA,cAAA,GACA,KAAA,SAAA,MAAA,IAAA,KAAA,GAAA,GAAA,KAAA,cAAA,GAEA,KAAA,cAAA,MAAA,MAAA,MAAA,GAAA,KAAA,GAAA,GAAA,KAAA,KAAA,aACA,SAAA,KAAA,IAAA,OAAA,gBAAA,SAKA,KAAA,OAAA,GAAA,KACA,OAAA,OAAA,GAAA,OAEA,YAAA,UACA,sFAEA,WACA,MAAA,MAAA,gBAIA,YAAA,WAEA,GAAA,OAAA,KAAA,IAAA,KAAA,SACA,OAAA,KAAA,IAAA,KAAA,UACA,KAAA,KAAA,IAAA,KAAA,QACA,MAAA,KAAA,IAAA,KAAA,SACA,QAAA,KAAA,IAAA,KAAA,WACA,QAAA,KAAA,IAAA,KAAA,UAAA,KAAA,eAAA,IAEA,OAAA,MAAA,aAMA,KAAA,YAAA,EAAA,IAAA,IACA,KACA,MAAA,MAAA,IAAA,KACA,OAAA,OAAA,IAAA,KACA,KAAA,KAAA,IAAA,KACA,OAAA,SAAA,QAAA,IAAA,KACA,MAAA,MAAA,IAAA,KACA,QAAA,QAAA,IAAA,KACA,QAAA,QAAA,IAAA,IAXA,OAcA,WAAA,WACA,MAAA,MAAA,WAIA,OAAA,SAAA,GAAA,SAAA,OAAA,SAAA,GAAA,WAQA,KAAA,IAAA,wBACA,WAAA,uBAAA,IACA,mBAAA,EAAA,cAIA,QAAA,SAAA,GAAA,eAAA,WACA,MAAA,MAAA,GAAA,OAEA,OAAA,SAAA,GAAA,UAAA,WACA,MAAA,MAAA,GAAA,MAEA,OAAA,SAAA,GAAA,UAAA,WACA,MAAA,MAAA,GAAA,MAEA,OAAA,SAAA,GAAA,QAAA,WACA,MAAA,MAAA,GAAA,MAEA,OAAA,SAAA,GAAA,OAAA,WACA,MAAA,MAAA,GAAA,MAEA,OAAA,SAAA,GAAA,QAAA,WACA,MAAA,MAAA,GAAA,UAEA,OAAA,SAAA,GAAA,SAAA,WACA,MAAA,MAAA,GAAA,MAEA,OAAA,SAAA,GAAA,QAAA,WACA,MAAA,MAAA,GAAA,MASA,OAAA,OAAA,MACA,aAAA,uBACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,IAAA,MAAA,OAAA,IAAA,IAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KAAA,IACA,OAAA,QAAA,UA4BA,UACA,OAAA,QAAA,OACA,kBAAA,SAAA,OAAA,KACA,OAAA,SAAA,SAAA,QAAA,QAAA,QAMA,MALA,QAAA,QAAA,OAAA,UAAA,OAAA,SAAA,YAAA,IAEA,YAAA,OAAA,iBAGA,SAEA,YAAA,IAEA,cAEA,KAAA,MCn3FA,QAAA,OAAA,OAAA,UAAA,eAAA,SAAA,OAAA,WAAA,MAMA,MAHA,YAAA,MAAA,SACA,WAAA,OAAA,SAGA,SAAA,IACA,OAAA,EACA,YAAA,oCACA,WAAA,SAAA,OAAA,QACA,OAAA,QAAA,CACA,IAAA,UAAA,EAMA,aAAA,WACA,GAAA,YAAA,KAAA,MAAA,KAAA,SAAA,OAAA,MAAA,SAAA,IACA,cAAA,OAAA,UACA,OAAA,QAAA,WACA,WAAA,IAAA,OAAA,UAIA,QAAA,OAAA,OAAA,cAAA,SAAA,QACA,SAAA,UACA,SAAA,EACA,OAAA,MAAA,kBAKA,KAAA,SAAA,OACA,MAAA,OAAA,OAAA,iBAAA,SAAA,OACA,KAAA,IAAA,gBAAA,OACA,MAAA,MAAA,YCrCA,QAAA,OAAA,OAAA,UAAA,QAAA,SAAA,YAAA,OAAA,MACA,OACA,SAAA,IACA,OAAA,EACA,SAAA,6EACA,WAAA,aAIA,KAAA,SAAA,OAEA,MAAA,OAAA,OAAA,iBAAA,SAAA,OAEA,MAAA,MAAA,MACA,QACA,KAAA,IAAA,uBACA,YAAA,kBAAA,OAAA,KAAA,SAAA,MACA,GAAA,OAAA,KAAA,SAAA,KACA,OAAA,OAAA,GAEA,KAAA,IAAA,OACA,MAAA,WAAA,MAAA,GAAA,YACA,MAAA,MAAA,MAAA,GAAA,MACA,MAAA,eAAA,MAAA,GAAA,iBAEA,KAAA,IAAA,aAGA,WACA,KAAA,IAAA,sCC7BA,QAAA,OAAA,OAAA,QAAA,cAAA,SAAA,WAEA,GAAA,YAAA,UAAA,mDAEA,MAAA,kBAAA,SAAA,OACA,GAAA,SACA,QAAA,oBACA,QAAA,mBACA,SAAA,MAAA,MAGA,OAAA,YAAA,IAAA,QAAA,YCXA,QAAA,OAAA,OAAA,QAAA,SAAA,SAAA,YACA,GAAA,MAAA,QACA,IAAA,OAEA,OAAA,IAAA,MAEA,YACA,aAAA,KACA,aAAA,KACA,QAAA,EACA,QAAA,KAOA,SAAA,SAAA,IAEA,SAAA,OAAA,IAAA,UAAA,IACA,QAAA,EACA,WAAA,UAGA,SAAA,KAAA,KAQA,YAAA,SAAA,IACA,MAAA,IAAA,IAAA,cAAA,GAAA,SAAA,UACA,QAAA,QAAA,SAAA,OAAA,SAAA,OACA,SAAA,MAAA,SAUA,SAAA,WACA,QAAA,QAAA,MAAA,SAAA,MACA,GAAA,IAAA,UAAA,KAAA,aAAA,SAAA,WACA,QAAA,QAAA,UAAA,SAAA,UACA,YAAA,SAAA,WAYA,SAAA,WAEA,GAAA,OAAA,KAAA,MAAA,KAAA,UAAA,SAAA,OAAA,IACA,QAAA,SAAA,MAEA,IAAA,IAAA,WAAA,QAAA,SAAA,OAGA,MAAA,QAAA,OACA,MAAA,QAAA,MAAA,OAAA,OAAA,IACA,MAAA,YAAA,OAAA,MAAA,aAAA,QAAA,UAAA,MAAA,gBACA,aAIA,aAAA,MACA,WAAA,aAEA,IAAA,OAAA,aAAA,WAAA,QAAA,SAAA,iBACA,MAAA,QAAA,oBAEA,aAGA,aAAA,oBACA,cAAA,SACA,aASA,MAAA,MAAA,SAAA,cACA,SACA,SAAA,SACA,aAAA,aACA,aAAA,EACA,iBAAA,EACA,WAAA,GAEA,YAQA,KAAA,iBAAA,WACA,MAAA,eAMA,KAAA,cAAA,WACA,MAAA,SAGA,YC/HA,IAAA,WAAA,QAAA,aACA,OAAA,QAAA,kBACA,KAAA,OAAA,aAEA,QAAA,SACA,KAAA,QACA,WAAA,WAAA,QAAA,IAAA,SACA,GAAA,WAAA,KAAA,SACA,OAAA,GCJA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,8FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,IAAA,MACA,QAAA,KAAA,KAEA,QAAA,KAAA,MAGA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,eACA,SAAA,eACA,QAAA,iBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,YACA,EAAA,mBACA,EAAA,YACA,GAAA,YACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,SACA,EAAA,WACA,GAAA,YACA,EAAA,UACA,GAAA,WAEA,aAAA,kBACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,QAAA,IAAA,QAAA,QAAA,GAAA,MAAA,OAEA,MACA,IAAA,EACA,IAAA,OC1DA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wEAAA,MAAA,KACA,YAAA,wEAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,wCAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,wBACA,QAAA,sBACA,SAAA,uBACA,QAAA,sBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,WACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,QCjDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,SACA,OAAA,6EAAA,MAAA,KACA,YAAA,6EAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,wCAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,IAEA,KAGA,UACA,QAAA,wBACA,QAAA,sBACA,SAAA,uBACA,QAAA,sBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,WACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,YAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,MACA,IAAA,EACA,IAAA,QCvFA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KACA,WAAA,SAAA,GACA,MAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GACA,SACA,GAAA,eAAA,eAAA,UAAA,WAAA,UAAA,WAAA,YACA,GAAA,eAAA,eAAA,UAAA,WAAA,WAAA,WAAA,YACA,GAAA,cAAA,cAAA,SAAA,UAAA,WAAA,UAAA,WACA,GAAA,aAAA,YAAA,QAAA,SAAA,UAAA,WAAA,UACA,GAAA,aAAA,YAAA,QAAA,SAAA,UAAA,UAAA,UACA,GAAA,aAAA,YAAA,QAAA,SAAA,WAAA,WAAA,WACA,UAAA,SAAA,GACA,MAAA,UAAA,OAAA,eACA,GAAA,GAAA,WAAA,QACA,IAAA,QAAA,GAAA,WAAA,QAIA,OAHA,KAAA,IACA,IAAA,IAAA,cAAA,EAAA,IAEA,IAAA,QAAA,MAAA,UAEA,QACA,qBACA,cACA,YACA,cACA,YACA,eACA,aACA,WACA,eACA,qBACA,sBACA,qBAGA,OAAA,QAAA,aAAA,MACA,OAAA,OACA,YAAA,OACA,SAAA,sDAAA,MAAA,KACA,cAAA,wCAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,IAEA,KAGA,UACA,QAAA,wBACA,QAAA,uBACA,SAAA,uBACA,QAAA,sBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,SACA,EAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,MAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,MACA,IAAA,EACA,IAAA,QC1HA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,WACA,EAAA,QACA,EAAA,QACA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,EAAA,OACA,EAAA,OACA,GAAA,OACA,GAAA,OAEA,EAAA,QACA,EAAA,QACA,IAAA,QAEA,EAAA,OAEA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,GAAA,QACA,GAAA,QAEA,OAAA,QAAA,aAAA,MACA,OAAA,+EAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qEAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,kBACA,QAAA,kBACA,SAAA,+BACA,QAAA,aACA,SAAA,+BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,kBACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,SACA,GAAA,QACA,EAAA,SACA,GAAA,SAEA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,SAEA,SAGA,aAAA,wCACA,QAAA,SAAA,QACA,GAAA,IAAA,OACA,MAAA,QAAA,OAEA,IAAA,GAAA,OAAA,GACA,EAAA,OAAA,IAAA,EACA,EAAA,QAAA,IAAA,IAAA,IAEA,OAAA,SAAA,SAAA,IAAA,SAAA,IAAA,SAAA,KAEA,MACA,IAAA,EACA,IAAA,OC7FA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,QAAA,KAAA,KACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,KAAA,KAAA,GAAA,IAAA,MAAA,GAAA,MAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,KAAA,GAAA,IAAA,KAAA,IAAA,KAAA,IAAA,MAAA,GAAA,MAAA,GAGA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,yBAAA,yBACA,GAAA,cAAA,yBAAA,yBACA,GAAA,iBACA,GAAA,uBACA,GAAA,iBAEA,OAAA,MAAA,IACA,cAAA,UAAA,UAEA,MAAA,IACA,cAAA,UAAA,UAGA,OAAA,IAAA,OAAA,OAAA,MAAA,QAIA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,qGAAA,MAAA,KACA,WAAA,uGAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,0DAAA,MAAA,KACA,WAAA,0DAAA,MAAA,MAGA,SAAA,6CAAA,KAAA,QACA,aACA,YAEA,OAAA,UAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,0DAAA,MAAA,KACA,SAAA,oBACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,eACA,QAAA,gBACA,QAAA,eACA,SAAA,WACA,MAAA,mBAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,2BAGA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,UACA,EAAA,kBACA,EAAA,uBACA,GAAA,uBACA,EAAA,uBACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,MACA,GAAA,wBAIA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,SACA,GAAA,KACA,MAEA,UAIA,aAAA,mBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACA,IAAA,IACA,MAAA,QAAA,KAAA,GAAA,OAAA,KAAA,GAAA,OAAA,MAAA,IAAA,OAAA,MAAA,GAAA,OAAA,KAAA,OAAA,IACA,KAAA,IACA,MAAA,QAAA,KACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OChJA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,YACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,cACA,SAAA,cACA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,4BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,8BAGA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,WACA,EAAA,kBACA,EAAA,SACA,GAAA,YACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,SACA,EAAA,QACA,GAAA,YACA,EAAA,SACA,GAAA,aAEA,aAAA,8BACA,QAAA,SAAA,QACA,GAAA,WAAA,OAAA,GACA,YAAA,OAAA,GACA,OAAA,KAAA,OACA,OAAA,MACA,IAAA,YACA,OAAA,MACA,YAAA,IAAA,GAAA,YACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,WAAA,IAAA,UACA,OAAA,MAEA,OAAA,OAGA,MACA,IAAA,EACA,IAAA,OChFA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA;EAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,yDAAA,MAAA,KACA,SAAA,+DAAA,MAAA,KACA,cAAA,0CAAA,MAAA,KACA,YAAA,6BAAA,MAAA,KACA,gBACA,GAAA,aACA,IAAA,gBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,UACA,QAAA,gBACA,SAAA,WACA,QAAA,aACA,SAAA,gBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,SACA,EAAA,cACA,EAAA,WACA,GAAA,WACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,UAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAMA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,MACA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,QAEA,OAGA,MACA,IAAA,EACA,IAAA,OCnGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,qJAAA,MAAA,KACA,YAAA,qJAAA,MAAA,KACA,SAAA,gFAAA,MAAA,KACA,cAAA,oDAAA,MAAA,KACA,YAAA,oDAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,cACA,QAAA,cACA,SAAA,wBACA,QAAA,YACA,SAAA,4BACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,QACA,EAAA,aACA,GAAA,WACA,EAAA,cACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,YACA,GAAA,UACA,EAAA,UACA,GAAA,SAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,SACA,GAAA,KACA,UACA,GAAA,KACA,UACA,GAAA,KACA,UAEA,UAGA,MACA,IAAA,EACA,IAAA,OChGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,0BAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,WACA,GAAA,MACA,GAAA,SAEA,OAAA,QAAA,IAAA,SAAA,OAAA,KAAA,QAGA,QAAA,yBAAA,QACA,OAAA,WAAA,SACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,QAAA,QACA,SACA,MAAA,QAAA,UAIA,QAAA,YAAA,QACA,MAAA,QAAA,EACA,WAAA,OAAA,IAEA,OAGA,QAAA,UAAA,KAAA,QACA,MAAA,KAAA,OACA,aAAA,MAEA,KAGA,QAAA,cAAA,MACA,GAAA,gBACA,EAAA,IACA,EAAA,IACA,EAAA,IAEA,OAAA,UAAA,cAAA,KAAA,OAAA,IACA,KAEA,cAAA,KAAA,OAAA,IAAA,KAAA,UAAA,GAGA,MAAA,QAAA,aAAA,MACA,OAAA,gFAAA,MAAA,KACA,YAAA,mDAAA,MAAA,KACA,SAAA,6CAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,wBAAA,MAAA,KACA,gBACA,GAAA,WACA,IAAA,cACA,EAAA,aACA,GAAA,sBACA,IAAA,yBACA,KAAA,gCAEA,UACA,QAAA,gBACA,QAAA,qBACA,SAAA,eACA,QAAA,gBACA,SAAA,qBACA,SAAA,KAEA,cACA,OAAA,YACA,KAAA,SACA,EAAA,wBACA,EAAA,cACA,GAAA,yBACA,EAAA,SACA,GAAA,SACA,EAAA,YACA,GAAA,yBACA,EAAA,SACA,GAAA,yBACA,EAAA,WACA,GAAA,yBAEA,aAAA,kBACA,QAAA,SAAA,QACA,GAAA,QAAA,IAAA,OAAA,KAAA,KACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OCpGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,eAAA,cACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,QAGA,KAAA,IACA,MAAA,eAAA,YAAA,aACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,MACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,OAEA,MAGA,KAAA,KAMA,MAJA,SADA,IAAA,OACA,MAEA,MAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,UAEA,SAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,UAMA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,0BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,cACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCpIA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,oFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,8DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,QAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,SAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,QAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,SAAA,WACA,MAAA,wBAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,QACA,EAAA,aACA,EAAA,WACA,GAAA,YACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,qBACA,QAAA,SAAA,OAAA,QACA,GAAA,QAAA,IAAA,OAAA,IACA,IAAA,OAAA,IACA,IAAA,OAAA,IACA,IAAA,OAAA,IAAA,GAIA,QAHA,MAAA,QAAA,MAAA,UACA,OAAA,KAEA,OAAA,QAEA,MACA,IAAA,EACA,IAAA,OCrEA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAIA,QAAA,QAAA,GACA,MAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,IAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,gBAAA,SAAA,aAAA,eACA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,MACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,MAAA,OAEA,OAAA,KAGA,KAAA,IACA,MAAA,gBAAA,SAAA,QAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,UAEA,OAAA,QAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,OACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,OAAA,OAEA,OAAA,QAtDA,GAAA,QAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,IA2DA,OAAA,QAAA,aAAA,MACA,OAAA,OACA,YAAA,YACA,YAAA,SAAA,OAAA,aACA,GAAA,GAAA,eACA,KAAA,EAAA,EAAA,GAAA,EAAA,IAEA,aAAA,GAAA,GAAA,QAAA,IAAA,OAAA,GAAA,MAAA,YAAA,GAAA,IAAA,IAEA,OAAA,eACA,OAAA,aACA,SAAA,mDAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,kBACA,KAAA,GACA,MAAA,mBACA,KAAA,GACA,MAAA,gBACA,KAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,uBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,0BAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCrJA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,gEAAA,MAAA,KACA,YAAA,iDAAA,MAAA,KACA,SAAA,oEAAA,MAAA,KACA,cAAA,6BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,sCACA,IAAA,0CACA,KAAA,iDAEA,UACA,QAAA,sBACA,QAAA,sBACA,QAAA,sBACA,SAAA,4BACA,SAAA,4BACA,SAAA,KAEA,cACA,OAAA,SAAA,QACA,GAAA,OAAA,UAAA,KAAA,QAAA,MAAA,QAAA,KAAA,QAAA,MAAA,KACA,OAAA,QAAA,OAEA,KAAA,YACA,EAAA,iBACA,EAAA,YACA,GAAA,WACA,EAAA,YACA,GAAA,WACA,EAAA,UACA,GAAA,SACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,UAEA,aAAA,cACA,QAAA,SACA,MACA,IAAA,EACA,IAAA,OCrDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,qDAAA,MAAA,KACA,SAAA,+EAAA,MAAA,KACA,cAAA,+BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KAEA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,gBACA,SAAA,eACA,QAAA,eACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,WACA,EAAA,mBACA,EAAA,QACA,GAAA,WACA,EAAA,MACA,GAAA,SACA,EAAA,UACA,GAAA,aACA,EAAA,MACA,GAAA,SACA,EAAA,WACA,GAAA,cAEA,aAAA,mCAEA,QAAA,SAAA,QACA,GAAA,GAAA,OACA,OAAA,GACA,QACA,GAAA,KAAA,KAAA,MAAA,MAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MACA,KAAA,MAAA,KAAA,KAAA,MAAA,KAAA,KAAA,MAAA,KAAA,MAaA,OAVA,GAAA,GAEA,OADA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA,MAAA,EACA,MAEA,MAEA,EAAA,IACA,OAAA,OAAA,IAGA,OAAA,QAEA,MACA,IAAA,EACA,IAAA,OCvEA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,sFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,6BAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,iBACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,cACA,EAAA,WACA,GAAA,cACA,EAAA,UACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,WACA,GAAA,aACA,EAAA,QACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OChDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,gBACA,GAAA,cAAA,gBACA,GAAA,UAAA,aACA,IAAA,OAAA,QAAA,OAAA,UACA,GAAA,YAAA,eACA,IAAA,OAAA,UAAA,OAAA,YACA,GAAA,WAAA,cACA,IAAA,OAAA,SAAA,OAAA,WAEA,OAAA,eAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,MAAA,QAAA,aAAA,SACA,OAAA,qFAAA,MAAA,KACA,YAAA,+DAAA,MAAA,KACA,SAAA,8DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,sBACA,SAAA,IACA,QAAA,uBACA,SAAA,qBACA,QAAA,wBACA,SAAA,gCAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,oBACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,qBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCjEA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,gBACA,GAAA,cAAA,gBACA,GAAA,UAAA,aACA,IAAA,OAAA,QAAA,OAAA,UACA,GAAA,YAAA,eACA,IAAA,OAAA,UAAA,OAAA,YACA,GAAA,WAAA,cACA,IAAA,OAAA,SAAA,OAAA,WAEA,OAAA,eAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,+DAAA,MAAA,KACA,SAAA,8DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,sBACA,SAAA,IACA,QAAA,uBACA,SAAA,qBACA,QAAA,wBACA,SAAA,gCAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,oBACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,qBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCjEA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,mBAAA,qHAAA,MAAA,KACA,iBAAA,qHAAA,MAAA,KACA,OAAA,SAAA,eAAA,QACA,MAAA,IAAA,KAAA,OAAA,UAAA,EAAA,OAAA,QAAA,UACA,KAAA,kBAAA,eAAA,SAEA,KAAA,oBAAA,eAAA,UAGA,YAAA,oDAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,OAAA,GACA,QAAA,KAAA,KAEA,QAAA,KAAA,MAGA,KAAA,SAAA,OACA,MAAA,OAAA,MAAA,IAAA,cAAA,IAEA,cAAA,gBACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,YACA,QAAA,iBACA,QAAA,gBACA,SAAA,eACA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,+BACA,SACA,MAAA,mCAGA,SAAA,KAEA,SAAA,SAAA,IAAA,KACA,GAAA,QAAA,KAAA,YAAA,KACA,MAAA,KAAA,IAAA,OAMA,OAJA,kBAAA,UACA,OAAA,OAAA,MAAA,MAGA,OAAA,QAAA,KAAA,MAAA,KAAA,EAAA,MAAA,SAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,oBACA,EAAA,YACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,WACA,GAAA,WACA,EAAA,aACA,GAAA,WACA,EAAA,cACA,GAAA,aAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCvFA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,gBACA,QAAA,mBACA,SAAA,eACA,QAAA,oBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,gBACA,EAAA,WACA,GAAA,aACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,UACA,EAAA,UACA,GAAA,YACA,EAAA,SACA,GAAA,YAEA,aAAA,uBACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KAAA,IACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OCxDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,gBACA,QAAA,mBACA,SAAA,eACA,QAAA,oBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,gBACA,EAAA,WACA,GAAA,aACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,UACA,EAAA,UACA,GAAA,YACA,EAAA,SACA,GAAA,YAEA,aAAA,uBACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KAAA,IACA,OAAA,QAAA,YCrDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,gBACA,QAAA,mBACA,SAAA,eACA,QAAA,oBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,gBACA,EAAA,WACA,GAAA,aACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,UACA,EAAA,UACA,GAAA,YACA,EAAA,SACA,GAAA,YAEA,aAAA,uBACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KAAA,IACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OCvDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,6FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,gCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,uBACA,IAAA,0BACA,KAAA,sCAEA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,OAAA,GACA,QAAA,SAAA,SAEA,QAAA,SAAA,UAGA,UACA,QAAA,iBACA,QAAA,iBACA,SAAA,eACA,QAAA,iBACA,SAAA,yBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,WACA,EAAA,SACA,GAAA,aACA,EAAA,OACA,GAAA,WACA,EAAA,OACA,GAAA,WACA,EAAA,SACA,GAAA,aACA,EAAA,OACA,GAAA,YAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OC3DA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,gBAAA,8DAAA,MAAA,KACA,YAAA,kDAAA,MAAA,IAEA,OAAA,QAAA,aAAA,MACA,OAAA,2FAAA,MAAA,KACA,YAAA,SAAA,EAAA,QACA,MAAA,QAAA,KAAA,QACA,YAAA,EAAA,SAEA,eAAA,EAAA,UAGA,SAAA,uDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,2BACA,KAAA,kCAEA,UACA,QAAA,WACA,MAAA,aAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,QAAA,WACA,MAAA,gBAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,SAAA,WACA,MAAA,cAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,QAAA,WACA,MAAA,cAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,SAAA,WACA,MAAA,0BAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,gBACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCpEA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,IAAA,UACA,GAAA,SACA,GAAA,eAAA,cAAA,iBACA,GAAA,aAAA,aACA,IAAA,OAAA,UAAA,OAAA,YACA,GAAA,YAAA,YAAA,YACA,IAAA,OAAA,SAAA,OAAA,UACA,GAAA,YAAA,YACA,GAAA,UAAA,WAAA,WACA,IAAA,OAAA,OAAA,OAAA,SACA,GAAA,YAAA,QAAA,aACA,IAAA,OAAA,SAAA,OAAA,WAEA,OAAA,eACA,OAAA,KAAA,GAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAEA,SAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,MAAA,QAAA,aAAA,MACA,OAAA,6FAAA,MAAA,KACA,YAAA,6DAAA,MAAA,KACA,SAAA,iEAAA,MAAA,KACA,cAAA,gBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,aACA,QAAA,cACA,SAAA,qBACA,QAAA,aACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,YACA,KAAA,YACA,EAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,WACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,qBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCtEA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,+FAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,sEAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,0BACA,IAAA,6BACA,KAAA,mCACA,EAAA,WACA,GAAA,oBACA,IAAA,uBACA,KAAA,6BAEA,UACA,QAAA,kBACA,QAAA,mBACA,SAAA,gBACA,QAAA,kBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,iBACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,UACA,EAAA,eACA,GAAA,cACA,EAAA,WACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCtDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,wEAAA,MAAA,KACA,YAAA,wEAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,qDAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,aAEA,cAGA,UACA,QAAA,kBACA,QAAA,iBACA,SAAA,iBACA,QAAA,kBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,cACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,UAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,SAAA,SAAA,OACA,MAAA,WAAA;GACA,QAAA,KAAA,MAEA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,QC3FA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAOA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,EACA,QAAA,KACA,IAAA,IACA,MAAA,UAAA,oBAAA,iBACA,KAAA,IACA,MAAA,UAAA,WAAA,UACA,KAAA,KACA,OAAA,SAAA,WAAA,WACA,MACA,KAAA,IACA,MAAA,UAAA,SAAA,OACA,KAAA,KACA,OAAA,SAAA,SAAA,QACA,MACA,KAAA,IACA,MAAA,UAAA,SAAA,OACA,KAAA,KACA,OAAA,SAAA,SAAA,QACA,MACA,KAAA,IACA,MAAA,UAAA,YAAA,UACA,KAAA,KACA,OAAA,SAAA,YAAA,WACA,MACA,KAAA,IACA,MAAA,UAAA,SAAA,OACA,KAAA,KACA,OAAA,SAAA,SAAA,SAIA,MADA,QAAA,aAAA,OAAA,UAAA,IAAA,OAIA,QAAA,cAAA,OAAA,UACA,MAAA,IAAA,OAAA,SAAA,cAAA,QAAA,YAAA,QAAA,OA1CA,GAAA,aAAA,wEAAA,MAAA,KACA,eACA,QAAA,QAAA,SAAA,SAAA,SAAA,SAAA,SACA,YAAA,GAAA,YAAA,GAAA,YAAA,GA0CA,OAAA,QAAA,aAAA,MACA,OAAA,2GAAA,MAAA,KACA,YAAA,uEAAA,MAAA,KACA,SAAA,qEAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,mBACA,IAAA,6BACA,KAAA,mCACA,EAAA,WACA,GAAA,cACA,IAAA,wBACA,KAAA,8BAEA,UACA,QAAA,oBACA,QAAA,sBACA,SAAA,gBACA,QAAA,mBACA,SAAA,4BACA,SAAA,KAEA,cACA,OAAA,YACA,KAAA,YACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCnGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,4EAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,yBAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,kBACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,YACA,EAAA,YACA,EAAA,aACA,GAAA,cACA,EAAA,WACA,GAAA,WACA,EAAA,YACA,GAAA,WACA,EAAA,aACA,GAAA,aACA,EAAA,UACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OClDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,uFAAA,MAAA,KACA,YAAA,iEAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,qBACA,QAAA,gBACA,SAAA,cACA,QAAA,cACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,YACA,EAAA,oBACA,EAAA,aACA,GAAA,aACA,EAAA,YACA,GAAA,YACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,QACA,GAAA,UAEA,aAAA,eACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,OAAA,KAAA,SChDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,iEAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,qBACA,QAAA,gBACA,SAAA,cACA,QAAA,cACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,YACA,EAAA,oBACA,EAAA,aACA,GAAA,aACA,EAAA,YACA,GAAA,YACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,QACA,GAAA,UAEA,aAAA,eACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,OAAA,KAAA,KAEA,MACA,IAAA,EACA,IAAA,OCpDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,mDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,QAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,SAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,QAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,IAAA,KAAA,QAEA,SAAA,WACA,MAAA,qBAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,SAAA,KAEA,cACA,OAAA,SAAA,KACA,MAAA,iBAAA,IACA,gBAEA,MAAA,KAEA,KAAA,SACA,EAAA,eACA,EAAA,YACA,GAAA,aACA,EAAA,YACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OC/DA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,0EAAA,MAAA,KACA,YAAA,4DAAA,MAAA,KACA,SAAA,uCAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,oBACA,KAAA,0BACA,EAAA,WACA,GAAA,aACA,IAAA,gBACA,KAAA,sBAEA,UACA,QAAA,cACA,QAAA,aACA,SAAA,iBACA,QAAA,eACA,SAAA,+BACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,UACA,EAAA,aACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,SAEA,OAAA,SAEA,EAAA,MACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,SAEA,OAAA,SAEA,EAAA,OACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,UAEA,OAAA,WAEA,EAAA,MACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,SAEA,OAAA,cCrEA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,8EAAA,MAAA,KACA,YAAA,6DAAA,MAAA,KACA,SAAA,uDAAA,MAAA,KACA,cAAA,kCAAA,MAAA,KACA,YAAA,qBAAA,MAAA,KACA,gBACA,GAAA,aACA,IAAA,gBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,UACA,QAAA,UACA,SAAA,WACA,QAAA,UACA,SAAA,mBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,UACA,EAAA,cACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,SACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,WAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAKA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,MACA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,MAEA,OAGA,MACA,IAAA,EACA,IAAA,OChGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,eAAA,cACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,QAGA,KAAA,IACA,MAAA,eAAA,YAAA,aACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,MACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,OAEA,MAGA,KAAA,KAMA,MAJA,SADA,IAAA,OACA,MAEA,MAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,UAEA,SAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,UAMA,MAAA,QAAA,aAAA,MACA,OAAA,+FAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,0BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,cACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCrIA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,KAAA,MAGA,QAAA,KACA,IAAA,IACA,MAAA,WAAA,cAAA,mBAAA,mBACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,QAAA,SACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,QAAA,SACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,OAAA,SACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,OAAA,SACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,OAAA,SACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,OAAA,SACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,SAAA,WACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,SAAA,WACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,MAAA,OACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,MAAA,QAGA,MAAA,GAGA,QAAA,MAAA,UACA,OAAA,SAAA,GAAA,WAAA,IAAA,YAAA,KAAA,OAAA,aAnCA,GAAA,aAAA,gEAAA,MAAA,IAsCA,OAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,qDAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,gCAAA,MAAA,KACA,YAAA,qBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,cACA,GAAA,gBACA,IAAA,oBACA,KAAA,0BAEA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,IAAA,MACA,WAAA,EAAA,KAAA,KAEA,WAAA,EAAA,KAAA,MAGA,UACA,QAAA,gBACA,QAAA,oBACA,SAAA,WACA,MAAA,MAAA,KAAA,MAAA,IAEA,QAAA,oBACA,SAAA,WACA,MAAA,MAAA,KAAA,MAAA,IAEA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,KACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCnGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,gGAAA,MAAA,KACA,WAAA,4GAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,wBAAA,GACA,GAAA,aAAA,kDAAA,MAAA,IAEA,OAAA,aAAA,EAAA,SAGA,QAAA,qBAAA,GACA,GAAA,UAAA,gEAAA,MAAA,IAEA,OAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,SACA,OAAA,kBACA,YAAA,uBACA,SAAA,oBACA,cAAA,+BAAA,MAAA,KACA,YAAA,+BAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,aACA,QAAA,YACA,QAAA,YACA,SAAA,WACA,MAAA,sBAEA,SAAA,WACA,MAAA,8BAEA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,UACA,EAAA,mBACA,EAAA,OACA,GAAA,UACA,EAAA,MACA,GAAA,SACA,EAAA,KACA,GAAA,QACA,EAAA,OACA,GAAA,UACA,EAAA,OACA,GAAA,WAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,UACA,GAAA,KACA,WACA,GAAA,KACA,UAEA,YAIA,aAAA,0BACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,MACA,IAAA,IACA,IAAA,IACA,IAAA,OACA,MAAA,KAAA,OACA,OAAA,MAEA,OAAA,KACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OCzGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,6CAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,yBACA,KAAA,gCAEA,SAAA,SAAA,OACA,MAAA,IAAA,MACA,OACA,GAAA,MACA,QACA,GAAA,MACA,OAEA,SAGA,UACA,QAAA,sBACA,QAAA,mBACA,SAAA,kBACA,QAAA,qBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,eACA,EAAA,iBACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,SACA,EAAA,SACA,GAAA,UACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,OC5DA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,QAAA,GACA,MAAA,GAAA,MAAA,IACA,EACA,EAAA,KAAA,GACA,GAEA,EAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,gBAAA,SAAA,mBAAA,kBACA,KAAA,IACA,MAAA,eAAA,SAAA,QACA,KAAA,KACA,MAAA,QAAA,QACA,QAAA,eAAA,SAAA,UAAA,WACA,cACA,OAAA,SAEA,OAAA,QACA,KAAA,KACA,MAAA,QAAA,QACA,QAAA,eAAA,SAAA,gBAAA,iBAEA,OAAA,aACA,KAAA,IACA,MAAA,eACA,QAEA,SAAA,MAAA,MACA,KAAA,KACA,MAAA,QAAA,QACA,cACA,OAAA,QAEA,QAAA,SAAA,OAAA,SACA,cACA,OAAA,QAEA,QAAA,SAAA,MAAA,OACA,KAAA,IACA,MAAA,eACA,UAEA,SAAA,QAAA,QACA,KAAA,KACA,MAAA,QAAA,QACA,cACA,OAAA,UAEA,QAAA,SAAA,SAAA,WACA,cACA,OAAA,UAEA,QAAA,SAAA,QAAA,SACA,KAAA,IACA,MAAA,gBAAA,SAAA,KAAA,KACA,KAAA,KACA,MAAA,QAAA,QACA,QAAA,eAAA,SAAA,KAAA,QAEA,QAAA,eAAA,SAAA,KAAA,QAIA,MAAA,QAAA,aAAA,MACA,OAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,mFAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,wBACA,KAAA,+BAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,iBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,iBACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,cACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCrHA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,gGAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,kBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,mBACA,SAAA,iBACA,QAAA,iBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,4BACA,SACA,MAAA,+BAGA,SAAA,KAEA,cACA,OAAA,SAAA,GACA,OAAA,YAAA,KAAA,GAAA,MAAA,MAAA,IAAA,GAEA,KAAA,QACA,EAAA,iBACA,EAAA,YACA,GAAA,YACA,EAAA,SACA,GAAA,SACA,EAAA,YACA,GAAA,YACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OC5DA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,gBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,OACA,EAAA,aACA,GAAA,YACA,IAAA,cACA,KAAA,oBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,KAEA,MAGA,UACA,QAAA,UACA,QAAA,UACA,SAAA,cACA,QAAA,UACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,MACA,KAAA,MACA,EAAA,KACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,WCnDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,qGAAA,MAAA,KACA,WAAA,sGAAA,MAAA,MAGA,SAAA,eAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,gEAAA,MAAA,KACA,WAAA,iEAAA,MAAA,MAGA,SAAA,gBAAA,KAAA,QACA,aACA,YAEA,OAAA,UAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,kDAAA,MAAA,KACA,SAAA,oBACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,iBACA,QAAA,kBACA,SAAA,wBACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,SAAA,GACA,MAAA,yBAAA,KAAA,GACA,EAAA,QAAA,KAAA,MACA,EAAA,MAEA,KAAA,SAAA,GACA,MAAA,4BAAA,KAAA,GACA,EAAA,QAAA,SAAA,UAEA,OAAA,KAAA,GACA,EAAA,QAAA,QAAA,YADA,QAIA,EAAA,iBACA,EAAA,OACA,GAAA,UACA,EAAA,QACA,GAAA,WACA,EAAA,MACA,GAAA,SACA,EAAA,MACA,GAAA,SACA,EAAA,OACA,GAAA,WAEA,aAAA,8BACA,QAAA,SAAA,QACA,MAAA,KAAA,OACA,OAGA,IAAA,OACA,OAAA,MAGA,GAAA,QAAA,KAAA,QAAA,OAAA,KAAA,GAAA,OAAA,MAAA,EACA,MAAA,OAGA,OAAA,MAEA,MACA,IAAA,EACA,IAAA,OCrGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yEAAA,MAAA,KACA,YAAA,yEAAA,MAAA,KACA,SAAA,iDAAA,MAAA,KACA,cAAA,iDAAA,MAAA,KACA,YAAA,iDAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,mBACA,QAAA,kBACA,SAAA,iBACA,QAAA,qBACA,SAAA,8BACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,QACA,EAAA,iBACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,QACA,GAAA,QACA,EAAA,WACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,OC7CA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,gBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,UACA,IAAA,aACA,EAAA,aACA,GAAA,gBACA,IAAA,mBACA,KAAA,yBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KAAA,KAAA,MAEA,UACA,QAAA,QACA,QAAA,QACA,SAAA,UACA,QAAA,QACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,OACA,KAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,KACA,GAAA,MACA,EAAA,KACA,GAAA,OAEA,aAAA,WACA,QAAA,MACA,cAAA,UACA,KAAA,SAAA,OACA,MAAA,OAAA,WCrDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,aAAA,gBACA,GAAA,YAAA,eACA,GAAA,UAAA,aACA,GAAA,WAAA,eACA,GAAA,UAAA,cAEA,OAAA,eAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,QAAA,mBAAA,QACA,GAAA,QAAA,OAAA,OAAA,EAAA,OAAA,QAAA,KACA,OAAA,6BAAA,QACA,KAAA,OAEA,MAAA,OAGA,QAAA,iBAAA,QACA,GAAA,QAAA,OAAA,OAAA,EAAA,OAAA,QAAA,KACA,OAAA,6BAAA,QACA,QAAA,OAEA,SAAA,OAUA,QAAA,6BAAA,QAEA,GADA,OAAA,SAAA,OAAA,IACA,MAAA,QACA,OAAA,CAEA,IAAA,EAAA,OAEA,OAAA,CACA,IAAA,GAAA,OAEA,MAAA,SAAA,GAAA,GAAA,QACA,GAEA,CACA,IAAA,IAAA,OAAA,CAEA,GAAA,WAAA,OAAA,GAAA,WAAA,OAAA,EACA,OACA,6BADA,IAAA,UACA,WAEA,WACA,GAAA,IAAA,OAAA,CAEA,KAAA,QAAA,IACA,QAAA,EAEA,OAAA,6BAAA,QAIA,MADA,SAAA,IACA,4BAAA,QAIA,MAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,+DAAA,MAAA,KACA,SAAA,mEAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,cACA,IAAA,iBACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,SAAA,IACA,QAAA,eACA,SAAA,eACA,QAAA,mBACA,SAAA,WAEA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,SACA,MAAA,4BAIA,cACA,OAAA,kBACA,KAAA,gBACA,EAAA,kBACA,EAAA,oBACA,GAAA,cACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,UACA,EAAA,oBACA,GAAA,WACA,EAAA,oBACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCnIA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAeA,QAAA,kBAAA,OAAA,cAAA,IAAA,UACA,MAAA,eACA,kBAEA,SAAA,kBAAA,kBAIA,QAAA,mBAAA,OAAA,cAAA,IAAA,UACA,MAAA,eAAA,MAAA,KAAA,GAAA,SAAA,MAAA,KAAA,GAAA,MAAA,KAAA,GAGA,QAAA,SAAA,QACA,MAAA,QAAA,KAAA,GAAA,OAAA,IAAA,GAAA,OAGA,QAAA,OAAA,KACA,MAAA,OAAA,KAAA,MAAA,KAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,OAAA,KAAA,OACA,OAAA,kBAAA,OAAA,cAAA,IAAA,GAAA,UACA,cACA,QAAA,QAAA,QAAA,MAAA,KAAA,GAAA,MAAA,KAAA,IAEA,SACA,OAAA,MAAA,KAAA,GAEA,QAAA,QAAA,QAAA,MAAA,KAAA,GAAA,MAAA,KAAA,IAKA,QAAA,iBAAA,OAAA,QACA,GAAA,YAAA,KAAA,OAAA,QAAA,cACA,QAAA,SAAA,OAAA,MAEA,OAAA,YAAA,QAAA,QAAA,UAAA,EAAA,QAAA,OAAA,GAAA,IArDA,GAAA,QACA,EAAA,wBACA,GAAA,0BACA,EAAA,2BACA,GAAA,4BACA,EAAA,qBACA,GAAA,sBACA,EAAA,uBACA,GAAA,4BACA,EAAA,mBACA,GAAA,oBAEA,SAAA,2FAAA,MAAA,IA4CA,OAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,gBACA,cAAA,8BAAA,MAAA,KACA,YAAA,iBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,mCACA,KAAA,yCACA,EAAA,aACA,GAAA,wBACA,IAAA,mCACA,KAAA,yCAEA,UACA,QAAA,gBACA,QAAA,aACA,SAAA,UACA,QAAA,aACA,SAAA,qBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,iBACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,WAEA,aAAA,cACA,QAAA,SAAA,QACA,MAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OChHA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA;EAEA,SAAA,QASA,QAAA,QAAA,KAAA,OAAA,eACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,eACA,OAAA,KAAA,GAAA,KAAA,OAAA,MAAA,GAAA,MAAA,GAEA,OAAA,KAAA,GAAA,KAAA,OAAA,MAAA,GAAA,MAAA,GAIA,QAAA,wBAAA,OAAA,cAAA,KACA,MAAA,QAAA,IAAA,OAAA,MAAA,KAAA,OAAA,eAlBA,GAAA,QACA,GAAA,gCACA,GAAA,gCACA,GAAA,4BACA,GAAA,gCACA,GAAA,uBAgBA,OAAA,QAAA,aAAA,MACA,OAAA,uGAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,0EAAA,MAAA,KACA,cAAA,kBAAA,MAAA,KACA,YAAA,kBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,uBACA,IAAA,2BACA,KAAA,kCAEA,UACA,QAAA,uBACA,QAAA,oBACA,SAAA,qBACA,QAAA,sBACA,SAAA,gCACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,iBACA,EAAA,SACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,OACA,GAAA,wBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCvEA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,YACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,gBACA,QAAA,eACA,SAAA,eACA,QAAA,gBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,8BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,iCAGA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,UACA,EAAA,kBACA,EAAA,SACA,GAAA,YACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,QACA,GAAA,YACA,EAAA,SACA,GAAA,aAEA,aAAA,8BACA,QAAA,SAAA,QACA,GAAA,WAAA,OAAA,GACA,YAAA,OAAA,GACA,OAAA,KAAA,OACA,OAAA,MACA,IAAA,YACA,OAAA,MACA,YAAA,IAAA,GAAA,YACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,WAAA,IAAA,UACA,OAAA,MAEA,OAAA,OAGA,MACA,IAAA,EACA,IAAA,OChFA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,yEAAA,MAAA,KACA,SAAA,wEAAA,MAAA,KACA,cAAA,2CAAA,MAAA,KACA,YAAA,wBAAA,MAAA,KACA,gBACA,GAAA,aACA,IAAA,gBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,aACA,QAAA,YACA,SAAA,WACA,QAAA,cACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,aACA,KAAA,WACA,EAAA,gBACA,EAAA,eACA,GAAA,cACA,EAAA,eACA,GAAA,cACA,EAAA,YACA,GAAA,WACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,WAEA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,SACA,GAAA,KACA,SACA,GAAA,KACA,eACA,GAAA,KACA,aAEA,cCxDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,wFAAA,MAAA,KACA,YAAA,gFAAA,MAAA,KACA,SAAA,uDAAA,MAAA,KACA,cAAA,kCAAA,MAAA,KACA,YAAA,qBAAA,MAAA,KACA,gBACA,GAAA,eACA,IAAA,kBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,UACA,QAAA,aACA,SAAA,WACA,QAAA,WACA,SAAA,mBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,YACA,EAAA,QACA,EAAA,WACA,GAAA,YACA,EAAA,SACA,GAAA,SACA,EAAA,UACA,GAAA,UACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,YAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,SAAA,SAAA,MAEA,MAAA,GAAA,KACA,SACA,GAAA,KACA,QACA,GAAA,KACA,SACA,GAAA,KACA,WAEA,UAGA,MACA,IAAA,EACA,IAAA,OCjGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,6CAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,yBACA,KAAA,gCAEA,SAAA,SAAA,OACA,MAAA,IAAA,MACA,OACA,GAAA,MACA,YACA,GAAA,MACA,SAEA,SAGA,UACA,QAAA,sBACA,QAAA,kBACA,SAAA,kBACA,QAAA,sBACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,gBACA,EAAA,gBACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,SACA,EAAA,SACA,GAAA,UACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,OC3DA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAEA,OAAA,QAAA,aAAA,MACA,OAAA,2FAAA,MAAA,KACA,YAAA,mDAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,8BAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,kBACA,QAAA,sBACA,SAAA,gBACA,QAAA,mBACA,SAAA,6BACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,kBACA,EAAA,kBACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,SACA,EAAA,OACA,GAAA,OACA,EAAA,UACA,GAAA,WAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,MACA,IAAA,EACA,IAAA,OChFA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,gCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,wBACA,KAAA,8BAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,iBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,eACA,EAAA,gBACA,EAAA,aACA,GAAA,cACA,EAAA,UACA,GAAA,WACA,EAAA,SACA,GAAA,WACA,EAAA,WACA,GAAA,aACA,EAAA,SACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCnDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,uEAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,0CAAA,MAAA,KACA,YAAA,6BAAA,MAAA,KACA,gBACA,GAAA,eACA,IAAA,kBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,SACA,GAAA,KACA,SACA,GAAA,KACA,OAEA,QAGA,UACA,QAAA,UACA,QAAA,YACA,SAAA,qBACA,QAAA,YACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,OACA,KAAA,WACA,EAAA,WACA,EAAA,WACA,GAAA,WACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,SACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,WAEA,MACA,IAAA,EACA,IAAA,OClGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,qBAAA,6DAAA,MAAA,KACA,uBAAA,kDAAA,MAAA,IAEA,OAAA,QAAA,aAAA,MACA,OAAA,0FAAA,MAAA,KACA,YAAA,SAAA,EAAA,QACA,MAAA,QAAA,KAAA,QACA,uBAAA,EAAA,SAEA,oBAAA,EAAA,UAGA,SAAA,6DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,kBACA,QAAA,iBACA,SAAA,eACA,QAAA,mBACA,SAAA,2BACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,aACA,EAAA,oBACA,EAAA,aACA,GAAA,aACA,EAAA,UACA,GAAA,SACA,EAAA,UACA,GAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WAEA,aAAA,kBACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,QAAA,IAAA,QAAA,QAAA,GAAA,MAAA,OAEA,MACA,IAAA,EACA,IAAA,OC7DA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,oBACA,QAAA,uBACA,SAAA,mBACA,QAAA,oBACA,SAAA,gCACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,eACA,EAAA,eACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,SACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OClDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAIA,QAAA,QAAA,GACA,MAAA,GAAA,EAAA,IAAA,EAAA,GAAA,MAAA,EAAA,IAAA,KAAA,EAGA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,SAAA,QACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,SAAA,QACA,KAAA,IACA,MAAA,eAAA,UAAA,SACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,UAAA,SACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,WAAA,WACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,OAAA,QArBA,GAAA,kBAAA,mGAAA,MAAA,KACA,iBAAA,qGAAA,MAAA,IAwBA,OAAA,QAAA,aAAA,MACA,OAAA,SAAA,eAAA,QACA,MAAA,SAAA,KAAA,QACA,iBAAA,eAAA,SAEA,iBAAA,eAAA,UAGA,YAAA,kDAAA,MAAA,KACA,SAAA,6DAAA,MAAA,KACA,cAAA,0BAAA,MAAA,KACA,YAAA,sBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,eACA,SAAA,kBACA,QAAA,iBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,2BACA,KAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,wBACA,SACA,MAAA,2BAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,eACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,UACA,GAAA,UACA,EAAA,MACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OC5FA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,2FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,iFAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,yBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,gCACA,KAAA,uCAEA,UACA,QAAA,eACA,QAAA,iBACA,SAAA,eACA,QAAA,gBACA,SAAA,WACA,MAAA,KAAA,KAAA,OAAA,IAAA,KAAA,MACA,wBACA,yBAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,UCnDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,2FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,iFAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,yBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,2BACA,KAAA,kCAEA,UACA,QAAA,eACA,QAAA,iBACA,SAAA,eACA,QAAA,gBACA,SAAA,WACA,MAAA,KAAA,KAAA,OAAA,IAAA,KAAA,MACA,wBACA,yBAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,QACA,EAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCrDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,SACA,GAAA,MACA,GAAA,OACA,GAAA,OACA,GAAA,OAEA,UAAA,GAKA,QAJA,OAAA,KAAA,IAAA,QAAA,KAAA,OAAA,MAAA,KACA,UAAA,QAGA,OAAA,UAAA,OAAA,KAGA,MAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,gEAAA,MAAA,KACA,SAAA,kDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,mBACA,KAAA,0BAEA,UACA,QAAA,cACA,QAAA,gBACA,SAAA,eACA,QAAA,eACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,aACA,EAAA,iBACA,EAAA,WACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,OACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,QACA,GAAA,wBAEA,MACA,IAAA,EACA,IAAA,OChEA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,QAAA,KAAA,KACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,KAAA,KAAA,GAAA,IAAA,MAAA,GAAA,MAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,KAAA,GAAA,IAAA,KAAA,IAAA,KAAA,IAAA,MAAA,GAAA,MAAA,GAGA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,sBAAA,sBACA,GAAA,iBACA,GAAA,gBACA,GAAA,uBACA,GAAA,eAEA,OAAA,MAAA,IACA,cAAA,SAAA,SAGA,OAAA,IAAA,OAAA,OAAA,MAAA,QAIA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,kFAAA,MAAA,KACA,WAAA,oFAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,wBAAA,EAAA,QACA,GAAA,cACA,WAAA,qDAAA,MAAA,KACA,WAAA,oDAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,aAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,gEAAA,MAAA,KACA,WAAA,gEAAA,MAAA,MAGA,SAAA,iDAAA,KAAA,QACA,aACA,YAEA,OAAA,UAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,uBACA,SAAA,oBACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,aAAA,QAAA,QAAA,QAAA,QAAA,YAAA,QAAA,QAAA,QAAA,QAAA,QAAA,QAAA,SACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,iBACA,QAAA,gBACA,QAAA,eACA,SAAA,WACA,MAAA,KAAA,KAAA,MAAA,mBAAA,mBAEA,SAAA,SAAA,KACA,GAAA,IAAA,SAAA,KAAA,OAcA,MAAA,KAAA,KAAA,MACA,mBAEA,iBAhBA,QAAA,KAAA,OACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,4BAUA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,mBACA,EAAA,uBACA,GAAA,uBACA,EAAA,MACA,GAAA,uBACA,EAAA,OACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,MACA,GAAA,wBAGA,cAAA,wBACA,KAAA,SAAA,OACA,MAAA,iBAAA,KAAA,QAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,OACA,GAAA,KACA,MAEA,UAIA,aAAA,mBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,MAAA,QAAA,IACA,KAAA,IACA,MAAA,QAAA,KACA,KAAA,IACA,IAAA,IACA,MAAA,QAAA,IACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OCvKA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAIA,QAAA,QAAA,GACA,MAAA,GAAA,GAAA,EAAA,EAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,gBAAA,SAAA,aAAA,eACA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,MACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,MAAA,OAEA,OAAA,OAGA,KAAA,IACA,MAAA,gBAAA,SAAA,SAAA,UACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,UAAA,YAEA,OAAA,UAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,OACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,OAAA,SAEA,OAAA,SAtDA,GAAA,QAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,IA2DA,OAAA,QAAA,aAAA,MACA,OAAA,OACA,YAAA,YACA,YAAA,SAAA,OAAA,aACA,GAAA,GAAA,eACA,KAAA,EAAA,EAAA,GAAA,EAAA,IAEA,aAAA,GAAA,GAAA,QAAA,IAAA,OAAA,GAAA,MAAA,YAAA,GAAA,IAAA,IAEA,OAAA,eACA,OAAA,aACA,SAAA,sDAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,gBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,mBACA,KAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,yBAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCtJA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,aAAA,YACA,KAAA,KAUA,MARA,SADA,IAAA,OACA,SACA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,OACA,SAEA,OAGA,KAAA,IACA,MAAA,eAAA,UAAA,SACA,KAAA,KAUA,MARA,SADA,IAAA,OACA,MACA,IAAA,OACA,MACA,IAAA,QAAA,IAAA,OACA,MAEA,IAGA,KAAA,KAMA,MAJA,SADA,IAAA,OACA,MAEA,KAGA,KAAA,KAUA,MARA,SADA,IAAA,OACA,QACA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,OACA,SAEA,SAGA,KAAA,KAUA,MARA,SADA,IAAA,OACA,OACA,IAAA,OACA,OACA,IAAA,QAAA,IAAA,OACA,OAEA,OAMA,MAAA,QAAA,aAAA,MACA,OAAA,wFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,gBACA,QAAA,gBAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,qBAGA,QAAA,iBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,4BAGA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,WACA,EAAA,eACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,UACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCxIA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,gFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,mBAAA,MAAA,KACA,SAAA,SAAA,OACA,MAAA,IAAA,MAAA,KAAA,MAEA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,gBACA,SAAA,eACA,QAAA,cACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,aACA,EAAA,eACA,EAAA,aACA,GAAA,YACA,EAAA,UACA,GAAA,SACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCvDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,aACA,OACA,GAAA,cAAA,gBACA,IAAA,QAAA,SAAA,UACA,GAAA,YAAA,eACA,IAAA,MAAA,OAAA,QACA,IAAA,MAAA,OAAA,QACA,IAAA,QAAA,SAAA,UACA,IAAA,SAAA,SAAA,WAEA,uBAAA,SAAA,OAAA,SACA,MAAA,KAAA,OAAA,QAAA,GAAA,QAAA,GAAA,GAAA,OAAA,QAAA,GAAA,QAAA,IAEA,UAAA,SAAA,OAAA,cAAA,KACA,GAAA,SAAA,WAAA,MAAA,IACA,OAAA,KAAA,IAAA,OACA,cAAA,QAAA,GAAA,QAAA,GAEA,OAAA,IAAA,WAAA,uBAAA,OAAA,UAKA,OAAA,QAAA,aAAA,WACA,QAAA,SAAA,UAAA,OAAA,QAAA,MAAA,MAAA,MAAA,SAAA,YAAA,UAAA,WAAA,YACA,aAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,OAAA,OAAA,OAAA,OAAA,QACA,UAAA,SAAA,YAAA,SAAA,QAAA,WAAA,QAAA,UACA,eAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,QACA,aAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,qBACA,KAAA,GACA,MAAA,oBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,cACA,SAAA,WACA,GAAA,eACA,2BACA,+BACA,4BACA,0BACA,8BACA,2BACA,2BAEA,OAAA,cAAA,KAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,mBACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,MACA,GAAA,WAAA,UACA,EAAA,QACA,GAAA,WAAA,UACA,EAAA,SACA,GAAA,WAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCnGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA;EAEA,SAAA,QACA,GAAA,aACA,OACA,GAAA,cAAA,gBACA,IAAA,QAAA,SAAA,UACA,GAAA,YAAA,eACA,IAAA,MAAA,OAAA,QACA,IAAA,MAAA,OAAA,QACA,IAAA,QAAA,SAAA,UACA,IAAA,SAAA,SAAA,WAEA,uBAAA,SAAA,OAAA,SACA,MAAA,KAAA,OAAA,QAAA,GAAA,QAAA,GAAA,GAAA,OAAA,QAAA,GAAA,QAAA,IAEA,UAAA,SAAA,OAAA,cAAA,KACA,GAAA,SAAA,WAAA,MAAA,IACA,OAAA,KAAA,IAAA,OACA,cAAA,QAAA,GAAA,QAAA,GAEA,OAAA,IAAA,WAAA,uBAAA,OAAA,UAKA,OAAA,QAAA,aAAA,MACA,QAAA,SAAA,UAAA,OAAA,QAAA,MAAA,MAAA,MAAA,SAAA,YAAA,UAAA,WAAA,YACA,aAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,OAAA,OAAA,OAAA,OAAA,QACA,UAAA,UAAA,aAAA,SAAA,QAAA,WAAA,QAAA,UACA,eAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,QACA,aAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,oBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,cACA,SAAA,WACA,GAAA,eACA,4BACA,gCACA,4BACA,0BACA,8BACA,2BACA,2BAEA,OAAA,cAAA,KAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,mBACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,MACA,GAAA,WAAA,UACA,EAAA,QACA,GAAA,WAAA,UACA,EAAA,SACA,GAAA,WAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OCnGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,oDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,YACA,QAAA,eACA,QAAA,YACA,SAAA,UACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,eACA,EAAA,iBACA,EAAA,WACA,GAAA,aACA,EAAA,WACA,GAAA,YACA,EAAA,SACA,GAAA,WACA,EAAA,WACA,GAAA,aACA,EAAA,SACA,GAAA,SAEA,aAAA,eACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,IACA,IAAA,EAAA,IACA,IAAA,EAAA,IACA,IAAA,EAAA,IAAA,GACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OCzDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QA0BA,MAAA,QAAA,aAAA,MACA,OAAA,0FAAA,MAAA,KACA,YAAA,0FAAA,MAAA,KACA,SAAA,8FAAA,MAAA,KACA,cAAA,mDAAA,MAAA,KACA,YAAA,sBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,aACA,QAAA,YACA,SAAA,WACA,QAAA,cACA,SAAA,yBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,UACA,EAAA,oBACA,EAAA,cACA,GAAA,gBACA,EAAA,gBACA,GAAA,eACA,EAAA,WACA,GAAA,aACA,EAAA,YACA,GAAA,cACA,EAAA,aACA,GAAA,eAYA,aAAA,aACA,QAAA,SAAA,QACA,MAAA,QAAA,OAMA,SAAA,SAAA,MACA,MAAA,OAAA,GAAA,IAAA,KACA,QACA,MAAA,IAAA,IAAA,KACA,WACA,MAAA,IAAA,IAAA,KACA,WACA,MAAA,IAAA,IAAA,KACA,QACA,MAAA,IAAA,IAAA,KACA,QACA,MAAA,GAAA,GAAA,KACA,SADA,QAIA,MACA,IAAA,EACA,IAAA,OC1GA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,yEAAA,MAAA,KACA,SAAA,iDAAA,MAAA,KACA,cAAA,8CAAA,MAAA,KACA,YAAA,yBAAA,MAAA,KACA,gBACA,GAAA,kBACA,IAAA,cACA,EAAA,aACA,GAAA,cACA,IAAA,sBACA,KAAA,kCAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,aAEA,cAGA,UACA,QAAA,mBACA,QAAA,qBACA,SAAA,qBACA,QAAA,wBACA,SAAA,6BACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,YACA,EAAA,eACA,EAAA,SACA,GAAA,UACA,EAAA,YACA,GAAA,aACA,EAAA,QACA,GAAA,SACA,EAAA,UACA,GAAA,WACA,EAAA,OACA,GAAA,aCnDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,0FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,wBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,YACA,GAAA,eACA,IAAA,kBACA,KAAA,0BAEA,UACA,QAAA,iBACA,QAAA,gBACA,SAAA,eACA,QAAA,kBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,mBACA,EAAA,gBACA,EAAA,eACA,GAAA,YACA,EAAA,aACA,GAAA,UACA,EAAA,aACA,GAAA,UACA,EAAA,cACA,GAAA,WACA,EAAA,aACA,GAAA,WAEA,aAAA,UACA,QAAA,SAAA,QACA,MAAA,SAEA,MACA,IAAA,EACA,IAAA,OCnDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,WACA,EAAA,QACA,EAAA,QACA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,EAAA,OACA,EAAA,OACA,GAAA,OACA,GAAA,OAEA,EAAA,QACA,EAAA,QACA,IAAA,QAEA,EAAA,OAEA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,GAAA,QACA,GAAA,QAGA,OAAA,QAAA,aAAA,MACA,OAAA,6EAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,kBACA,QAAA,kBACA,SAAA,2BACA,QAAA,WACA,SAAA,+BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,UACA,EAAA,gBACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,SACA,GAAA,QACA,EAAA,UACA,GAAA,UAEA,aAAA,wCACA,QAAA,SAAA,QACA,GAAA,IAAA,OACA,MAAA,QAAA,OAEA,IAAA,GAAA,OAAA,GACA,EAAA,OAAA,IAAA,EACA,EAAA,QAAA,IAAA,IAAA,IAEA,OAAA,SAAA,SAAA,IAAA,SAAA,IAAA,SAAA,KAEA,MACA,IAAA,EACA,IAAA,OCtFA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,YACA,OAAA,wFAAA,MAAA,KACA,YAAA,wFAAA,MAAA,KACA,SAAA,kDAAA,MAAA,KACA,cAAA,kDAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,eACA,QAAA,cACA,SAAA,cACA,QAAA,gBACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,iBACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,cACA,EAAA,MACA,GAAA,WACA,EAAA,QACA,GAAA,YACA,EAAA,QACA,GAAA,aAEA,MACA,IAAA,EACA,IAAA,QChDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,OACA,OAAA,kFAAA,MAAA,KACA,YAAA,kFAAA,MAAA,KACA,SAAA,kDAAA,MAAA,KACA,cAAA,kDAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,cACA,QAAA,cACA,SAAA,cACA,QAAA,eACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,cACA,EAAA,MACA,GAAA,WACA,EAAA,QACA,GAAA,YACA,EAAA,QACA,GAAA,aAEA,MACA,IAAA,EACA,IAAA,QC/CA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,QAAA,KAAA,KACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,KAAA,KAAA,GAAA,IAAA,MAAA,GAAA,MAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,KAAA,GAAA,IAAA,KAAA,IAAA,KAAA,IAAA,MAAA,GAAA,MAAA,GAGA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,yBACA,GAAA,sBACA,GAAA,gBACA,GAAA,wBACA,GAAA,iBAEA,OAAA,MAAA,IACA,cAAA,UAAA,UAEA,MAAA,IACA,cAAA,SAAA,SAGA,OAAA,IAAA,OAAA,OAAA,MAAA,QAIA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,iGAAA,MAAA,KACA,WAAA,yFAAA,MAAA,MAGA,SAAA,gBAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,0DAAA,MAAA,KACA,WAAA,0DAAA,MAAA,KACA,SAAA,4DAAA,MAAA,MAGA,SAAA,qBAAA,KAAA,QACA,aACA,sCAAA,KAAA,QACA,WACA,YAEA,OAAA,UAAA,UAAA,EAAA,OAGA,QAAA,sBAAA,KACA,MAAA,YACA,MAAA,KAAA,KAAA,KAAA,KAAA,QAAA,IAAA,IAAA,QAIA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,yDAAA,MAAA,KACA,SAAA,oBACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,qBAAA,cACA,QAAA,qBAAA,YACA,QAAA,qBAAA,WACA,SAAA,qBAAA,cACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,sBAAA,oBAAA,KAAA,KACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,sBAAA,qBAAA,KAAA,QAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,kBACA,EAAA,uBACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,OACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,MACA,GAAA,wBAKA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,MAEA,UAIA,aAAA,iBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACA,IAAA,IACA,MAAA,QAAA,IACA,KAAA,IACA,MAAA,QAAA,KACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OCvJA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,kFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,uDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,uBACA,QAAA,mBACA,SAAA,2BACA,QAAA,sBACA,SAAA,mCACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,oBACA,EAAA,SACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,SACA,GAAA,QACA,EAAA,UACA,GAAA,UAEA,MACA,IAAA,EACA,IAAA,OChDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qGAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,oBACA,IAAA,uBACA,KAAA,6BACA,EAAA,YACA,GAAA,aACA,IAAA,gBACA,KAAA,sBAEA,UACA,QAAA,mBACA,QAAA,oBACA,SAAA,yBACA,QAAA,mBACA,SAAA,yBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,WACA,EAAA,WACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,WACA,GAAA,UACA,EAAA,YACA,GAAA,WACA,EAAA,UACA,GAAA,UAEA,aAAA,UACA,QAAA,SAAA,QACA,MAAA,SAEA,MACA,IAAA,EACA,IAAA,OCvDA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,UACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,mBACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,oBAEA,SAAA,SAAA,KAAA,QACA,GAAA,IAAA,IAAA,KAAA,MACA,OAAA,KAAA,GACA,KACA,IAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KAEA,MAGA,UACA,QAAA,WACA,MAAA,KAAA,KAAA,UAAA,aAAA,UAEA,QAAA,WACA,MAAA,KAAA,KAAA,UAAA,aAAA,UAEA,QAAA,WACA,MAAA,KAAA,KAAA,UAAA,aAAA,UAEA,SAAA,WACA,GAAA,aAAA,MAGA,OAFA,aAAA,SAAA,QAAA,QACA,OAAA,KAAA,OAAA,YAAA,QAAA,OAAA,MAAA,MACA,IAAA,KAAA,UAAA,OAAA,UAAA,OAAA,YAEA,SAAA,WACA,GAAA,aAAA,MAGA,OAFA,aAAA,SAAA,QAAA,QACA,OAAA,KAAA,OAAA,YAAA,OAAA,MAAA,MACA,IAAA,KAAA,UAAA,OAAA,UAAA,OAAA,YAEA,SAAA,MAEA,aAAA,iBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,MAAA,QAAA,GACA,KAAA,IACA,MAAA,QAAA,GACA,KAAA,IACA,IAAA,IACA,MAAA,QAAA,GACA,SACA,MAAA,UAGA,cACA,OAAA,MACA,KAAA,MACA,EAAA,KACA,EAAA,MACA,GAAA,OACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,OAEA,MAEA,IAAA,EACA,IAAA,OCtGA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,UACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,mBACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,oBAEA,SAAA,SAAA,KAAA,QACA,GAAA,IAAA,IAAA,KAAA,MACA,OAAA,KAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KAEA,MAGA,UACA,QAAA,SACA,QAAA,SACA,SAAA,YACA,QAAA,SACA,SAAA,YACA,SAAA,KAEA,aAAA,iBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,MAAA,QAAA,GACA,KAAA,IACA,MAAA,QAAA,GACA,KAAA,IACA,IAAA,IACA,MAAA,QAAA,GACA,SACA,MAAA,UAGA,cACA,OAAA,MACA,KAAA,MACA,EAAA,KACA,EAAA,MACA,GAAA,OACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,WC9EA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,8FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,IAAA,MACA,QAAA,KAAA,KAEA,QAAA,KAAA,MAGA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,eACA,SAAA,eACA,QAAA,iBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,YACA,EAAA,mBACA,EAAA,YACA,GAAA,YACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,SACA,EAAA,WACA,GAAA,YACA,EAAA,UACA,GAAA,WAEA,aAAA,kBACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,QAAA,IAAA,QAAA,QAAA,GAAA,MAAA,OAEA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wEAAA,MAAA,KACA,YAAA,wEAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,wCAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,wBACA,QAAA,sBACA,SAAA,uBACA,QAAA,sBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,WACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,QASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,SACA,OAAA,6EAAA,MAAA,KACA,YAAA,6EAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,wCAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,IAEA,KAGA,UACA,QAAA,wBACA,QAAA,sBACA,SAAA,uBACA,QAAA,sBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,WACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,YAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,MACA,IAAA,EACA,IAAA,QAWA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KACA,WAAA,SAAA,GACA,MAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GACA,SACA,GAAA,eAAA,eAAA,UAAA,WAAA,UAAA,WAAA,YACA,GAAA,eAAA,eAAA,UAAA,WAAA,WAAA,WAAA,YACA,GAAA,cAAA,cAAA,SAAA,UAAA,WAAA,UAAA,WACA,GAAA,aAAA,YAAA,QAAA,SAAA,UAAA,WAAA,UACA,GAAA,aAAA,YAAA,QAAA,SAAA,UAAA,UAAA,UACA,GAAA,aAAA,YAAA,QAAA,SAAA,WAAA,WAAA,WACA,UAAA,SAAA,GACA,MAAA,UAAA,OAAA,eACA,GAAA,GAAA,WAAA,QACA,IAAA,QAAA,GAAA,WAAA,QAIA,OAHA,KAAA,IACA,IAAA,IAAA,cAAA,EAAA,IAEA,IAAA,QAAA,MAAA,UAEA,QACA,qBACA,cACA,YACA,cACA,YACA,eACA,aACA,WACA,eACA,qBACA,sBACA,qBAGA,OAAA,QAAA,aAAA,MACA,OAAA,OACA,YAAA,OACA,SAAA,sDAAA,MAAA,KACA,cAAA,wCAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,IAEA,KAGA,UACA,QAAA,wBACA,QAAA,uBACA,SAAA,uBACA,QAAA,sBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,SACA,EAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,MAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,MACA,IAAA,EACA,IAAA,QASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,WACA,EAAA,QACA,EAAA,QACA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,EAAA,OACA,EAAA,OACA,GAAA,OACA,GAAA,OAEA,EAAA,QACA,EAAA,QACA,IAAA,QAEA,EAAA,OAEA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,GAAA,QACA,GAAA,QAEA,OAAA,QAAA,aAAA,MACA,OAAA,+EAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qEAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,kBACA,QAAA,kBACA,SAAA,+BACA,QAAA,aACA,SAAA,+BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,kBACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,SACA,GAAA,QACA,EAAA,SACA,GAAA,SAEA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,SAEA,SAGA,aAAA,wCACA,QAAA,SAAA,QACA,GAAA,IAAA,OACA,MAAA,QAAA,OAEA,IAAA,GAAA,OAAA,GACA,EAAA,OAAA,IAAA,EACA,EAAA,QAAA,IAAA,IAAA,IAEA,OAAA,SAAA,SAAA,IAAA,SAAA,IAAA,SAAA,KAEA,MACA,IAAA,EACA,IAAA,OAWA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,QAAA,KAAA,KACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,KAAA,KAAA,GAAA,IAAA,MAAA,GAAA,MAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,KAAA,GAAA,IAAA,KAAA,IAAA,KAAA,IAAA,MAAA,GAAA,MAAA,GAGA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,yBAAA,yBACA,GAAA,cAAA,yBAAA,yBACA,GAAA,iBACA,GAAA,uBACA,GAAA,iBAEA,OAAA,MAAA,IACA,cAAA,UAAA,UAEA,MAAA,IACA,cAAA,UAAA,UAGA,OAAA,IAAA,OAAA,OAAA,MAAA,QAIA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,qGAAA,MAAA,KACA,WAAA,uGAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,0DAAA,MAAA,KACA,WAAA,0DAAA,MAAA,MAGA,SAAA,6CAAA,KAAA,QACA,aACA,YAEA,OAAA,UAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,0DAAA,MAAA,KACA,SAAA,oBACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,eACA,QAAA,gBACA,QAAA,eACA,SAAA,WACA,MAAA,mBAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,2BAGA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,UACA,EAAA,kBACA,EAAA,uBACA,GAAA,uBACA,EAAA,uBACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,MACA,GAAA,wBAIA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,SACA,GAAA,KACA,MAEA,UAIA,aAAA,mBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACA,IAAA,IACA,MAAA,QAAA,KAAA,GAAA,OAAA,KAAA,GAAA,OAAA,MAAA,IAAA,OAAA,MAAA,GAAA,OAAA,KAAA,OAAA,IACA,KAAA,IACA,MAAA,QAAA,KACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,YACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,cACA,SAAA,cACA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,4BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,8BAGA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,WACA,EAAA,kBACA,EAAA,SACA,GAAA,YACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,SACA,EAAA,QACA,GAAA,YACA,EAAA,SACA,GAAA,aAEA,aAAA,8BACA,QAAA,SAAA,QACA,GAAA,WAAA,OAAA,GACA,YAAA,OAAA,GACA;MAAA,KAAA,OACA,OAAA,MACA,IAAA,YACA,OAAA,MACA,YAAA,IAAA,GAAA,YACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,WAAA,IAAA,UACA,OAAA,MAEA,OAAA,OAGA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,yDAAA,MAAA,KACA,SAAA,+DAAA,MAAA,KACA,cAAA,0CAAA,MAAA,KACA,YAAA,6BAAA,MAAA,KACA,gBACA,GAAA,aACA,IAAA,gBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,UACA,QAAA,gBACA,SAAA,WACA,QAAA,aACA,SAAA,gBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,SACA,EAAA,cACA,EAAA,WACA,GAAA,WACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,UAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAMA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,MACA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,QAEA,OAGA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,qJAAA,MAAA,KACA,YAAA,qJAAA,MAAA,KACA,SAAA,gFAAA,MAAA,KACA,cAAA,oDAAA,MAAA,KACA,YAAA,oDAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,cACA,QAAA,cACA,SAAA,wBACA,QAAA,YACA,SAAA,4BACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,QACA,EAAA,aACA,GAAA,WACA,EAAA,cACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,YACA,GAAA,UACA,EAAA,UACA,GAAA,SAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,SACA,GAAA,KACA,UACA,GAAA,KACA,UACA,GAAA,KACA,UAEA,UAGA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,0BAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,WACA,GAAA,MACA,GAAA,SAEA,OAAA,QAAA,IAAA,SAAA,OAAA,KAAA,QAGA,QAAA,yBAAA,QACA,OAAA,WAAA,SACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,QAAA,QACA,SACA,MAAA,QAAA,UAIA,QAAA,YAAA,QACA,MAAA,QAAA,EACA,WAAA,OAAA,IAEA,OAGA,QAAA,UAAA,KAAA,QACA,MAAA,KAAA,OACA,aAAA,MAEA,KAGA,QAAA,cAAA,MACA,GAAA,gBACA,EAAA,IACA,EAAA,IACA,EAAA,IAEA,OAAA,UAAA,cAAA,KAAA,OAAA,IACA,KAEA,cAAA,KAAA,OAAA,IAAA,KAAA,UAAA,GAGA,MAAA,QAAA,aAAA,MACA,OAAA,gFAAA,MAAA,KACA,YAAA,mDAAA,MAAA,KACA,SAAA,6CAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,wBAAA,MAAA,KACA,gBACA,GAAA,WACA,IAAA,cACA,EAAA,aACA,GAAA,sBACA,IAAA,yBACA,KAAA,gCAEA,UACA,QAAA,gBACA,QAAA,qBACA,SAAA,eACA,QAAA,gBACA,SAAA,qBACA,SAAA,KAEA,cACA,OAAA,YACA,KAAA,SACA,EAAA,wBACA,EAAA,cACA,GAAA,yBACA,EAAA,SACA,GAAA,SACA,EAAA,YACA,GAAA,yBACA,EAAA,SACA,GAAA,yBACA,EAAA,WACA,GAAA,yBAEA,aAAA,kBACA,QAAA,SAAA,QACA,GAAA,QAAA,IAAA,OAAA,KAAA,KACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,eAAA,cACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,QAGA,KAAA,IACA,MAAA,eAAA,YAAA,aACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,MACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,OAEA,MAGA,KAAA,KAMA,MAJA,SADA,IAAA,OACA,MAEA,MAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,UAEA,SAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,UAMA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,0BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,cACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,oFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,8DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,QAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,SAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,QAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,SAAA,WACA,MAAA,wBAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,QACA,EAAA,aACA,EAAA,WACA,GAAA,YACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,qBACA,QAAA,SAAA,OAAA,QACA,GAAA,QAAA,IAAA,OAAA,IACA,IAAA,OAAA,IACA,IAAA,OAAA,IACA,IAAA,OAAA,IAAA,GAIA,QAHA,MAAA,QAAA,MAAA,UACA,OAAA,KAEA,OAAA,QAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAIA,QAAA,QAAA,GACA,MAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,IAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,gBAAA,SAAA,aAAA,eACA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,MACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,MAAA,OAEA,OAAA,KAGA,KAAA,IACA,MAAA,gBAAA,SAAA,QAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,UAEA,OAAA,QAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,OACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,OAAA,OAEA,OAAA,QAtDA,GAAA,QAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,IA2DA,OAAA,QAAA,aAAA,MACA,OAAA,OACA,YAAA,YACA,YAAA,SAAA,OAAA,aACA,GAAA,GAAA,eACA,KAAA,EAAA,EAAA,GAAA,EAAA,IAEA,aAAA,GAAA,GAAA,QAAA,IAAA,OAAA,GAAA,MAAA,YAAA,GAAA,IAAA,IAEA,OAAA,eACA,OAAA,aACA,SAAA,mDAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,kBACA,KAAA,GACA,MAAA,mBACA,KAAA,GACA,MAAA,gBACA,KAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,uBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,0BAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,gEAAA,MAAA,KACA,YAAA,iDAAA,MAAA,KACA,SAAA,oEAAA,MAAA,KACA,cAAA,6BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,sCACA,IAAA,0CACA,KAAA,iDAEA,UACA,QAAA,sBACA,QAAA,sBACA,QAAA,sBACA,SAAA,4BACA,SAAA,4BACA,SAAA,KAEA,cACA,OAAA,SAAA,QACA,GAAA,OAAA,UAAA,KAAA,QAAA,MAAA,QAAA,KAAA,QAAA,MAAA,KACA,OAAA,QAAA,OAEA,KAAA,YACA,EAAA,iBACA,EAAA,YACA,GAAA,WACA,EAAA,YACA,GAAA,WACA,EAAA,UACA,GAAA,SACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,UAEA,aAAA,cACA,QAAA,SACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,qDAAA,MAAA,KACA,SAAA,+EAAA,MAAA,KACA,cAAA,+BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KAEA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,gBACA,SAAA,eACA,QAAA,eACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,WACA,EAAA,mBACA,EAAA,QACA,GAAA,WACA,EAAA,MACA,GAAA,SACA,EAAA,UACA,GAAA,aACA,EAAA,MACA,GAAA,SACA,EAAA,WACA,GAAA,cAEA,aAAA,mCAEA,QAAA,SAAA,QACA,GAAA,GAAA,OACA,OAAA,GACA,QACA,GAAA,KAAA,KAAA,MAAA,MAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MACA,KAAA,MAAA,KAAA,KAAA,MAAA,KAAA,KAAA,MAAA,KAAA,MAaA,OAVA,GAAA,GAEA,OADA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA,MAAA,EACA,MAEA,MAEA,EAAA,IACA,OAAA,OAAA,IAGA,OAAA,QAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,sFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,6BAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,iBACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,cACA,EAAA,WACA,GAAA,cACA,EAAA,UACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,WACA,GAAA,aACA,EAAA,QACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAWA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,gBACA,GAAA,cAAA,gBACA,GAAA,UAAA,aACA,IAAA,OAAA,QAAA,OAAA,UACA,GAAA,YAAA,eACA,IAAA,OAAA,UAAA,OAAA,YACA,GAAA,WAAA,cACA,IAAA,OAAA,SAAA,OAAA,WAEA,OAAA,eAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,MAAA,QAAA,aAAA,SACA,OAAA,qFAAA,MAAA,KACA,YAAA,+DAAA,MAAA,KACA,SAAA,8DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,sBACA,SAAA,IACA,QAAA,uBACA,SAAA,qBACA,QAAA,wBACA,SAAA,gCAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,oBACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,qBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,gBACA,GAAA,cAAA,gBACA,GAAA,UAAA,aACA,IAAA,OAAA,QAAA,OAAA,UACA,GAAA,YAAA,eACA,IAAA,OAAA,UAAA,OAAA,YACA,GAAA,WAAA,cACA,IAAA,OAAA,SAAA,OAAA,WAEA,OAAA,eAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,+DAAA,MAAA,KACA,SAAA,8DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,sBACA,SAAA,IACA,QAAA,uBACA,SAAA,qBACA,QAAA,wBACA,SAAA,gCAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,oBACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,qBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,mBAAA,qHAAA,MAAA,KACA,iBAAA,qHAAA,MAAA,KACA,OAAA,SAAA,eAAA,QACA,MAAA,IAAA,KAAA,OAAA,UAAA,EAAA,OAAA,QAAA,UACA,KAAA,kBAAA,eAAA,SAEA,KAAA,oBAAA,eAAA,UAGA,YAAA,oDAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,OAAA,GACA,QAAA,KAAA,KAEA,QAAA,KAAA,MAGA,KAAA,SAAA,OACA,MAAA,OAAA,MAAA,IAAA,cAAA,IAEA,cAAA,gBACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,YACA,QAAA,iBACA,QAAA,gBACA,SAAA,eACA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,+BACA,SACA,MAAA,mCAGA,SAAA,KAEA,SAAA,SAAA,IAAA,KACA,GAAA,QAAA,KAAA,YAAA,KACA,MAAA,KAAA,IAAA,OAMA,OAJA,kBAAA,UACA,OAAA,OAAA,MAAA,MAGA,OAAA,QAAA,KAAA,MAAA,KAAA,EAAA,MAAA,SAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,oBACA,EAAA,YACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,WACA,GAAA,WACA,EAAA,aACA,GAAA,WACA,EAAA,cACA,GAAA,aAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,gBACA,QAAA,mBACA,SAAA,eACA,QAAA,oBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,gBACA,EAAA,WACA,GAAA,aACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,UACA,EAAA,UACA,GAAA,YACA,EAAA,SACA,GAAA,YAEA,aAAA,uBACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KAAA,IACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,gBACA,QAAA,mBACA,SAAA,eACA,QAAA,oBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,gBACA,EAAA,WACA,GAAA,aACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,UACA,EAAA,UACA,GAAA,YACA,EAAA,SACA,GAAA,YAEA,aAAA,uBACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KAAA,IACA,OAAA,QAAA,YASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,gBACA,QAAA,mBACA,SAAA,eACA,QAAA,oBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,gBACA,EAAA,WACA,GAAA,aACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,UACA,EAAA,UACA,GAAA,YACA,EAAA,SACA,GAAA,YAEA,aAAA,uBACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KAAA,IACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OAWA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,6FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,gCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,uBACA,IAAA,0BACA,KAAA,sCAEA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,OAAA,GACA,QAAA,SAAA,SAEA,QAAA,SAAA,UAGA,UACA,QAAA,iBACA,QAAA,iBACA,SAAA,eACA,QAAA,iBACA,SAAA,yBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,WACA,EAAA,SACA,GAAA,aACA,EAAA,OACA,GAAA,WACA,EAAA,OACA,GAAA,WACA,EAAA,SACA,GAAA,aACA,EAAA,OACA,GAAA,YAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,gBAAA,8DAAA,MAAA,KACA,YAAA,kDAAA,MAAA,IAEA,OAAA,QAAA,aAAA,MACA,OAAA,2FAAA,MAAA,KACA,YAAA,SAAA,EAAA,QACA,MAAA,QAAA,KAAA,QACA,YAAA,EAAA,SAEA,eAAA,EAAA,UAGA,SAAA,uDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,2BACA,KAAA,kCAEA,UACA,QAAA,WACA,MAAA,aAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,QAAA,WACA,MAAA,gBAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,SAAA,WACA,MAAA,cAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,QAAA,WACA,MAAA,cAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,SAAA,WACA,MAAA,0BAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,gBACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,IAAA,UACA,GAAA,SACA,GAAA,eAAA,cAAA,iBACA,GAAA,aAAA,aACA,IAAA,OAAA,UAAA,OAAA,YACA,GAAA,YAAA,YAAA,YACA,IAAA,OAAA,SAAA,OAAA,UACA,GAAA,YAAA,YACA,GAAA,UAAA,WAAA,WACA,IAAA,OAAA,OAAA,OAAA,SACA,GAAA,YAAA,QAAA,aACA,IAAA,OAAA,SAAA,OAAA,WAEA,OAAA,eACA,OAAA,KAAA,GAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAEA,SAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,MAAA,QAAA,aAAA,MACA,OAAA,6FAAA,MAAA,KACA,YAAA,6DAAA,MAAA,KACA,SAAA,iEAAA,MAAA,KACA,cAAA,gBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,aACA,QAAA,cACA,SAAA,qBACA,QAAA,aACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,YACA,KAAA,YACA,EAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,WACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,qBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,+FAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,sEAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,0BACA,IAAA,6BACA,KAAA,mCACA,EAAA,WACA,GAAA,oBACA,IAAA,uBACA,KAAA,6BAEA,UACA,QAAA,kBACA,QAAA,mBACA,SAAA,gBACA,QAAA,kBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,iBACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,UACA,EAAA,eACA,GAAA,cACA,EAAA,WACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,wEAAA,MAAA,KACA,YAAA,wEAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,qDAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,aAEA;EAGA,UACA,QAAA,kBACA,QAAA,iBACA,SAAA,iBACA,QAAA,kBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,cACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,UAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,SAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,QASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAOA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,EACA,QAAA,KACA,IAAA,IACA,MAAA,UAAA,oBAAA,iBACA,KAAA,IACA,MAAA,UAAA,WAAA,UACA,KAAA,KACA,OAAA,SAAA,WAAA,WACA,MACA,KAAA,IACA,MAAA,UAAA,SAAA,OACA,KAAA,KACA,OAAA,SAAA,SAAA,QACA,MACA,KAAA,IACA,MAAA,UAAA,SAAA,OACA,KAAA,KACA,OAAA,SAAA,SAAA,QACA,MACA,KAAA,IACA,MAAA,UAAA,YAAA,UACA,KAAA,KACA,OAAA,SAAA,YAAA,WACA,MACA,KAAA,IACA,MAAA,UAAA,SAAA,OACA,KAAA,KACA,OAAA,SAAA,SAAA,SAIA,MADA,QAAA,aAAA,OAAA,UAAA,IAAA,OAIA,QAAA,cAAA,OAAA,UACA,MAAA,IAAA,OAAA,SAAA,cAAA,QAAA,YAAA,QAAA,OA1CA,GAAA,aAAA,wEAAA,MAAA,KACA,eACA,QAAA,QAAA,SAAA,SAAA,SAAA,SAAA,SACA,YAAA,GAAA,YAAA,GAAA,YAAA,GA0CA,OAAA,QAAA,aAAA,MACA,OAAA,2GAAA,MAAA,KACA,YAAA,uEAAA,MAAA,KACA,SAAA,qEAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,mBACA,IAAA,6BACA,KAAA,mCACA,EAAA,WACA,GAAA,cACA,IAAA,wBACA,KAAA,8BAEA,UACA,QAAA,oBACA,QAAA,sBACA,SAAA,gBACA,QAAA,mBACA,SAAA,4BACA,SAAA,KAEA,cACA,OAAA,YACA,KAAA,YACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,4EAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,yBAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,kBACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,YACA,EAAA,YACA,EAAA,aACA,GAAA,cACA,EAAA,WACA,GAAA,WACA,EAAA,YACA,GAAA,WACA,EAAA,aACA,GAAA,aACA,EAAA,UACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,uFAAA,MAAA,KACA,YAAA,iEAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,qBACA,QAAA,gBACA,SAAA,cACA,QAAA,cACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,YACA,EAAA,oBACA,EAAA,aACA,GAAA,aACA,EAAA,YACA,GAAA,YACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,QACA,GAAA,UAEA,aAAA,eACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,OAAA,KAAA,SASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,iEAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,qBACA,QAAA,gBACA,SAAA,cACA,QAAA,cACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,YACA,EAAA,oBACA,EAAA,aACA,GAAA,aACA,EAAA,YACA,GAAA,YACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,QACA,GAAA,UAEA,aAAA,eACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,OAAA,KAAA,KAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,mDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,QAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,SAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,QAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,IAAA,KAAA,QAEA,SAAA,WACA,MAAA,qBAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,SAAA,KAEA,cACA,OAAA,SAAA,KACA,MAAA,iBAAA,IACA,gBAEA,MAAA,KAEA,KAAA,SACA,EAAA,eACA,EAAA,YACA,GAAA,aACA,EAAA,YACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAWA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,0EAAA,MAAA,KACA,YAAA,4DAAA,MAAA,KACA,SAAA,uCAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,oBACA,KAAA,0BACA,EAAA,WACA,GAAA,aACA,IAAA,gBACA,KAAA,sBAEA,UACA,QAAA,cACA,QAAA,aACA,SAAA,iBACA,QAAA,eACA,SAAA,+BACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,UACA,EAAA,aACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,SAEA,OAAA,SAEA,EAAA,MACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,SAEA,OAAA,SAEA,EAAA,OACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,UAEA,OAAA,WAEA,EAAA,MACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,SAEA,OAAA,cAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,8EAAA,MAAA,KACA,YAAA,6DAAA,MAAA,KACA,SAAA,uDAAA,MAAA,KACA,cAAA,kCAAA,MAAA,KACA,YAAA,qBAAA,MAAA,KACA,gBACA,GAAA,aACA,IAAA,gBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,UACA,QAAA,UACA,SAAA,WACA,QAAA,UACA,SAAA,mBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,UACA,EAAA,cACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,SACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,WAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAKA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,MACA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,MAEA,OAGA,MACA,IAAA,EACA,IAAA,OAWA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,eAAA,cACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,QAGA,KAAA,IACA,MAAA,eAAA,YAAA,aACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,MACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,OAEA,MAGA,KAAA,KAMA,MAJA,SADA,IAAA,OACA,MAEA,MAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,UAEA,SAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,UAMA,MAAA,QAAA,aAAA,MACA,OAAA,+FAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,0BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,cACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,KAAA,MAGA,QAAA,KACA,IAAA,IACA,MAAA,WAAA,cAAA,mBAAA,mBACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,QAAA,SACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,QAAA,SACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,OAAA,SACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,OAAA,SACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,OAAA,SACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,OAAA,SACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,SAAA,WACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,SAAA,WACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,MAAA,OACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,MAAA,QAGA,MAAA,GAGA,QAAA,MAAA,UACA,OAAA,SAAA,GAAA,WAAA,IAAA,YAAA,KAAA,OAAA,aAnCA,GAAA,aAAA,gEAAA,MAAA,IAsCA,OAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,qDAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,gCAAA,MAAA,KACA,YAAA,qBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,cACA,GAAA,gBACA,IAAA,oBACA,KAAA,0BAEA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,IAAA,MACA,WAAA,EAAA,KAAA,KAEA,WAAA,EAAA,KAAA,MAGA,UACA,QAAA,gBACA,QAAA,oBACA,SAAA,WACA,MAAA,MAAA,KAAA,MAAA,IAEA,QAAA,oBACA,SAAA,WACA,MAAA,MAAA,KAAA,MAAA,IAEA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,KACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,gGAAA,MAAA,KACA,WAAA,4GAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,wBAAA,GACA,GAAA,aAAA,kDAAA,MAAA,IAEA,OAAA,aAAA,EAAA,SAGA,QAAA,qBAAA,GACA,GAAA,UAAA,gEAAA,MAAA,IAEA,OAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,SACA,OAAA,kBACA,YAAA,uBACA,SAAA,oBACA,cAAA,+BAAA,MAAA,KACA,YAAA,+BAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,aACA,QAAA,YACA,QAAA,YACA,SAAA,WACA,MAAA,sBAEA,SAAA,WACA,MAAA,8BAEA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,UACA,EAAA,mBACA,EAAA,OACA,GAAA,UACA,EAAA,MACA,GAAA,SACA,EAAA,KACA,GAAA,QACA,EAAA,OACA,GAAA,UACA,EAAA,OACA,GAAA,WAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,UACA,GAAA,KACA,WACA,GAAA,KACA,UAEA,YAIA,aAAA,0BACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,MACA,IAAA,IACA,IAAA,IACA,IAAA,OACA,MAAA,KAAA,OACA,OAAA,MAEA,OAAA,KACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,6CAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,yBACA,KAAA,gCAEA,SAAA,SAAA,OACA,MAAA,IAAA,MACA,OACA,GAAA,MACA,QACA,GAAA,MACA,OAEA,SAGA,UACA,QAAA,sBACA,QAAA,mBACA,SAAA,kBACA,QAAA,qBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,eACA,EAAA,iBACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,SACA,EAAA,SACA,GAAA,UACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,QAAA,GACA,MAAA,GAAA,MAAA,IACA,EACA,EAAA,KAAA,GACA,GAEA,EAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,gBAAA,SAAA,mBAAA,kBACA,KAAA,IACA,MAAA,eAAA,SAAA,QACA,KAAA,KACA,MAAA,QAAA,QACA,QAAA,eAAA,SAAA,UAAA,WACA,cACA,OAAA,SAEA,OAAA,QACA,KAAA,KACA,MAAA,QAAA,QACA,QAAA,eAAA,SAAA,gBAAA,iBAEA,OAAA,aACA,KAAA,IACA,MAAA,eACA,QAEA,SAAA,MAAA,MACA,KAAA,KACA,MAAA,QAAA,QACA,cACA,OAAA,QAEA,QAAA,SAAA,OAAA,SACA,cACA,OAAA,QAEA,QAAA,SAAA,MAAA,OACA,KAAA,IACA,MAAA,eACA,UAEA,SAAA,QAAA,QACA,KAAA,KACA,MAAA,QAAA,QACA,cACA,OAAA,UAEA,QAAA,SAAA,SAAA,WACA,cACA,OAAA,UAEA,QAAA,SAAA,QAAA,SACA,KAAA,IACA,MAAA,gBAAA,SAAA,KAAA,KACA,KAAA,KACA,MAAA,QAAA,QACA,QAAA,eAAA,SAAA,KAAA,QAEA,QAAA,eAAA,SAAA,KAAA,QAIA,MAAA,QAAA,aAAA,MACA,OAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,mFAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,wBACA,KAAA,+BAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,iBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,iBACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,cACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,gGAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,kBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,mBACA,SAAA,iBACA,QAAA,iBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,4BACA,SACA,MAAA,+BAGA,SAAA,KAEA,cACA,OAAA,SAAA,GACA,OAAA,YAAA,KAAA,GAAA,MAAA,MAAA,IAAA,GAEA,KAAA,QACA,EAAA,iBACA,EAAA,YACA,GAAA,YACA,EAAA,SACA,GAAA,SACA,EAAA,YACA,GAAA,YACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,gBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,OACA,EAAA,aACA,GAAA,YACA,IAAA,cACA,KAAA,oBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,KAEA,MAGA,UACA,QAAA,UACA,QAAA,UACA,SAAA,cACA,QAAA,UACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,MACA,KAAA,MACA,EAAA,KACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,WASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,qGAAA,MAAA,KACA,WAAA,sGAAA,MAAA,MAGA,SAAA,eAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,gEAAA,MAAA,KACA,WAAA,iEAAA,MAAA,MAGA,SAAA,gBAAA,KAAA,QACA,aACA,YAEA,OAAA,UAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,kDAAA,MAAA,KACA,SAAA,oBACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,iBACA,QAAA,kBACA,SAAA,wBACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,SAAA,GACA,MAAA,yBAAA,KAAA,GACA,EAAA,QAAA,KAAA,MACA,EAAA,MAEA,KAAA,SAAA,GACA,MAAA,4BAAA,KAAA,GACA,EAAA,QAAA,SAAA,UAEA,OAAA,KAAA,GACA,EAAA,QAAA,QAAA,YADA,QAIA,EAAA,iBACA,EAAA,OACA,GAAA,UACA,EAAA,QACA,GAAA,WACA,EAAA,MACA,GAAA,SACA,EAAA,MACA,GAAA,SACA,EAAA,OACA,GAAA,WAEA,aAAA,8BACA,QAAA,SAAA,QACA,MAAA,KAAA,OACA,OAGA,IAAA,OACA,OAAA,MAGA,GAAA,QAAA,KAAA,QAAA,OAAA,KAAA,GAAA,OAAA,MAAA,EACA,MAAA,OAGA,OAAA,MAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yEAAA,MAAA,KACA,YAAA,yEAAA,MAAA,KACA,SAAA,iDAAA,MAAA,KACA,cAAA,iDAAA,MAAA,KACA,YAAA,iDAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,mBACA,QAAA,kBACA,SAAA,iBACA,QAAA,qBACA,SAAA,8BACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,QACA,EAAA,iBACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,QACA,GAAA,QACA,EAAA,WACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,OAYA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,gBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,UACA,IAAA,aACA,EAAA,aACA,GAAA,gBACA,IAAA,mBACA,KAAA,yBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KAAA,KAAA,MAEA,UACA,QAAA,QACA,QAAA,QACA,SAAA,UACA,QAAA,QACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,OACA,KAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,KACA,GAAA,MACA,EAAA,KACA,GAAA,OAEA,aAAA,WACA,QAAA,MACA,cAAA,UACA,KAAA,SAAA,OACA,MAAA,OAAA,WAaA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,aAAA,gBACA,GAAA,YAAA,eACA,GAAA,UAAA,aACA,GAAA,WAAA,eACA,GAAA,UAAA,cAEA,OAAA,eAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,QAAA,mBAAA,QACA,GAAA,QAAA,OAAA,OAAA,EAAA,OAAA,QAAA,KACA,OAAA,6BAAA,QACA,KAAA,OAEA,MAAA,OAGA,QAAA,iBAAA,QACA,GAAA,QAAA,OAAA,OAAA,EAAA,OAAA,QAAA,KACA,OAAA,6BAAA,QACA,QAAA,OAEA,SAAA,OAUA,QAAA,6BAAA,QAEA,GADA,OAAA,SAAA,OAAA,IACA,MAAA,QACA,OAAA,CAEA,IAAA,EAAA,OAEA,OAAA,CACA,IAAA,GAAA,OAEA,MAAA,SAAA,GAAA,GAAA,QACA,GAEA,CACA,IAAA,IAAA,OAAA,CAEA,GAAA,WAAA,OAAA,GAAA,WAAA,OAAA,EACA,OACA,6BADA,IAAA,UACA,WAEA,WACA,GAAA,IAAA,OAAA,CAEA,KAAA,QAAA,IACA,QAAA,EAEA,OAAA,6BAAA,QAIA,MADA,SAAA,IACA,4BAAA,QAIA,MAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,+DAAA,MAAA,KACA,SAAA,mEAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,cACA,IAAA,iBACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,SAAA,IACA,QAAA,eACA,SAAA,eACA,QAAA,mBACA,SAAA,WAEA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,SACA,MAAA,4BAIA,cACA,OAAA,kBACA,KAAA,gBACA,EAAA,kBACA,EAAA,oBACA,GAAA,cACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,UACA,EAAA,oBACA,GAAA,WACA,EAAA,oBACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAeA,QAAA,kBAAA,OAAA,cAAA,IAAA,UACA,MAAA,eACA,kBAEA,SAAA,kBAAA,kBAIA,QAAA,mBAAA,OAAA,cAAA,IAAA,UACA,MAAA,eAAA,MAAA,KAAA,GAAA,SAAA,MAAA,KAAA,GAAA,MAAA,KAAA,GAGA,QAAA,SAAA,QACA,MAAA,QAAA,KAAA,GAAA,OAAA,IAAA,GAAA,OAGA,QAAA,OAAA,KACA,MAAA,OAAA,KAAA,MAAA,KAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,OAAA,KAAA,OACA,OAAA,kBAAA,OAAA,cAAA,IAAA,GAAA,UACA,cACA,QAAA,QAAA,QAAA,MAAA,KAAA,GAAA,MAAA,KAAA,IAEA,SACA,OAAA,MAAA,KAAA,GAEA,QAAA,QAAA,QAAA,MAAA,KAAA,GAAA,MAAA,KAAA,IAKA,QAAA,iBAAA,OAAA,QACA,GAAA,YAAA,KAAA,OAAA,QAAA,cACA,QAAA,SAAA,OAAA,MAEA,OAAA,YAAA,QAAA,QAAA,UAAA,EAAA,QAAA,OAAA,GAAA,IArDA,GAAA,QACA,EAAA,wBACA,GAAA,0BACA,EAAA,2BACA,GAAA,4BACA,EAAA,qBACA,GAAA,sBACA,EAAA,uBACA,GAAA,4BACA,EAAA,mBACA,GAAA,oBAEA,SAAA,2FAAA,MAAA,IA4CA,OAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,gBACA,cAAA,8BAAA,MAAA,KACA,YAAA,iBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,mCACA,KAAA,yCACA,EAAA,aACA,GAAA,wBACA,IAAA,mCACA,KAAA,yCAEA,UACA,QAAA,gBACA,QAAA,aACA,SAAA,UACA,QAAA,aACA,SAAA,qBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,iBACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,WAEA,aAAA,cACA,QAAA,SAAA,QACA,MAAA,QAAA;EAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QASA,QAAA,QAAA,KAAA,OAAA,eACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,eACA,OAAA,KAAA,GAAA,KAAA,OAAA,MAAA,GAAA,MAAA,GAEA,OAAA,KAAA,GAAA,KAAA,OAAA,MAAA,GAAA,MAAA,GAIA,QAAA,wBAAA,OAAA,cAAA,KACA,MAAA,QAAA,IAAA,OAAA,MAAA,KAAA,OAAA,eAlBA,GAAA,QACA,GAAA,gCACA,GAAA,gCACA,GAAA,4BACA,GAAA,gCACA,GAAA,uBAgBA,OAAA,QAAA,aAAA,MACA,OAAA,uGAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,0EAAA,MAAA,KACA,cAAA,kBAAA,MAAA,KACA,YAAA,kBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,uBACA,IAAA,2BACA,KAAA,kCAEA,UACA,QAAA,uBACA,QAAA,oBACA,SAAA,qBACA,QAAA,sBACA,SAAA,gCACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,iBACA,EAAA,SACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,OACA,GAAA,wBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,YACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,gBACA,QAAA,eACA,SAAA,eACA,QAAA,gBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,8BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,iCAGA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,UACA,EAAA,kBACA,EAAA,SACA,GAAA,YACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,QACA,GAAA,YACA,EAAA,SACA,GAAA,aAEA,aAAA,8BACA,QAAA,SAAA,QACA,GAAA,WAAA,OAAA,GACA,YAAA,OAAA,GACA,OAAA,KAAA,OACA,OAAA,MACA,IAAA,YACA,OAAA,MACA,YAAA,IAAA,GAAA,YACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,WAAA,IAAA,UACA,OAAA,MAEA,OAAA,OAGA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,yEAAA,MAAA,KACA,SAAA,wEAAA,MAAA,KACA,cAAA,2CAAA,MAAA,KACA,YAAA,wBAAA,MAAA,KACA,gBACA,GAAA,aACA,IAAA,gBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,aACA,QAAA,YACA,SAAA,WACA,QAAA,cACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,aACA,KAAA,WACA,EAAA,gBACA,EAAA,eACA,GAAA,cACA,EAAA,eACA,GAAA,cACA,EAAA,YACA,GAAA,WACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,WAEA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,SACA,GAAA,KACA,SACA,GAAA,KACA,eACA,GAAA,KACA,aAEA,cAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,wFAAA,MAAA,KACA,YAAA,gFAAA,MAAA,KACA,SAAA,uDAAA,MAAA,KACA,cAAA,kCAAA,MAAA,KACA,YAAA,qBAAA,MAAA,KACA,gBACA,GAAA,eACA,IAAA,kBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,UACA,QAAA,aACA,SAAA,WACA,QAAA,WACA,SAAA,mBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,YACA,EAAA,QACA,EAAA,WACA,GAAA,YACA,EAAA,SACA,GAAA,SACA,EAAA,UACA,GAAA,UACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,YAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,SAAA,SAAA,MAEA,MAAA,GAAA,KACA,SACA,GAAA,KACA,QACA,GAAA,KACA,SACA,GAAA,KACA,WAEA,UAGA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,6CAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,yBACA,KAAA,gCAEA,SAAA,SAAA,OACA,MAAA,IAAA,MACA,OACA,GAAA,MACA,YACA,GAAA,MACA,SAEA,SAGA,UACA,QAAA,sBACA,QAAA,kBACA,SAAA,kBACA,QAAA,sBACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,gBACA,EAAA,gBACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,SACA,EAAA,SACA,GAAA,UACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAEA,OAAA,QAAA,aAAA,MACA,OAAA,2FAAA,MAAA,KACA,YAAA,mDAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,8BAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,kBACA,QAAA,sBACA,SAAA,gBACA,QAAA,mBACA,SAAA,6BACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,kBACA,EAAA,kBACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,SACA,EAAA,OACA,GAAA,OACA,EAAA,UACA,GAAA,WAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,gCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,wBACA,KAAA,8BAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,iBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,eACA,EAAA,gBACA,EAAA,aACA,GAAA,cACA,EAAA,UACA,GAAA,WACA,EAAA,SACA,GAAA,WACA,EAAA,WACA,GAAA,aACA,EAAA,SACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,uEAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,0CAAA,MAAA,KACA,YAAA,6BAAA,MAAA,KACA,gBACA,GAAA,eACA,IAAA,kBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,SACA,GAAA,KACA,SACA,GAAA,KACA,OAEA,QAGA,UACA,QAAA,UACA,QAAA,YACA,SAAA,qBACA,QAAA,YACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,OACA,KAAA,WACA,EAAA,WACA,EAAA,WACA,GAAA,WACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,SACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,WAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,qBAAA,6DAAA,MAAA,KACA,uBAAA,kDAAA,MAAA,IAEA,OAAA,QAAA,aAAA,MACA,OAAA,0FAAA,MAAA,KACA,YAAA,SAAA,EAAA,QACA,MAAA,QAAA,KAAA,QACA,uBAAA,EAAA,SAEA,oBAAA,EAAA,UAGA,SAAA,6DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,kBACA,QAAA,iBACA,SAAA,eACA,QAAA,mBACA,SAAA,2BACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,aACA,EAAA,oBACA,EAAA,aACA,GAAA,aACA,EAAA,UACA,GAAA,SACA,EAAA,UACA,GAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WAEA,aAAA,kBACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,QAAA,IAAA,QAAA,QAAA,GAAA,MAAA,OAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,oBACA,QAAA,uBACA,SAAA,mBACA,QAAA,oBACA,SAAA,gCACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,eACA,EAAA,eACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,SACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAIA,QAAA,QAAA,GACA,MAAA,GAAA,EAAA,IAAA,EAAA,GAAA,MAAA,EAAA,IAAA,KAAA,EAGA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,SAAA,QACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,SAAA,QACA,KAAA,IACA,MAAA,eAAA,UAAA,SACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,UAAA,SACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,WAAA,WACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,OAAA,QArBA,GAAA,kBAAA,mGAAA,MAAA,KACA,iBAAA,qGAAA,MAAA,IAwBA,OAAA,QAAA,aAAA,MACA,OAAA,SAAA,eAAA,QACA,MAAA,SAAA,KAAA,QACA,iBAAA,eAAA,SAEA,iBAAA,eAAA,UAGA,YAAA,kDAAA,MAAA,KACA,SAAA,6DAAA,MAAA,KACA,cAAA,0BAAA,MAAA,KACA,YAAA,sBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,eACA,SAAA,kBACA,QAAA,iBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,2BACA,KAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,wBACA,SACA,MAAA,2BAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,eACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,UACA,GAAA,UACA,EAAA,MACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,2FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,iFAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,yBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,gCACA,KAAA,uCAEA,UACA,QAAA,eACA,QAAA,iBACA,SAAA,eACA,QAAA,gBACA,SAAA,WACA,MAAA,KAAA,KAAA,OAAA,IAAA,KAAA,MACA,wBACA,yBAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,UAQA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,2FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,iFAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,yBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,2BACA,KAAA,kCAEA,UACA,QAAA,eACA,QAAA,iBACA,SAAA,eACA,QAAA,gBACA,SAAA,WACA,MAAA,KAAA,KAAA,OAAA,IAAA,KAAA,MACA,wBACA,yBAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,QACA,EAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,SACA,GAAA,MACA,GAAA,OACA,GAAA,OACA,GAAA,OAEA,UAAA,GAKA,QAJA,OAAA,KAAA,IAAA,QAAA,KAAA,OAAA,MAAA,KACA,UAAA,QAGA,OAAA,UAAA,OAAA,KAGA,MAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,gEAAA,MAAA,KACA,SAAA,kDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,mBACA,KAAA,0BAEA,UACA,QAAA,cACA,QAAA,gBACA,SAAA,eACA,QAAA,eACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,aACA,EAAA,iBACA,EAAA,WACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,OACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,QACA,GAAA,wBAEA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,QAAA,KAAA,KACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,KAAA,KAAA,GAAA,IAAA,MAAA,GAAA,MAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,KAAA,GAAA,IAAA,KAAA,IAAA,KAAA,IAAA,MAAA,GAAA,MAAA,GAGA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,sBAAA,sBACA,GAAA,iBACA,GAAA,gBACA,GAAA,uBACA,GAAA,eAEA,OAAA,MAAA,IACA,cAAA,SAAA,SAGA,OAAA,IAAA,OAAA,OAAA,MAAA,QAIA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,kFAAA,MAAA,KACA,WAAA,oFAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,wBAAA,EAAA,QACA,GAAA,cACA,WAAA,qDAAA,MAAA,KACA,WAAA,oDAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,aAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,gEAAA,MAAA,KACA,WAAA,gEAAA,MAAA,MAGA,SAAA,iDAAA,KAAA,QACA,aACA,YAEA,OAAA,UAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,uBACA,SAAA,oBACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,aAAA,QAAA,QAAA,QAAA,QAAA,YAAA,QAAA,QAAA,QAAA,QAAA,QAAA,QAAA,SACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,iBACA,QAAA,gBACA,QAAA,eACA,SAAA,WACA,MAAA,KAAA,KAAA,MAAA,mBAAA,mBAEA,SAAA,SAAA,KACA,GAAA,IAAA,SAAA,KAAA,OAcA,MAAA,KAAA,KAAA,MACA,mBAEA,iBAhBA,QAAA,KAAA,OACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,4BAUA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,mBACA,EAAA,uBACA,GAAA,uBACA,EAAA,MACA,GAAA,uBACA,EAAA,OACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,MACA,GAAA,wBAGA,cAAA,wBACA,KAAA,SAAA,OACA,MAAA,iBAAA,KAAA,QAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,OACA,GAAA,KACA,MAEA,UAIA,aAAA,mBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,MAAA,QAAA,IACA,KAAA,IACA,MAAA,QAAA,KACA,KAAA,IACA,IAAA,IACA,MAAA,QAAA,IACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QAIA,QAAA,QAAA,GACA,MAAA,GAAA,GAAA,EAAA,EAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,gBAAA,SAAA,aAAA,eACA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,MACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,MAAA,OAEA,OAAA,OAGA,KAAA,IACA,MAAA,gBAAA,SAAA,SAAA,UACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,UAAA,YAEA,OAAA,UAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,OACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,OAAA,SAEA,OAAA,SAtDA,GAAA,QAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,IA2DA,OAAA,QAAA,aAAA,MACA,OAAA,OACA,YAAA,YACA,YAAA,SAAA,OAAA,aACA,GAAA,GAAA,eACA,KAAA,EAAA,EAAA,GAAA,EAAA,IAEA,aAAA,GAAA,GAAA,QAAA,IAAA,OAAA,GAAA,MAAA,YAAA,GAAA,IAAA,IAEA,OAAA,eACA,OAAA,aACA,SAAA,sDAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,gBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,mBACA,KAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,yBAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,aAAA,YACA,KAAA,KAUA,MARA,SADA,IAAA,OACA,SACA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,OACA,SAEA,OAGA,KAAA,IACA,MAAA,eAAA,UAAA,SACA,KAAA,KAUA,MARA,SADA,IAAA,OACA,MACA,IAAA,OACA,MACA,IAAA,QAAA,IAAA,OACA,MAEA,IAGA,KAAA,KAMA,MAJA,SADA,IAAA,OACA,MAEA,KAGA,KAAA,KAUA,MARA,SADA,IAAA,OACA,QACA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,OACA,SAEA,SAGA,KAAA,KAUA,MARA,SADA,IAAA,OACA,OACA,IAAA,OACA,OACA,IAAA,QAAA,IAAA,OACA,OAEA,OAMA,MAAA,QAAA,aAAA,MACA,OAAA,wFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,gBACA,QAAA,gBAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,qBAGA,QAAA,iBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,4BAGA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,WACA,EAAA,eACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,UACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAWA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,gFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,mBAAA,MAAA,KACA,SAAA,SAAA,OACA,MAAA,IAAA,MAAA,KAAA,MAEA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,gBACA,SAAA,eACA,QAAA,cACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,aACA,EAAA,eACA,EAAA,aACA,GAAA,YACA,EAAA,UACA,GAAA,SACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,aACA,OACA,GAAA,cAAA,gBACA,IAAA,QAAA,SAAA,UACA,GAAA,YAAA,eACA,IAAA,MAAA,OAAA,QACA,IAAA,MAAA,OAAA,QACA,IAAA,QAAA,SAAA,UACA,IAAA,SAAA,SAAA,WAEA,uBAAA,SAAA,OAAA,SACA,MAAA,KAAA,OAAA,QAAA,GAAA,QAAA,GAAA,GAAA,OAAA,QAAA,GAAA,QAAA,IAEA,UAAA,SAAA,OAAA,cAAA,KACA,GAAA,SAAA,WAAA,MAAA,IACA,OAAA,KAAA,IAAA,OACA,cAAA,QAAA,GAAA,QAAA,GAEA,OAAA,IAAA,WAAA,uBAAA,OAAA,UAKA,OAAA,QAAA,aAAA,WACA,QAAA,SAAA,UAAA,OAAA,QAAA,MAAA,MAAA,MAAA,SAAA,YAAA,UAAA,WAAA,YACA,aAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,OAAA,OAAA,OAAA,OAAA,QACA,UAAA,SAAA,YAAA,SAAA,QAAA,WAAA,QAAA,UACA,eAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,QACA,aAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,qBACA,KAAA,GACA,MAAA,oBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,cACA,SAAA,WACA,GAAA,eACA,2BACA,+BACA,4BACA,0BACA,8BACA,2BACA,2BAEA,OAAA,cAAA,KAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,mBACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,MACA,GAAA,WAAA,UACA,EAAA,QACA,GAAA,WAAA,UACA,EAAA,SACA,GAAA,WAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA;GASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,aACA,OACA,GAAA,cAAA,gBACA,IAAA,QAAA,SAAA,UACA,GAAA,YAAA,eACA,IAAA,MAAA,OAAA,QACA,IAAA,MAAA,OAAA,QACA,IAAA,QAAA,SAAA,UACA,IAAA,SAAA,SAAA,WAEA,uBAAA,SAAA,OAAA,SACA,MAAA,KAAA,OAAA,QAAA,GAAA,QAAA,GAAA,GAAA,OAAA,QAAA,GAAA,QAAA,IAEA,UAAA,SAAA,OAAA,cAAA,KACA,GAAA,SAAA,WAAA,MAAA,IACA,OAAA,KAAA,IAAA,OACA,cAAA,QAAA,GAAA,QAAA,GAEA,OAAA,IAAA,WAAA,uBAAA,OAAA,UAKA,OAAA,QAAA,aAAA,MACA,QAAA,SAAA,UAAA,OAAA,QAAA,MAAA,MAAA,MAAA,SAAA,YAAA,UAAA,WAAA,YACA,aAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,OAAA,OAAA,OAAA,OAAA,QACA,UAAA,UAAA,aAAA,SAAA,QAAA,WAAA,QAAA,UACA,eAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,QACA,aAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,oBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,cACA,SAAA,WACA,GAAA,eACA,4BACA,gCACA,4BACA,0BACA,8BACA,2BACA,2BAEA,OAAA,cAAA,KAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,mBACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,MACA,GAAA,WAAA,UACA,EAAA,QACA,GAAA,WAAA,UACA,EAAA,SACA,GAAA,WAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,oDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,YACA,QAAA,eACA,QAAA,YACA,SAAA,UACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,eACA,EAAA,iBACA,EAAA,WACA,GAAA,aACA,EAAA,WACA,GAAA,YACA,EAAA,SACA,GAAA,WACA,EAAA,WACA,GAAA,aACA,EAAA,SACA,GAAA,SAEA,aAAA,eACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,IACA,IAAA,EAAA,IACA,IAAA,EAAA,IACA,IAAA,EAAA,IAAA,GACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QA0BA,MAAA,QAAA,aAAA,MACA,OAAA,0FAAA,MAAA,KACA,YAAA,0FAAA,MAAA,KACA,SAAA,8FAAA,MAAA,KACA,cAAA,mDAAA,MAAA,KACA,YAAA,sBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,aACA,QAAA,YACA,SAAA,WACA,QAAA,cACA,SAAA,yBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,UACA,EAAA,oBACA,EAAA,cACA,GAAA,gBACA,EAAA,gBACA,GAAA,eACA,EAAA,WACA,GAAA,aACA,EAAA,YACA,GAAA,cACA,EAAA,aACA,GAAA,eAYA,aAAA,aACA,QAAA,SAAA,QACA,MAAA,QAAA,OAMA,SAAA,SAAA,MACA,MAAA,OAAA,GAAA,IAAA,KACA,QACA,MAAA,IAAA,IAAA,KACA,WACA,MAAA,IAAA,IAAA,KACA,WACA,MAAA,IAAA,IAAA,KACA,QACA,MAAA,IAAA,IAAA,KACA,QACA,MAAA,GAAA,GAAA,KACA,SADA,QAIA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,yEAAA,MAAA,KACA,SAAA,iDAAA,MAAA,KACA,cAAA,8CAAA,MAAA,KACA,YAAA,yBAAA,MAAA,KACA,gBACA,GAAA,kBACA,IAAA,cACA,EAAA,aACA,GAAA,cACA,IAAA,sBACA,KAAA,kCAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,aAEA,cAGA,UACA,QAAA,mBACA,QAAA,qBACA,SAAA,qBACA,QAAA,wBACA,SAAA,6BACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,YACA,EAAA,eACA,EAAA,SACA,GAAA,UACA,EAAA,YACA,GAAA,aACA,EAAA,QACA,GAAA,SACA,EAAA,UACA,GAAA,WACA,EAAA,OACA,GAAA,aASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,0FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,wBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,YACA,GAAA,eACA,IAAA,kBACA,KAAA,0BAEA,UACA,QAAA,iBACA,QAAA,gBACA,SAAA,eACA,QAAA,kBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,mBACA,EAAA,gBACA,EAAA,eACA,GAAA,YACA,EAAA,aACA,GAAA,UACA,EAAA,aACA,GAAA,UACA,EAAA,cACA,GAAA,WACA,EAAA,aACA,GAAA,WAEA,aAAA,UACA,QAAA,SAAA,QACA,MAAA,SAEA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,GAAA,WACA,EAAA,QACA,EAAA,QACA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,EAAA,OACA,EAAA,OACA,GAAA,OACA,GAAA,OAEA,EAAA,QACA,EAAA,QACA,IAAA,QAEA,EAAA,OAEA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,GAAA,QACA,GAAA,QAGA,OAAA,QAAA,aAAA,MACA,OAAA,6EAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,kBACA,QAAA,kBACA,SAAA,2BACA,QAAA,WACA,SAAA,+BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,UACA,EAAA,gBACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,SACA,GAAA,QACA,EAAA,UACA,GAAA,UAEA,aAAA,wCACA,QAAA,SAAA,QACA,GAAA,IAAA,OACA,MAAA,QAAA,OAEA,IAAA,GAAA,OAAA,GACA,EAAA,OAAA,IAAA,EACA,EAAA,QAAA,IAAA,IAAA,IAEA,OAAA,SAAA,SAAA,IAAA,SAAA,IAAA,SAAA,KAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,YACA,OAAA,wFAAA,MAAA,KACA,YAAA,wFAAA,MAAA,KACA,SAAA,kDAAA,MAAA,KACA,cAAA,kDAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,eACA,QAAA,cACA,SAAA,cACA,QAAA,gBACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,iBACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,cACA,EAAA,MACA,GAAA,WACA,EAAA,QACA,GAAA,YACA,EAAA,QACA,GAAA,aAEA,MACA,IAAA,EACA,IAAA,QASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,OACA,OAAA,kFAAA,MAAA,KACA,YAAA,kFAAA,MAAA,KACA,SAAA,kDAAA,MAAA,KACA,cAAA,kDAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,cACA,QAAA,cACA,SAAA,cACA,QAAA,eACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,cACA,EAAA,MACA,GAAA,WACA,EAAA,QACA,GAAA,YACA,EAAA,QACA,GAAA,aAEA,MACA,IAAA,EACA,IAAA,QAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,QAAA,QAAA,KAAA,KACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,KAAA,KAAA,GAAA,IAAA,MAAA,GAAA,MAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,KAAA,GAAA,IAAA,KAAA,IAAA,KAAA,IAAA,MAAA,GAAA,MAAA,GAGA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,yBACA,GAAA,sBACA,GAAA,gBACA,GAAA,wBACA,GAAA,iBAEA,OAAA,MAAA,IACA,cAAA,UAAA,UAEA,MAAA,IACA,cAAA,SAAA,SAGA,OAAA,IAAA,OAAA,OAAA,MAAA,QAIA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,iGAAA,MAAA,KACA,WAAA,yFAAA,MAAA,MAGA,SAAA,gBAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,0DAAA,MAAA,KACA,WAAA,0DAAA,MAAA,KACA,SAAA,4DAAA,MAAA,MAGA,SAAA,qBAAA,KAAA,QACA,aACA,sCAAA,KAAA,QACA,WACA,YAEA,OAAA,UAAA,UAAA,EAAA,OAGA,QAAA,sBAAA,KACA,MAAA,YACA,MAAA,KAAA,KAAA,KAAA,KAAA,QAAA,IAAA,IAAA,QAIA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,yDAAA,MAAA,KACA,SAAA,oBACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,qBAAA,cACA,QAAA,qBAAA,YACA,QAAA,qBAAA,WACA,SAAA,qBAAA,cACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,sBAAA,oBAAA,KAAA,KACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,sBAAA,qBAAA,KAAA,QAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,kBACA,EAAA,uBACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,OACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,MACA,GAAA,wBAKA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,MAEA,UAIA,aAAA,iBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACA,IAAA,IACA,MAAA,QAAA,IACA,KAAA,IACA,MAAA,QAAA,KACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,kFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,uDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,uBACA,QAAA,mBACA,SAAA,2BACA,QAAA,sBACA,SAAA,mCACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,oBACA,EAAA,SACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,SACA,GAAA,QACA,EAAA,UACA,GAAA,UAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qGAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,oBACA,IAAA,uBACA,KAAA,6BACA,EAAA,YACA,GAAA,aACA,IAAA,gBACA,KAAA,sBAEA,UACA,QAAA,mBACA,QAAA,oBACA,SAAA,yBACA,QAAA,mBACA,SAAA,yBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,WACA,EAAA,WACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,WACA,GAAA,UACA,EAAA,YACA,GAAA,WACA,EAAA,UACA,GAAA,UAEA,aAAA,UACA,QAAA,SAAA,QACA,MAAA,SAEA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,UACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,mBACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,oBAEA,SAAA,SAAA,KAAA,QACA,GAAA,IAAA,IAAA,KAAA,MACA,OAAA,KAAA,GACA,KACA,IAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KAEA,MAGA,UACA,QAAA,WACA,MAAA,KAAA,KAAA,UAAA,aAAA,UAEA,QAAA,WACA,MAAA,KAAA,KAAA,UAAA,aAAA,UAEA,QAAA,WACA,MAAA,KAAA,KAAA,UAAA,aAAA,UAEA,SAAA,WACA,GAAA,aAAA,MAGA,OAFA,aAAA,SAAA,QAAA,QACA,OAAA,KAAA,OAAA,YAAA,QAAA,OAAA,MAAA,MACA,IAAA,KAAA,UAAA,OAAA,UAAA,OAAA,YAEA,SAAA,WACA,GAAA,aAAA,MAGA,OAFA,aAAA,SAAA,QAAA,QACA,OAAA,KAAA,OAAA,YAAA,OAAA,MAAA,MACA,IAAA,KAAA,UAAA,OAAA,UAAA,OAAA,YAEA,SAAA,MAEA,aAAA,iBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,MAAA,QAAA,GACA,KAAA,IACA,MAAA,QAAA,GACA,KAAA,IACA,IAAA,IACA,MAAA,QAAA,GACA,SACA,MAAA,UAGA,cACA,OAAA,MACA,KAAA,MACA,EAAA,KACA,EAAA,MACA,GAAA,OACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,OAEA,MAEA,IAAA,EACA,IAAA,OASA,SAAA,SACA,kBAAA,SAAA,OAAA,IACA,QAAA,UAAA,SACA,gBAAA,SACA,OAAA,QAAA,QAAA,QAAA,cAEA,SAAA,mBAAA,QAAA,OAAA,MAAA,SAEA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,UACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,mBACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,oBAEA,SAAA,SAAA,KAAA,QACA,GAAA,IAAA,IAAA,KAAA,MACA,OAAA,KAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KAEA,MAGA,UACA,QAAA,SACA,QAAA,SACA,SAAA,YACA,QAAA,SACA,SAAA,YACA,SAAA,KAEA,aAAA,iBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,MAAA,QAAA,GACA,KAAA,IACA,MAAA,QAAA,GACA,KAAA,IACA,IAAA,IACA,MAAA,QAAA,GACA,SACA,MAAA,UAGA,cACA,OAAA,MACA,KAAA,MACA,EAAA,KACA,EAAA,MACA,GAAA,OACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,WC/0NA,SAAA,WA6RA,QAAA,KAAA,EAAA,EAAA,GACA,OAAA,UAAA,QACA,IAAA,GAAA,MAAA,OAAA,EAAA,EAAA,CACA,KAAA,GAAA,MAAA,OAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CACA,SAAA,KAAA,IAAA,OAAA,iBAIA,QAAA,YAAA,EAAA,GACA,MAAA,gBAAA,KAAA,EAAA,GAGA,QAAA,uBAGA,OACA,OAAA,EACA,gBACA,eACA,SAAA,GACA,cAAA,EACA,WAAA,EACA,aAAA,KACA,eAAA,EACA,iBAAA,EACA,KAAA,GAIA,QAAA,UAAA,KACA,OAAA,+BAAA,GACA,mBAAA,UAAA,QAAA,MACA,QAAA,KAAA,wBAAA,KAIA,QAAA,WAAA,IAAA,IACA,GAAA,YAAA,CACA,OAAA,QAAA,WAKA,MAJA,aACA,SAAA,KACA,WAAA,GAEA,GAAA,MAAA,KAAA,YACA,IAGA,QAAA,iBAAA,KAAA,KACA,aAAA,QACA,SAAA,KACA,aAAA,OAAA,GAIA,QAAA,UAAA,KAAA,OACA,MAAA,UAAA,GACA,MAAA,cAAA,KAAA,KAAA,KAAA,GAAA,QAGA,QAAA,iBAAA,KAAA,QACA,MAAA,UAAA,GACA,MAAA,MAAA,aAAA,QAAA,KAAA,KAAA,KAAA,GAAA,SAmBA,QAAA,WAIA,QAAA,QAAA,OAAA,cACA,gBAAA,GACA,cAAA,QAEA,WAAA,KAAA,QACA,KAAA,GAAA,GAAA,OAAA,OAAA,IAIA,QAAA,UAAA,UACA,GAAA,iBAAA,qBAAA,UACA,MAAA,gBAAA,MAAA,EACA,SAAA,gBAAA,SAAA,EACA,OAAA,gBAAA,OAAA,EACA,MAAA,gBAAA,MAAA,EACA,KAAA,gBAAA,KAAA,EACA,MAAA,gBAAA,MAAA,EACA,QAAA,gBAAA,QAAA,EACA,QAAA,gBAAA,QAAA,EACA,aAAA,gBAAA,aAAA,CAGA,MAAA,eAAA,aACA,IAAA,QACA,IAAA,QACA,KAAA,MAGA,KAAA,OAAA,KACA,EAAA,MAIA,KAAA,SAAA,OACA,EAAA,SACA,GAAA,MAEA,KAAA,SAEA,KAAA,QAAA,OAAA,aAEA,KAAA,UAQA,QAAA,QAAA,EAAA,GACA,IAAA,GAAA,KAAA,GACA,WAAA,EAAA,KACA,EAAA,GAAA,EAAA,GAYA,OARA,YAAA,EAAA,cACA,EAAA,SAAA,EAAA,UAGA,WAAA,EAAA,aACA,EAAA,QAAA,EAAA,SAGA,EAGA,QAAA,YAAA,GAAA,MACA,GAAA,GAAA,KAAA,GAiCA,IA/BA,mBAAA,MAAA,mBACA,GAAA,iBAAA,KAAA,kBAEA,mBAAA,MAAA,KACA,GAAA,GAAA,KAAA,IAEA,mBAAA,MAAA,KACA,GAAA,GAAA,KAAA,IAEA,mBAAA,MAAA,KACA,GAAA,GAAA,KAAA,IAEA,mBAAA,MAAA,UACA,GAAA,QAAA,KAAA,SAEA,mBAAA,MAAA,OACA,GAAA,KAAA,KAAA,MAEA,mBAAA,MAAA,SACA,GAAA,OAAA,KAAA,QAEA,mBAAA,MAAA,UACA,GAAA,QAAA,KAAA,SAEA,mBAAA,MAAA,MACA,GAAA,IAAA,KAAA,KAEA,mBAAA,MAAA,UACA,GAAA,QAAA,KAAA,SAGA,iBAAA,OAAA,EACA,IAAA,IAAA,kBACA,KAAA,iBAAA,GACA,IAAA,KAAA,MACA,mBAAA,OACA,GAAA,MAAA,IAKA,OAAA,IAGA,QAAA,UAAA,QACA,MAAA,GAAA,OACA,KAAA,KAAA,QAEA,KAAA,MAAA,QAMA,QAAA,cAAA,OAAA,aAAA,WAIA,IAHA,GAAA,QAAA,GAAA,KAAA,IAAA,QACA,KAAA,QAAA,EAEA,OAAA,OAAA,cACA,OAAA,IAAA,MAEA,QAAA,KAAA,UAAA,IAAA,GAAA,KAAA,OAGA,QAAA,2BAAA,KAAA,OACA,GAAA,MAAA,aAAA,EAAA,OAAA,EAUA,OARA,KAAA,OAAA,MAAA,QAAA,KAAA,QACA,IAAA,MAAA,OAAA,KAAA,QACA,KAAA,QAAA,IAAA,IAAA,OAAA,KAAA,QAAA,UACA,IAAA,OAGA,IAAA,cAAA,OAAA,KAAA,QAAA,IAAA,IAAA,OAAA,KAEA,IAGA,QAAA,mBAAA,KAAA,OACA,GAAA,IAUA,OATA,OAAA,OAAA,MAAA,MACA,KAAA,SAAA,OACA,IAAA,0BAAA,KAAA,QAEA,IAAA,0BAAA,MAAA,MACA,IAAA,cAAA,IAAA,aACA,IAAA,QAAA,IAAA,QAGA,IAIA,QAAA,aAAA,UAAA,MACA,MAAA,UAAA,IAAA,QACA,GAAA,KAAA,GAUA,OARA,QAAA,QAAA,OAAA,UACA,gBAAA,KAAA,YAAA,KAAA,uDAAA,KAAA,qBACA,IAAA,IAAA,IAAA,OAAA,OAAA,KAGA,IAAA,gBAAA,MAAA,IAAA,IACA,IAAA,OAAA,SAAA,IAAA,QACA,gCAAA,KAAA,IAAA,WACA,MAIA,QAAA,iCAAA,IAAA,SAAA,SAAA,cACA,GAAA,cAAA,SAAA,cACA,KAAA,SAAA,MACA,OAAA,SAAA,OACA,cAAA,MAAA,cAAA,EAAA,aAEA,cACA,IAAA,GAAA,SAAA,IAAA,GAAA,aAAA,UAEA,MACA,UAAA,IAAA,OAAA,UAAA,IAAA,QAAA,KAAA,UAEA,QACA,eAAA,IAAA,UAAA,IAAA,SAAA,OAAA,UAEA,cACA,OAAA,aAAA,IAAA,MAAA,QAKA,QAAA,SAAA,OACA,MAAA,mBAAA,OAAA,UAAA,SAAA,KAAA,OAGA,QAAA,QAAA,OACA,MAAA,kBAAA,OAAA,UAAA,SAAA,KAAA,QACA,gBAAA,MAIA,QAAA,eAAA,OAAA,OAAA,aACA,GAGA,GAHA,IAAA,KAAA,IAAA,OAAA,OAAA,OAAA,QACA,WAAA,KAAA,IAAA,OAAA,OAAA,OAAA,QACA,MAAA,CAEA,KAAA,EAAA,EAAA,IAAA,EAAA,KACA,aAAA,OAAA,KAAA,OAAA,KACA,aAAA,MAAA,OAAA,MAAA,MAAA,OAAA,MACA,OAGA,OAAA,OAAA,WAGA,QAAA,gBAAA,OACA,GAAA,MAAA,CACA,GAAA,SAAA,MAAA,cAAA,QAAA,QAAA,KACA,OAAA,YAAA,QAAA,eAAA,UAAA,QAEA,MAAA,OAGA,QAAA,sBAAA,aACA,GACA,gBACA,KAFA,kBAIA,KAAA,OAAA,aACA,WAAA,YAAA,QACA,eAAA,eAAA,MACA,iBACA,gBAAA,gBAAA,YAAA,OAKA,OAAA,iBAGA,QAAA,UAAA,OACA,GAAA,OAAA,MAEA,IAAA,IAAA,MAAA,QAAA,QACA,MAAA,EACA,OAAA,UAEA,CAAA,GAAA,IAAA,MAAA,QAAA,SAKA,MAJA,OAAA,GACA,OAAA,QAMA,OAAA,OAAA,SAAA,OAAA,OACA,GAAA,GAAA,OACA,OAAA,OAAA,QAAA,OACA,UAYA,IAVA,gBAAA,UACA,MAAA,OACA,OAAA,WAGA,OAAA,SAAA,GACA,GAAA,GAAA,SAAA,MAAA,IAAA,OAAA,EACA,OAAA,QAAA,KAAA,OAAA,QAAA,EAAA,QAAA,KAGA,MAAA,MACA,MAAA,QAAA,MAGA,KAAA,EAAA,EAAA,MAAA,EAAA,IACA,QAAA,KAAA,OAAA,GAEA,OAAA,UAKA,QAAA,OAAA,qBACA,GAAA,gBAAA,oBACA,MAAA,CAUA,OARA,KAAA,eAAA,SAAA,iBAEA,MADA,eAAA,EACA,KAAA,MAAA,eAEA,KAAA,KAAA,gBAIA,MAGA,QAAA,aAAA,KAAA,OACA,MAAA,IAAA,MAAA,KAAA,IAAA,KAAA,MAAA,EAAA,IAAA,aAGA,QAAA,aAAA,KAAA,IAAA,KACA,MAAA,YAAA,QAAA,KAAA,GAAA,GAAA,IAAA,MAAA,IAAA,KAAA,KAGA,QAAA,YAAA,MACA,MAAA,YAAA,MAAA,IAAA,IAGA,QAAA,YAAA,MACA,MAAA,MAAA,IAAA,GAAA,KAAA,MAAA,GAAA,KAAA,MAAA,EAGA,QAAA,eAAA,GACA,GAAA,SACA,GAAA,IAAA,KAAA,EAAA,IAAA,WACA,SACA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,OAAA,GAAA,MACA,EAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,YAAA,EAAA,GAAA,MAAA,EAAA,GAAA,QAAA,KACA,EAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IACA,KAAA,EAAA,GAAA,QAAA,IAAA,EAAA,GAAA,SACA,IAAA,EAAA,GAAA,SACA,IAAA,EAAA,GAAA,cAAA,KACA,EAAA,GAAA,QAAA,GAAA,EAAA,GAAA,QAAA,GAAA,OACA,EAAA,GAAA,QAAA,GAAA,EAAA,GAAA,QAAA,GAAA,OACA,EAAA,GAAA,aAAA,GAAA,EAAA,GAAA,aAAA,IAAA,YACA,GAEA,EAAA,IAAA,qBAAA,KAAA,UAAA,SAAA,QACA,SAAA,MAGA,EAAA,IAAA,SAAA,UAIA,QAAA,SAAA,GAiBA,MAhBA,OAAA,EAAA,WACA,EAAA,UAAA,MAAA,EAAA,GAAA,YACA,EAAA,IAAA,SAAA,IACA,EAAA,IAAA,QACA,EAAA,IAAA,eACA,EAAA,IAAA,YACA,EAAA,IAAA,gBACA,EAAA,IAAA,gBAEA,EAAA,UACA,EAAA,SAAA,EAAA,UACA,IAAA,EAAA,IAAA,eACA,IAAA,EAAA,IAAA,aAAA,QACA,EAAA,IAAA,UAAA,YAGA,EAAA,SAGA,QAAA,iBAAA,KACA,MAAA,KAAA,IAAA,cAAA,QAAA,IAAA,KAAA,IAMA,QAAA,cAAA,OAGA,IAFA,GAAA,GAAA,KAAA,OAAA,MAAA,EAAA,EAEA,EAAA,MAAA,QAAA,CAKA,IAJA,MAAA,gBAAA,MAAA,IAAA,MAAA,KACA,EAAA,MAAA,OACA,KAAA,gBAAA,MAAA,EAAA,IACA,KAAA,KAAA,KAAA,MAAA,KAAA,KACA,EAAA,GAAA,CAEA,GADA,OAAA,WAAA,MAAA,MAAA,EAAA,GAAA,KAAA,MAEA,MAAA,OAEA,IAAA,MAAA,KAAA,QAAA,GAAA,cAAA,MAAA,MAAA,IAAA,EAAA,EAEA,KAEA,KAEA,IAEA,MAAA,MAGA,QAAA,YAAA,MACA,GAAA,WAAA,IACA,KAAA,QAAA,OAAA,UACA,IACA,UAAA,OAAA,SACA,QAAA,YAAA,MAEA,OAAA,OAAA,WACA,MAAA,IAEA,MAAA,SAAA,MAIA,QAAA,QAAA,MAAA,OACA,GAAA,KAAA,IACA,OAAA,OAAA,QACA,IAAA,MAAA,QACA,MAAA,OAAA,SAAA,QAAA,OAAA,QACA,OAAA,OAAA,SAAA,IAEA,IAAA,GAAA,SAAA,IAAA,GAAA,MACA,OAAA,aAAA,KAAA,GACA,KAEA,OAAA,OAAA,QAoNA,QAAA,wBAAA,OACA,MAAA,OAAA,MAAA,YACA,MAAA,QAAA,WAAA,IAEA,MAAA,QAAA,MAAA,IAGA,QAAA,oBAAA,QACA,GAAA,GAAA,OAAA,MAAA,OAAA,MAAA,iBAEA,KAAA,EAAA,EAAA,OAAA,MAAA,OAAA,OAAA,EAAA,IAEA,MAAA,GADA,qBAAA,MAAA,IACA,qBAAA,MAAA,IAEA,uBAAA,MAAA,GAIA,OAAA,UAAA,KACA,GAAA,QAAA,EACA,KAAA,EAAA,EAAA,OAAA,EAAA,IACA,QAAA,MAAA,YAAA,UAAA,MAAA,GAAA,KAAA,IAAA,QAAA,MAAA,EAEA,OAAA,SAKA,QAAA,cAAA,EAAA,QACA,MAAA,GAAA,WAIA,OAAA,aAAA,OAAA,EAAA,cAEA,gBAAA,UACA,gBAAA,QAAA,mBAAA,SAGA,gBAAA,QAAA,IATA,EAAA,aAAA,cAYA,QAAA,cAAA,OAAA,QAGA,QAAA,6BAAA,OACA,MAAA,QAAA,eAAA,QAAA,MAHA,GAAA,GAAA,CAOA,KADA,sBAAA,UAAA,EACA,GAAA,GAAA,sBAAA,KAAA,SACA,OAAA,OAAA,QAAA,sBAAA,6BACA,sBAAA,UAAA,EACA,GAAA,CAGA,OAAA,QAUA,QAAA,uBAAA,MAAA,QACA,GAAA,GAAA,OAAA,OAAA,OACA,QAAA,OACA,IAAA,IACA,MAAA,mBACA,KAAA,OACA,MAAA,sBACA,KAAA,OACA,IAAA,OACA,IAAA,OACA,MAAA,QAAA,qBAAA,yBACA,KAAA,IACA,IAAA,IACA,IAAA,IACA,MAAA,uBACA,KAAA,SACA,IAAA,QACA,IAAA,QACA,IAAA,QACA,MAAA,QAAA,oBAAA,wBACA,KAAA,IACA,GAAA,OACA,MAAA,mBAGA,KAAA,KACA,GAAA,OACA,MAAA,oBAGA,KAAA,MACA,GAAA,OACA,MAAA,sBAGA,KAAA,MACA,MAAA,2BACA,KAAA,MACA,IAAA,OACA,IAAA,KACA,IAAA,MACA,IAAA,OACA,MAAA,eACA,KAAA,IACA,IAAA,IACA,MAAA,QAAA,QAAA,cACA,KAAA,IACA,MAAA,mBACA,KAAA,IACA,MAAA,sBACA,KAAA,IACA,IAAA,KACA,MAAA,mBACA,KAAA,IACA,MAAA,YACA,KAAA,OACA,MAAA,iBACA,KAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,IAAA,KACA,MAAA,QAAA,oBAAA,wBACA,KAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,MAAA,yBACA,KAAA,KACA,MAAA,QAAA,OAAA,QAAA,cAAA,OAAA,QAAA,oBACA,SAEA,MADA,GAAA,GAAA,QAAA,aAAA,eAAA,MAAA,QAAA,KAAA,KAAA,OAKA,QAAA,2BAAA,QACA,OAAA,QAAA,EACA,IAAA,mBAAA,OAAA,MAAA,wBACA,QAAA,kBAAA,kBAAA,OAAA,OACA,OAAA,QAAA,IAAA,MAAA,wBAAA,IAAA,EAAA,GACA,UAAA,GAAA,MAAA,IAAA,MAAA,MAAA,GAEA,OAAA,MAAA,MAAA,IAAA,QAAA,QAIA,QAAA,yBAAA,MAAA,MAAA,QACA,GAAA,GAAA,cAAA,OAAA,EAEA,QAAA,OAEA,IAAA,IACA,MAAA,QACA,cAAA,OAAA,GAAA,MAAA,OAAA,GAEA,MAEA,KAAA,IACA,IAAA,KACA,MAAA,QACA,cAAA,OAAA,MAAA,OAAA,EAEA,MACA,KAAA,MACA,IAAA,OACA,EAAA,OAAA,QAAA,YAAA,MAAA,MAAA,OAAA,SAEA,MAAA,EACA,cAAA,OAAA,EAEA,OAAA,IAAA,aAAA,KAEA,MAEA,KAAA,IACA,IAAA,KACA,MAAA,QACA,cAAA,MAAA,MAAA,OAEA,MACA,KAAA,KACA,MAAA,QACA,cAAA,MAAA,MAAA,SACA,MAAA,MAAA,WAAA,GAAA,KAEA,MAEA,KAAA,MACA,IAAA,OACA,MAAA,QACA,OAAA,WAAA,MAAA,OAGA,MAEA,KAAA,KACA,cAAA,MAAA,OAAA,kBAAA,MACA,MACA,KAAA,OACA,IAAA,QACA,IAAA,SACA,cAAA,MAAA,MAAA,MACA,MAEA,KAAA,IACA,IAAA,IACA,OAAA,MAAA,OAAA,QAAA,KAAA,MACA,MAEA,KAAA,IACA,IAAA,KACA,OAAA,IAAA,SAAA,CAEA,KAAA,IACA,IAAA,KACA,cAAA,MAAA,MAAA,MACA,MAEA,KAAA,IACA,IAAA,KACA,cAAA,QAAA,MAAA,MACA,MAEA,KAAA,IACA,IAAA,KACA,cAAA,QAAA,MAAA,MACA,MAEA,KAAA,IACA,IAAA,KACA,IAAA,MACA,IAAA,OACA,cAAA,aAAA,MAAA,KAAA,KAAA,OACA,MAEA,KAAA,IACA,OAAA,GAAA,GAAA,MAAA,MAAA,OACA,MAEA,KAAA,IACA,OAAA,GAAA,GAAA,MAAA,IAAA,WAAA,OACA,MAEA,KAAA,IACA,IAAA,KACA,OAAA,SAAA,EACA,OAAA,KAAA,0BAAA,MACA,MAEA,KAAA,KACA,IAAA,MACA,IAAA,OACA,EAAA,OAAA,QAAA,cAAA,OAEA,MAAA,GACA,OAAA,GAAA,OAAA,OACA,OAAA,GAAA,EAAA,GAEA,OAAA,IAAA,eAAA,KAEA;KAEA,KAAA,IACA,IAAA,KACA,IAAA,IACA,IAAA,KACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,MAAA,MAAA,OAAA,EAAA,EAEA,KAAA,OACA,IAAA,OACA,IAAA,QACA,MAAA,MAAA,OAAA,EAAA,GACA,QACA,OAAA,GAAA,OAAA,OACA,OAAA,GAAA,OAAA,MAAA,OAEA,MACA,KAAA,KACA,IAAA,KACA,OAAA,GAAA,OAAA,OACA,OAAA,GAAA,OAAA,OAAA,kBAAA,QAIA,QAAA,uBAAA,QACA,GAAA,GAAA,SAAA,KAAA,QAAA,IAAA,IAAA,IAEA,GAAA,OAAA,GACA,MAAA,EAAA,IAAA,MAAA,EAAA,GAAA,MAAA,EAAA,GACA,IAAA,EACA,IAAA,EAMA,SAAA,IAAA,EAAA,GAAA,OAAA,GAAA,MAAA,WAAA,SAAA,EAAA,GAAA,MACA,KAAA,IAAA,EAAA,EAAA,GACA,QAAA,IAAA,EAAA,EAAA,KAEA,IAAA,OAAA,QAAA,MAAA,IACA,IAAA,OAAA,QAAA,MAAA,IAEA,SAAA,IAAA,EAAA,GAAA,OAAA,GAAA,MAAA,WAAA,SAAA,IAAA,KAAA,MACA,KAAA,IAAA,EAAA,EAAA,GAEA,MAAA,EAAA,GAEA,QAAA,EAAA,EACA,IAAA,WACA,MAIA,QAFA,MAAA,EAAA,EAEA,EAAA,EAAA,IAGA,KAGA,KAAA,mBAAA,SAAA,KAAA,QAAA,IAAA,KAEA,OAAA,GAAA,MAAA,KAAA,KACA,OAAA,WAAA,KAAA,UAOA,QAAA,gBAAA,QACA,GAAA,GAAA,KAAA,YAAA,UAAA,QAEA,KAAA,OAAA,GAAA,CA6BA,IAzBA,YAAA,iBAAA,QAGA,OAAA,IAAA,MAAA,OAAA,GAAA,OAAA,MAAA,OAAA,GAAA,QACA,sBAAA,QAIA,OAAA,aACA,UAAA,IAAA,OAAA,GAAA,MAAA,YAAA,OAEA,OAAA,WAAA,WAAA,aACA,OAAA,IAAA,oBAAA,GAGA,KAAA,YAAA,UAAA,EAAA,OAAA,YACA,OAAA,GAAA,OAAA,KAAA,cACA,OAAA,GAAA,MAAA,KAAA,cAQA,EAAA,EAAA,EAAA,GAAA,MAAA,OAAA,GAAA,KAAA,EACA,OAAA,GAAA,GAAA,MAAA,GAAA,YAAA,EAIA,MAAA,EAAA,EAAA,IACA,OAAA,GAAA,GAAA,MAAA,GAAA,MAAA,OAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAIA,MAAA,OAAA,GAAA,OACA,IAAA,OAAA,GAAA,SACA,IAAA,OAAA,GAAA,SACA,IAAA,OAAA,GAAA,eACA,OAAA,UAAA,EACA,OAAA,GAAA,MAAA,GAGA,OAAA,IAAA,OAAA,QAAA,YAAA,UAAA,MAAA,KAAA,OAGA,MAAA,OAAA,MACA,OAAA,GAAA,cAAA,OAAA,GAAA,gBAAA,OAAA,MAGA,OAAA,WACA,OAAA,GAAA,MAAA,KAIA,QAAA,gBAAA,QACA,GAAA,gBAEA,QAAA,KAIA,gBAAA,qBAAA,OAAA,IACA,OAAA,IACA,gBAAA,KACA,gBAAA,MACA,gBAAA,KAAA,gBAAA,KACA,gBAAA,KACA,gBAAA,OACA,gBAAA,OACA,gBAAA,aAGA,eAAA,SAGA,QAAA,kBAAA,QACA,GAAA,KAAA,GAAA,KACA,OAAA,QAAA,SAEA,IAAA,iBACA,IAAA,cACA,IAAA,eAGA,IAAA,cAAA,IAAA,WAAA,IAAA,WAKA,QAAA,6BAAA,QACA,GAAA,OAAA,KAAA,OAAA,SAEA,WADA,UAAA,OAIA,QAAA,MACA,OAAA,IAAA,OAAA,CAGA,IACA,GAAA,YAAA,OAAA,MAAA,QADA,OAAA,GAAA,OAAA,GAEA,aAAA,OAAA,OACA,uBAAA,CAIA,KAFA,OAAA,aAAA,OAAA,GAAA,OAAA,SAAA,MAAA,sBAEA,EAAA,EAAA,EAAA,OAAA,OAAA,IACA,MAAA,OAAA,GACA,aAAA,OAAA,MAAA,sBAAA,MAAA,cAAA,GACA,cACA,QAAA,OAAA,OAAA,EAAA,OAAA,QAAA,cACA,QAAA,OAAA,GACA,OAAA,IAAA,YAAA,KAAA,SAEA,OAAA,OAAA,MAAA,OAAA,QAAA,aAAA,YAAA,QACA,wBAAA,YAAA,QAGA,qBAAA,QACA,YACA,OAAA,IAAA,OAAA,EAGA,OAAA,IAAA,aAAA,KAAA,OAEA,wBAAA,MAAA,YAAA,SAEA,OAAA,UAAA,aACA,OAAA,IAAA,aAAA,KAAA,MAKA,QAAA,IAAA,cAAA,aAAA,uBACA,OAAA,OAAA,GACA,OAAA,IAAA,YAAA,KAAA,QAIA,OAAA,IAAA,WAAA,GAAA,OAAA,GAAA,OAAA,KACA,OAAA,IAAA,QAAA,WAGA,OAAA,OAAA,OAAA,GAAA,MAAA,KACA,OAAA,GAAA,OAAA,IAGA,OAAA,SAAA,GAAA,KAAA,OAAA,GAAA,QACA,OAAA,GAAA,MAAA,GAEA,eAAA,QACA,cAAA,QAGA,QAAA,gBAAA,GACA,MAAA,GAAA,QAAA,sCAAA,SAAA,QAAA,GAAA,GAAA,GAAA,IACA,MAAA,KAAA,IAAA,IAAA,KAKA,QAAA,cAAA,GACA,MAAA,GAAA,QAAA,yBAAA,QAIA,QAAA,4BAAA,QACA,GAAA,YACA,WAEA,YACA,EACA,YAEA,IAAA,IAAA,OAAA,GAAA,OAGA,MAFA,QAAA,IAAA,eAAA,OACA,OAAA,GAAA,GAAA,MAAA,KAIA,KAAA,EAAA,EAAA,EAAA,OAAA,GAAA,OAAA,IACA,aAAA,EACA,WAAA,cAAA,QACA,MAAA,OAAA,UACA,WAAA,QAAA,OAAA,SAEA,WAAA,IAAA,sBACA,WAAA,GAAA,OAAA,GAAA,GACA,4BAAA,YAEA,QAAA,cAKA,cAAA,WAAA,IAAA,cAGA,cAAA,GAAA,WAAA,IAAA,aAAA,OAEA,WAAA,IAAA,MAAA,cAEA,MAAA,aAAA,YAAA,gBACA,YAAA,aACA,WAAA,YAIA,QAAA,OAAA,YAAA,YAIA,QAAA,UAAA,QACA,GAAA,GAAA,EACA,OAAA,OAAA,GACA,MAAA,SAAA,KAAA,OAEA,IAAA,MAAA,CAEA,IADA,OAAA,IAAA,KAAA,EACA,EAAA,EAAA,EAAA,SAAA,OAAA,EAAA,EAAA,IACA,GAAA,SAAA,GAAA,GAAA,KAAA,QAAA,CAEA,OAAA,GAAA,SAAA,GAAA,IAAA,MAAA,IAAA,IACA,OAGA,IAAA,EAAA,EAAA,EAAA,SAAA,OAAA,EAAA,EAAA,IACA,GAAA,SAAA,GAAA,GAAA,KAAA,QAAA,CACA,OAAA,IAAA,SAAA,GAAA,EACA,OAGA,OAAA,MAAA,sBACA,OAAA,IAAA,KAEA,4BAAA,YAEA,QAAA,UAAA,EAKA,QAAA,oBAAA,QACA,SAAA,QACA,OAAA,YAAA,UACA,QAAA,SACA,OAAA,wBAAA,SAIA,QAAA,KAAA,IAAA,IACA,GAAA,GAAA,MACA,KAAA,EAAA,EAAA,EAAA,IAAA,SAAA,EACA,IAAA,KAAA,GAAA,IAAA,GAAA,GAEA,OAAA,KAGA,QAAA,mBAAA,QACA,GAAA,SAAA,MAAA,OAAA,EACA,SAAA,UACA,OAAA,GAAA,GAAA,MACA,OAAA,OACA,OAAA,GAAA,GAAA,OAAA,OACA,QAAA,QAAA,gBAAA,KAAA,QACA,OAAA,GAAA,GAAA,OAAA,QAAA,IACA,gBAAA,OACA,mBAAA,QACA,QAAA,QACA,OAAA,GAAA,IAAA,MAAA,MAAA,GAAA,SAAA,KACA,MAAA,UAAA,IAAA,MAEA,eAAA,SACA,gBAAA,OACA,eAAA,QACA,gBAAA,OAEA,OAAA,GAAA,GAAA,MAAA,OAEA,OAAA,wBAAA,QAIA,QAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAGA,GAAA,MAAA,GAAA,MAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAMA,OAHA,MAAA,GACA,KAAA,YAAA,GAEA,KAGA,QAAA,aAAA,GACA,GAAA,MAAA,GAAA,MAAA,KAAA,IAAA,MAAA,KAAA,WAIA,OAHA,MAAA,GACA,KAAA,eAAA,GAEA,KAGA,QAAA,cAAA,MAAA,QACA,GAAA,gBAAA,OACA,GAAA,MAAA,QAKA,GADA,MAAA,OAAA,cAAA,OACA,gBAAA,OACA,MAAA,UALA,OAAA,SAAA,MAAA,GASA,OAAA,OASA,QAAA,mBAAA,OAAA,OAAA,cAAA,SAAA,QACA,MAAA,QAAA,aAAA,QAAA,IAAA,cAAA,OAAA,UAGA,QAAA,cAAA,eAAA,cAAA,QACA,GAAA,UAAA,OAAA,SAAA,gBAAA,MACA,QAAA,MAAA,SAAA,GAAA,MACA,QAAA,MAAA,SAAA,GAAA,MACA,MAAA,MAAA,SAAA,GAAA,MACA,KAAA,MAAA,SAAA,GAAA,MACA,OAAA,MAAA,SAAA,GAAA,MACA,MAAA,MAAA,SAAA,GAAA,MAEA,KAAA,QAAA,uBAAA,IAAA,IAAA,UACA,IAAA,UAAA,MACA,QAAA,uBAAA,IAAA,KAAA,UACA,IAAA,QAAA,MACA,MAAA,uBAAA,IAAA,KAAA,QACA,IAAA,OAAA,MACA,KAAA,uBAAA,IAAA,KAAA,OACA,IAAA,SAAA,MACA,OAAA,uBAAA,IAAA,KAAA,SACA,IAAA,QAAA,OAAA,KAAA,MAKA,OAHA,MAAA,GAAA,cACA,KAAA,IAAA,eAAA,EACA,KAAA,GAAA,OACA,kBAAA,SAAA,MAgBA,QAAA,YAAA,IAAA,eAAA,sBACA,GAEA,gBAFA,IAAA,qBAAA,eACA,gBAAA,qBAAA,IAAA,KAaA,OATA,iBAAA,MACA,iBAAA,GAGA,IAAA,EAAA,kBACA,iBAAA,GAGA,eAAA,OAAA,KAAA,IAAA,gBAAA,MAEA,KAAA,KAAA,KAAA,eAAA,YAAA,GACA,KAAA,eAAA,QAKA,QAAA,oBAAA,KAAA,KAAA,QAAA,qBAAA,gBACA,GAAA,WAAA,UAAA,EAAA,YAAA,KAAA,EAAA,GAAA,WAOA,OALA,GAAA,IAAA,EAAA,EAAA,EACA,QAAA,MAAA,QAAA,QAAA,eACA,UAAA,eAAA,GAAA,EAAA,qBAAA,EAAA,IAAA,eAAA,EAAA,EAAA,GACA,UAAA,GAAA,KAAA,IAAA,QAAA,gBAAA,UAAA,GAGA,KAAA,UAAA,EAAA,KAAA,KAAA,EACA,UAAA,UAAA,EAAA,UAAA,WAAA,KAAA,GAAA,WAQA,QAAA,YAAA,QACA,GAEA,KAFA,MAAA,OAAA,GACA,OAAA,OAAA,EAKA,OAFA,QAAA,QAAA,OAAA,SAAA,OAAA,WAAA,OAAA,IAEA,OAAA,OAAA,SAAA,WAAA,KAAA,MACA,OAAA,SAAA,WAAA,KAGA,gBAAA,SACA,OAAA,GAAA,MAAA,OAAA,QAAA,SAAA,QAGA,OAAA,SAAA,OACA,GAAA,QAAA,OAAA,IACA,OACA,QAAA,QACA,2BAAA,QAEA,4BAAA,QAGA,kBAAA,QAGA,IAAA,GAAA,QAAA,QACA,IAAA,WAEA,IAAA,IAAA,EAAA,KACA,IAAA,SAAA,WAGA,MAyCA,QAAA,QAAA,GAAA,SACA,GAAA,KAAA,CAIA,IAHA,IAAA,QAAA,QAAA,QAAA,QAAA,MACA,QAAA,QAAA,KAEA,QAAA,OACA,MAAA,SAGA,KADA,IAAA,QAAA,GACA,EAAA,EAAA,EAAA,QAAA,SAAA,EACA,QAAA,GAAA,IAAA,OACA,IAAA,QAAA,GAGA,OAAA,KA8sBA,QAAA,gBAAA,IAAA,OACA,GAAA,WAGA,OAAA,gBAAA,SACA,MAAA,IAAA,aAAA,YAAA,OAEA,gBAAA,QACA,KAIA,WAAA,KAAA,IAAA,IAAA,OACA,YAAA,IAAA,OAAA,QACA,IAAA,GAAA,OAAA,IAAA,OAAA,MAAA,IAAA,SAAA,MAAA,YACA,KAGA,QAAA,WAAA,IAAA,MACA,MAAA,KAAA,GAAA,OAAA,IAAA,OAAA,MAAA,IAAA,QAGA,QAAA,WAAA,IAAA,KAAA,OACA,MAAA,UAAA,KACA,eAAA,IAAA,OAEA,IAAA,GAAA,OAAA,IAAA,OAAA,MAAA,IAAA,MAAA,OAIA,QAAA,cAAA,KAAA,UACA,MAAA,UAAA,OACA,MAAA,OAAA,OACA,UAAA,KAAA,KAAA,OACA,OAAA,aAAA,KAAA,UACA,MAEA,UAAA,KAAA,OAkCA,QAAA,aAAA,MAEA,MAAA,KAAA,KAAA,OAGA,QAAA,aAAA,OAGA,MAAA,QAAA,MAAA,IAmLA,QAAA,oBAAA,MACA,OAAA,SAAA,GAAA,MAAA,WACA,MAAA,MAAA,MAAA,OAq3MA,QAAA,YAAA,iBAEA,mBAAA,SAGA,gBAAA,YAAA,OAEA,YAAA,OADA,gBACA,UACA,uGAGA,QAEA,QAzzRA,IAzVA,GAAA,QAIA,gBAGA,EANA,QAAA,QAEA,YAAA,mBAAA,QAAA,OAAA,KAEA,MAAA,KAAA,MACA,eAAA,OAAA,UAAA,eAGA,KAAA,EACA,MAAA,EACA,KAAA,EACA,KAAA,EACA,OAAA,EACA,OAAA,EACA,YAAA,EAGA,WAGA,oBAGA,UAAA,mBAAA,SAAA,QAAA,OAAA,QAGA,gBAAA,sBACA,wBAAA,uDAIA,iBAAA,gIAGA,iBAAA,qKACA,sBAAA,6CAGA,yBAAA,QACA,2BAAA,UACA,0BAAA,UACA,yBAAA,gBACA,iBAAA,MACA,eAAA,mHACA,mBAAA,uBACA,YAAA,KACA,mBAAA,aACA,sBAAA,yBAGA,mBAAA,KACA,oBAAA,OACA,sBAAA,QACA,qBAAA,QACA,oBAAA,aACA,uBAAA,WAIA,SAAA,4IAEA,UAAA,uBAEA,WACA,eAAA,0BACA,aAAA,sBACA,eAAA,oBACA,aAAA,iBACA,WAAA,gBAIA,WACA,gBAAA,6BACA,WAAA,wBACA,QAAA,mBACA,KAAA,cAIA,qBAAA,kBAIA,wBADA,0CAAA,MAAA,MAEA,aAAA,EACA,QAAA,IACA,QAAA,IACA,MAAA,KACA,KAAA,MACA,OAAA,OACA,MAAA,UAGA,aACA,GAAA,cACA,EAAA,SACA,EAAA,SACA,EAAA,OACA,EAAA,MACA,EAAA,OACA,EAAA,OACA,EAAA,UACA,EAAA,QACA,EAAA,UACA,EAAA,OACA,IAAA,YACA,EAAA,UACA,EAAA,aACA,GAAA,WACA,GAAA,eAGA,gBACA,UAAA,YACA,WAAA,aACA,QAAA,UACA,SAAA,WACA,YAAA,eAIA,mBAGA,wBACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,GACA,EAAA,IAIA,iBAAA,gBAAA,MAAA,KACA,aAAA,kBAAA,MAAA,KAEA,sBACA,EAAA,WACA,MAAA,MAAA,QAAA,GAEA,IAAA,SAAA,QACA,MAAA,MAAA,aAAA,YAAA,KAAA,SAEA,KAAA,SAAA,QACA,MAAA,MAAA,aAAA,OAAA,KAAA,SAEA,EAAA,WACA,MAAA,MAAA,QAEA,IAAA,WACA,MAAA,MAAA,aAEA,EAAA,WACA,MAAA,MAAA,OAEA,GAAA,SAAA,QACA,MAAA,MAAA,aAAA,YAAA,KAAA,SAEA,IAAA,SAAA,QACA,MAAA,MAAA,aAAA,cAAA,KAAA,SAEA,KAAA,SAAA,QACA,MAAA,MAAA,aAAA,SAAA,KAAA,SAEA,EAAA,WACA,MAAA,MAAA,QAEA,EAAA,WACA,MAAA,MAAA,WAEA,GAAA,WACA,MAAA,cAAA,KAAA,OAAA,IAAA,IAEA,KAAA,WACA,MAAA,cAAA,KAAA,OAAA,IAEA,MAAA,WACA,MAAA,cAAA,KAAA,OAAA,IAEA,OAAA,WACA,GAAA,GAAA,KAAA,OAAA,KAAA,GAAA,EAAA,IAAA,GACA,OAAA,MAAA,aAAA,KAAA,IAAA,GAAA,IAEA,GAAA,WACA,MAAA,cAAA,KAAA,WAAA,IAAA,IAEA,KAAA,WACA,MAAA,cAAA,KAAA,WAAA,IAEA,MAAA,WACA,MAAA,cAAA,KAAA,WAAA,IAEA,GAAA,WACA,MAAA,cAAA,KAAA,cAAA,IAAA,IAEA,KAAA,WACA,MAAA,cAAA,KAAA,cAAA,IAEA,MAAA,WACA,MAAA,cAAA,KAAA,cAAA,IAEA,EAAA,WACA,MAAA,MAAA,WAEA,EAAA,WACA,MAAA,MAAA,cAEA,EAAA,WACA,MAAA,MAAA,aAAA,SAAA,KAAA,QAAA,KAAA,WAAA,IAEA,EAAA,WACA,MAAA,MAAA,aAAA,SAAA,KAAA,QAAA,KAAA,WAAA,IAEA,EAAA,WACA,MAAA,MAAA,SAEA,EAAA,WACA,MAAA,MAAA,QAAA,IAAA,IAEA,EAAA,WACA,MAAA,MAAA,WAEA,EAAA,WACA,MAAA,MAAA,WAEA,EAAA,WACA,MAAA,OAAA,KAAA,eAAA,MAEA,GAAA,WACA,MAAA,cAAA,MAAA,KAAA,eAAA,IAAA,IAEA,IAAA,WACA,MAAA,cAAA,KAAA,eAAA,IAEA,KAAA,WACA,MAAA,cAAA,KAAA,eAAA,IAEA,EAAA,WACA,GAAA,IAAA,KAAA,OACA,EAAA,GAKA,OAJA,GAAA,IACA,GAAA,EACA,EAAA,KAEA,EAAA,aAAA,MAAA,EAAA,IAAA,GAAA,IAAA,aAAA,MAAA,GAAA,GAAA,IAEA,GAAA,WACA,GAAA,IAAA,KAAA,OACA,EAAA,GAKA,OAJA,GAAA,IACA,GAAA,EACA,EAAA,KAEA,EAAA,aAAA,MAAA,EAAA,IAAA,GAAA,aAAA,MAAA,GAAA,GAAA,IAEA,EAAA,WACA,MAAA,MAAA,YAEA,GAAA,WACA,MAAA,MAAA,YAEA,EAAA,WACA,MAAA,MAAA,WAEA,EAAA,WACA,MAAA,MAAA,QAEA,EAAA,WACA,MAAA,MAAA,YAIA,gBAEA,OAAA,SAAA,cAAA,WAAA,gBAAA,eAqEA,iBAAA,QACA,EAAA,iBAAA,MACA,qBAAA,EAAA,KAAA,gBAAA,qBAAA,GAAA,EAEA,MAAA,aAAA,QACA,EAAA,aAAA,MACA,qBAAA,EAAA,GAAA,SAAA,qBAAA,GAAA,EAEA,sBAAA,KAAA,SAAA,qBAAA,IAAA,GAybA,OAAA,OAAA,WAEA,IAAA,SAAA,QACA,GAAA,MAAA,CACA,KAAA,IAAA,QACA,KAAA,OAAA,GACA,kBAAA,MACA,KAAA,GAAA,KAEA,KAAA,IAAA,GAAA,IAKA,MAAA,qBAAA,GAAA,QAAA,KAAA,cAAA,OAAA,IAAA,UAAA,SAGA,QAAA,wFAAA,MAAA,KACA,OAAA,SAAA,GACA,MAAA,MAAA,QAAA,EAAA,UAGA,aAAA,kDAAA,MAAA,KACA,YAAA,SAAA,GACA,MAAA,MAAA,aAAA,EAAA,UAGA,YAAA,SAAA,UAAA,OAAA,QACA,GAAA,GAAA,IAAA,KAQA,KANA,KAAA,eACA,KAAA,gBACA,KAAA,oBACA,KAAA,sBAGA,EAAA,EAAA,GAAA,EAAA,IAAA,CAYA,GAVA,IAAA,OAAA,KAAA,IAAA,IACA,SAAA,KAAA,iBAAA,KACA,KAAA,iBAAA,GAAA,GAAA,QAAA,IAAA,KAAA,OAAA,IAAA,IAAA,QAAA,IAAA,IAAA,IAAA,KACA,KAAA,kBAAA,GAAA,GAAA,QAAA,IAAA,KAAA,YAAA,IAAA,IAAA,QAAA,IAAA,IAAA,IAAA,MAEA,QAAA,KAAA,aAAA,KACA,MAAA,IAAA,KAAA,OAAA,IAAA,IAAA,KAAA,KAAA,YAAA,IAAA,IACA,KAAA,aAAA,GAAA,GAAA,QAAA,MAAA,QAAA,IAAA,IAAA,MAGA,QAAA,SAAA,QAAA,KAAA,iBAAA,GAAA,KAAA,WACA,MAAA,EACA,IAAA,QAAA,QAAA,QAAA,KAAA,kBAAA,GAAA,KAAA,WACA,MAAA,EACA,KAAA,QAAA,KAAA,aAAA,GAAA,KAAA,WACA,MAAA,KAKA,UAAA,2DAAA,MAAA,KACA,SAAA,SAAA,GACA,MAAA,MAAA,UAAA,EAAA,QAGA,eAAA,8BAAA,MAAA,KACA,cAAA,SAAA,GACA,MAAA,MAAA,eAAA,EAAA,QAGA,aAAA,uBAAA,MAAA,KACA,YAAA,SAAA,GACA,MAAA,MAAA,aAAA,EAAA,QAGA,cAAA,SAAA,aACA,GAAA,GAAA,IAAA,KAMA,KAJA,KAAA,iBACA,KAAA,mBAGA,EAAA,EAAA,EAAA,EAAA,IAQA,GANA,KAAA,eAAA,KACA,IAAA,QAAA,IAAA,IAAA,IAAA,GACA,MAAA,IAAA,KAAA,SAAA,IAAA,IAAA,KAAA,KAAA,cAAA,IAAA,IAAA,KAAA,KAAA,YAAA,IAAA,IACA,KAAA,eAAA,GAAA,GAAA,QAAA,MAAA,QAAA,IAAA,IAAA,MAGA,KAAA,eAAA,GAAA,KAAA,aACA,MAAA,IAKA,iBACA,IAAA,YACA,GAAA,SACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,eAAA,SAAA,KACA,GAAA,QAAA,KAAA,gBAAA,IAOA,QANA,QAAA,KAAA,gBAAA,IAAA,iBACA,OAAA,KAAA,gBAAA,IAAA,eAAA,QAAA,mBAAA,SAAA,KACA,MAAA,KAAA,MAAA,KAEA,KAAA,gBAAA,KAAA,QAEA,QAGA,KAAA,SAAA,OAGA,MAAA,OAAA,MAAA,IAAA,cAAA,OAAA,IAGA,eAAA,gBACA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,OAAA,GACA,QAAA,KAAA,KAEA,QAAA,KAAA,MAIA,WACA,QAAA,gBACA,QAAA,mBACA,SAAA,eACA,QAAA,oBACA,SAAA,sBACA,SAAA,KAEA,SAAA,SAAA,IAAA,IAAA,KACA,GAAA,QAAA,KAAA,UAAA,IACA,OAAA,kBAAA,QAAA,OAAA,MAAA,KAAA,MAAA,QAGA,eACA,OAAA,QACA,KAAA,SACA,EAAA,gBACA,EAAA,WACA,GAAA,aACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,UACA,EAAA,UACA,GAAA,YACA,EAAA,SACA,GAAA,YAGA,aAAA,SAAA,OAAA,cAAA,OAAA,UACA,GAAA,QAAA,KAAA,cAAA,OACA,OAAA,kBAAA,QACA,OAAA,OAAA,cAAA,OAAA,UACA,OAAA,QAAA,MAAA,SAGA,WAAA,SAAA,KAAA,QACA,GAAA,QAAA,KAAA,cAAA,KAAA,EAAA,SAAA,OACA,OAAA,kBAAA,QAAA,OAAA,QAAA,OAAA,QAAA,MAAA,SAGA,QAAA,SAAA,QACA,MAAA,MAAA,SAAA,QAAA,KAAA,SAEA,SAAA,KACA,cAAA,UAEA,SAAA,SAAA,QACA,MAAA,SAGA,WAAA,SAAA,QACA,MAAA,SAGA,KAAA,SAAA,KACA,MAAA,YAAA,IAAA,KAAA,MAAA,IAAA,KAAA,MAAA,KAAA,MAGA,OACA,IAAA,EACA,IAAA,GAGA,aAAA,eACA,YAAA,WACA,MAAA,MAAA,gBA8yBA,OAAA,SAAA,MAAA,OAAA,OAAA,QACA,GAAA,EAiBA,OAfA,iBAAA,UACA,OAAA,OACA,OAAA,WAIA,KACA,EAAA,kBAAA,EACA,EAAA,GAAA,MACA,EAAA,GAAA,OACA,EAAA,GAAA,OACA,EAAA,QAAA,OACA,EAAA,QAAA,EACA,EAAA,IAAA,sBAEA,WAAA,IAGA,OAAA,6BAAA,EAEA,OAAA,wBAAA,UACA,4LAIA,SAAA,QACA,OAAA,GAAA,GAAA,MAAA,OAAA,IAAA,OAAA,QAAA,OAAA,OA0BA,OAAA,IAAA,WACA,GAAA,SAAA,MAAA,KAAA,UAAA,EAEA,OAAA,QAAA,WAAA,OAGA,OAAA,IAAA,WACA,GAAA,SAAA,MAAA,KAAA,UAAA,EAEA,OAAA,QAAA,UAAA,OAIA,OAAA,IAAA,SAAA,MAAA,OAAA,OAAA,QACA,GAAA,EAkBA,OAhBA,iBAAA,UACA,OAAA,OACA,OAAA,WAIA,KACA,EAAA,kBAAA,EACA,EAAA,SAAA,EACA,EAAA,QAAA,EACA,EAAA,GAAA,OACA,EAAA,GAAA,MACA,EAAA,GAAA,OACA,EAAA,QAAA,OACA,EAAA,IAAA,sBAEA,WAAA,GAAA,OAIA,OAAA,KAAA,SAAA,OACA,MAAA,QAAA,IAAA,QAIA,OAAA,SAAA,SAAA,MAAA,KACA,GAGA,MACA,IACA,SACA,QANA,SAAA,MAEA,MAAA,IA+DA,OAzDA,QAAA,WAAA,OACA,UACA,GAAA,MAAA,cACA,EAAA,MAAA,MACA,EAAA,MAAA,SAEA,gBAAA,QACA,YACA,IACA,SAAA,KAAA,MAEA,SAAA,aAAA,QAEA,MAAA,wBAAA,KAAA,SACA,KAAA,MAAA,MAAA,GAAA,GAAA,EACA,UACA,EAAA,EACA,EAAA,MAAA,MAAA,OAAA,KACA,EAAA,MAAA,MAAA,OAAA,KACA,EAAA,MAAA,MAAA,SAAA,KACA,EAAA,MAAA,MAAA,SAAA,KACA,GAAA,MAAA,MAAA,cAAA,QAEA,MAAA,iBAAA,KAAA,SACA,KAAA,MAAA,MAAA,GAAA,GAAA,EACA,SAAA,SAAA,KAIA,GAAA,KAAA,KAAA,WAAA,IAAA,QAAA,IAAA,KAEA,QAAA,MAAA,KAAA,EAAA,KAAA,MAEA,UACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,IACA,EAAA,SAAA,MAAA,MAEA,gBAAA,YACA,QAAA,WAAA,MAAA,aACA,QAAA,kBAAA,OAAA,SAAA,MAAA,OAAA,SAAA,KAEA,YACA,SAAA,GAAA,QAAA,aACA,SAAA,EAAA,QAAA,QAGA,IAAA,GAAA,UAAA,UAEA,OAAA,WAAA,QAAA,WAAA,MAAA,aACA,IAAA,QAAA,MAAA,SAGA,KAIA,OAAA,QAAA,QAGA,OAAA,cAAA,UAGA,OAAA,SAAA,aAIA,OAAA,iBAAA,iBAIA,OAAA,aAAA,aAGA,OAAA,sBAAA,SAAA,UAAA,OACA,MAAA,wBAAA,aAAA,WACA,EAEA,QAAA,UACA,uBAAA,YAEA,uBAAA,WAAA,OACA,IAGA,OAAA,KAAA,UACA,wDACA,SAAA,IAAA,OACA,MAAA,QAAA,OAAA,IAAA,SAOA,OAAA,OAAA,SAAA,IAAA,QACA,GAAA,KAcA,OAbA,OAEA,KADA,mBAAA,QACA,OAAA,aAAA,IAAA,QAGA,OAAA,WAAA,KAGA,OACA,OAAA,SAAA,QAAA,OAAA,QAAA,OAIA,OAAA,QAAA,OAGA,OAAA,aAAA,SAAA,KAAA,QACA,MAAA,QAAA,QACA,OAAA,KAAA,KACA,QAAA,QACA,QAAA,MAAA,GAAA,SAEA,QAAA,MAAA,IAAA,QAGA,OAAA,OAAA,MAEA,QAAA,cAGA,SAAA,MACA,OAIA,OAAA,SAAA,UACA,gEACA,SAAA,KACA,MAAA,QAAA,WAAA,OAKA,OAAA,WAAA,SAAA,KACA,GAAA,OAMA,IAJA,KAAA,IAAA,SAAA,IAAA,QAAA,QACA,IAAA,IAAA,QAAA,QAGA,IACA,MAAA,QAAA,OAGA,KAAA,QAAA,KAAA,CAGA,GADA,OAAA,WAAA,KAEA,MAAA,OAEA,MAAA,KAGA,MAAA,cAAA,MAIA,OAAA,SAAA,SAAA,KACA,MAAA,eAAA,SACA,MAAA,KAAA,WAAA,IAAA,qBAIA,OAAA,WAAA,SAAA,KACA,MAAA,eAAA,UAGA,KAAA,EAAA,MAAA,OAAA,EAAA,GAAA,IAAA,EACA,SAAA,MAAA,GAGA,QAAA,eAAA,SAAA,OACA,MAAA,gBAAA,QAGA,OAAA,QAAA,SAAA,OACA,GAAA,GAAA,OAAA,IAAA,IAQA,OAPA,OAAA,MACA,OAAA,EAAA,IAAA,OAGA,EAAA,IAAA,iBAAA,EAGA,GAGA,OAAA,UAAA,WACA,MAAA,QAAA,MAAA,KAAA,WAAA,aAGA,OAAA,kBAAA,SAAA,OACA,MAAA,OAAA,QAAA,MAAA,OAAA,GAAA,KAAA,MAQA,OAAA,OAAA,GAAA,OAAA,WAEA,MAAA,WACA,MAAA,QAAA,OAGA,QAAA,WACA,OAAA,KAAA,GAAA,KAAA,KAAA,SAAA,IAGA,KAAA,WACA,MAAA,MAAA,OAAA,KAAA,MAGA,SAAA,WACA,MAAA,MAAA,QAAA,OAAA,MAAA,OAAA,qCAGA,OAAA,WACA,MAAA,MAAA,QAAA,GAAA,OAAA,MAAA,KAAA,IAGA,YAAA,WACA,GAAA,GAAA,OAAA,MAAA,KACA,OAAA,GAAA,EAAA,QAAA,EAAA,QAAA,KACA,kBAAA,MAAA,UAAA,YAEA,KAAA,SAAA,cAEA,aAAA,EAAA,gCAGA,aAAA,EAAA,mCAIA,QAAA,WACA,GAAA,GAAA,IACA,QACA,EAAA,OACA,EAAA,QACA,EAAA,OACA,EAAA,QACA,EAAA,UACA,EAAA,UACA,EAAA,iBAIA,QAAA,WACA,MAAA,SAAA,OAGA,aAAA,WACA,MAAA,MAAA,GACA,KAAA,WAAA,cAAA,KAAA,IAAA,KAAA,OAAA,OAAA,IAAA,KAAA,IAAA,OAAA,KAAA,KAAA,WAAA,GAGA,GAGA,aAAA,WACA,MAAA,WAAA,KAAA,MAGA,UAAA,WACA,MAAA,MAAA,IAAA,UAGA,IAAA,SAAA,eACA,MAAA,MAAA,KAAA,EAAA,gBAGA,MAAA,SAAA,eASA,MARA,MAAA,SACA,KAAA,KAAA,EAAA,eACA,KAAA,QAAA,EAEA,eACA,KAAA,IAAA,KAAA,gBAAA,MAGA,MAGA,OAAA,SAAA,aACA,GAAA,QAAA,aAAA,KAAA,aAAA,OAAA,cACA,OAAA,MAAA,aAAA,WAAA,SAGA,IAAA,YAAA,EAAA,OAEA,SAAA,YAAA,GAAA,YAEA,KAAA,SAAA,MAAA,MAAA,SACA,GAEA,MAAA,OAAA,WAFA,KAAA,OAAA,MAAA,MACA,SAAA,KAAA,KAAA,OAAA,KAAA,OA8BA,OA3BA,OAAA,eAAA,OAEA,SAAA,OAAA,UAAA,OAEA,KAAA,OAAA,KAAA,cAAA,KAAA,eAEA,OAAA,IAAA,KAAA,OAAA,KAAA,SAAA,KAAA,QAAA,KAAA,SAGA,WAAA,KAAA,OAAA,MAAA,QAAA,UACA,KAAA,OAAA,MAAA,QAAA,UAEA,YACA,KADA,KAAA,OAAA,OAAA,MAAA,QAAA,SAAA,QACA,KAAA,OAAA,OAAA,MAAA,QAAA,SAAA,SACA,QAAA,WAAA,KACA,SAAA,QACA,QAAA,MAGA,KAAA,KAAA,KACA,OAAA,WAAA,MAAA,KAAA,IACA,WAAA,MAAA,KAAA,IACA,SAAA,MAAA,KAAA,KACA,QAAA,OAAA,KAAA,UAAA,MACA,SAAA,OAAA,KAAA,UAAA,OACA,MAEA,QAAA,OAAA,SAAA,SAGA,KAAA,SAAA,KAAA,eACA,MAAA,QAAA,UAAA,GAAA,KAAA,KAAA,OAAA,OAAA,KAAA,UAAA,UAAA,gBAGA,QAAA,SAAA,eACA,MAAA,MAAA,KAAA,SAAA,gBAGA,SAAA,SAAA,MAGA,GAAA,KAAA,MAAA,SACA,IAAA,OAAA,IAAA,MAAA,QAAA,OACA,KAAA,KAAA,KAAA,IAAA,QAAA,GACA,OAAA,GAAA,KAAA,WACA,GAAA,KAAA,WACA,EAAA,KAAA,UACA,EAAA,KAAA,UACA,EAAA,KAAA,UACA,EAAA,KAAA,WAAA,UACA,OAAA,MAAA,OAAA,KAAA,aAAA,SAAA,OAAA,KAAA,OAAA,QAGA,WAAA,WACA,MAAA,YAAA,KAAA,SAGA,MAAA,WACA,MAAA,MAAA,OAAA,KAAA,QAAA,MAAA,GAAA,QACA,KAAA,OAAA,KAAA,QAAA,MAAA,GAAA,QAGA,IAAA,SAAA,OACA,GAAA,KAAA,KAAA,OAAA,KAAA,GAAA,YAAA,KAAA,GAAA,QACA,OAAA,OAAA,OACA,MAAA,aAAA,MAAA,KAAA,cACA,KAAA,IAAA,MAAA,IAAA,MAEA,KAIA,MAAA,aAAA,SAAA,GAEA,QAAA,SAAA,OAIA,OAHA,MAAA,eAAA,QAIA,IAAA,OACA,KAAA,MAAA,EAEA,KAAA,UACA,IAAA,QACA,KAAA,KAAA,EAEA,KAAA,OACA,IAAA,UACA,IAAA,MACA,KAAA,MAAA,EAEA,KAAA,OACA,KAAA,QAAA,EAEA,KAAA,SACA,KAAA,QAAA,EAEA,KAAA,SACA,KAAA,aAAA,GAgBA,MAXA,SAAA,MACA,KAAA,QAAA,GACA,YAAA,OACA,KAAA,WAAA,GAIA,YAAA,OACA,KAAA,MAAA,EAAA,KAAA,MAAA,KAAA,QAAA,IAGA,MAGA,MAAA,SAAA,OAEA,MADA,OAAA,eAAA,OACA,QAAA,WAAA,gBAAA,MACA,KAEA,KAAA,QAAA,OAAA,IAAA,EAAA,YAAA,MAAA,OAAA,OAAA,SAAA,EAAA,OAGA,QAAA,SAAA,MAAA,OACA,GAAA,QAEA,OADA,OAAA,eAAA,mBAAA,OAAA,MAAA,eACA,gBAAA,OACA,MAAA,OAAA,SAAA,OAAA,MAAA,OAAA,QACA,MAAA,QAEA,QAAA,OAAA,SAAA,QAAA,OAAA,OAAA,OACA,SAAA,KAAA,QAAA,QAAA,SAIA,SAAA,SAAA,MAAA,OACA,GAAA,QAEA,OADA,OAAA,eAAA,mBAAA,OAAA,MAAA,eACA,gBAAA,OACA,MAAA,OAAA,SAAA,OAAA,MAAA,OAAA,QACA,OAAA,OAEA,QAAA,OAAA,SAAA,QAAA,OAAA,OAAA,QACA,KAAA,QAAA,MAAA,OAAA,UAIA,OAAA,SAAA,MAAA,OACA,GAAA,QAEA,OADA,OAAA,eAAA,OAAA,eACA,gBAAA,OACA,MAAA,OAAA,SAAA,OAAA,MAAA,OAAA,QACA,QAAA,QAEA,SAAA,OAAA,QACA,KAAA,QAAA,QAAA,QAAA,SAAA,UAAA,KAAA,QAAA,MAAA,SAIA,IAAA,UACA,mGACA,SAAA,OAEA,MADA,OAAA,OAAA,MAAA,KAAA,WACA,KAAA,MAAA,KAAA,QAIA,IAAA,UACA,mGACA,SAAA,OAEA,MADA,OAAA,OAAA,MAAA,KAAA,WACA,MAAA,KAAA,KAAA,QAcA,KAAA,SAAA,MAAA,eACA,GACA,aADA,OAAA,KAAA,SAAA,CAEA,OAAA,OAAA,MA0BA,KAAA,OAAA,OAAA,KAAA,iBAzBA,gBAAA,SACA,MAAA,0BAAA,QAEA,KAAA,IAAA,OAAA,KACA,MAAA,GAAA,QAEA,KAAA,QAAA,gBACA,YAAA,KAAA,iBAEA,KAAA,QAAA,MACA,KAAA,QAAA,EACA,MAAA,aACA,KAAA,SAAA,YAAA,KAEA,SAAA,SACA,eAAA,KAAA,kBACA,gCAAA,KACA,OAAA,SAAA,OAAA,MAAA,KAAA,GAAA,GACA,KAAA,oBACA,KAAA,mBAAA,EACA,OAAA,aAAA,MAAA,GACA,KAAA,kBAAA,OAMA,OAGA,SAAA,WACA,MAAA,MAAA,OAAA,MAAA,IAGA,SAAA,WACA,MAAA,MAAA,OAAA,6BAAA,IAGA,UAAA,WAMA,MALA,MAAA,KACA,KAAA,KAAA,KAAA,MACA,gBAAA,MAAA,IACA,KAAA,KAAA,KAAA,IAEA,MAGA,qBAAA,SAAA,OAQA,MAHA,OAJA,MAIA,OAAA,OAAA,OAHA,GAMA,KAAA,OAAA,OAAA,KAAA,GAGA,YAAA,WACA,MAAA,aAAA,KAAA,OAAA,KAAA,UAGA,UAAA,SAAA,OACA,GAAA,WAAA,OAAA,OAAA,MAAA,QAAA,OAAA,OAAA,MAAA,QAAA,SAAA,OAAA,CACA,OAAA,OAAA,MAAA,UAAA,KAAA,IAAA,MAAA,UAAA,MAGA,QAAA,SAAA,OACA,MAAA,OAAA,MAAA,KAAA,MAAA,KAAA,QAAA,GAAA,GAAA,KAAA,MAAA,GAAA,MAAA,GAAA,KAAA,QAAA,IAGA,SAAA,SAAA,OACA,GAAA,MAAA,WAAA,KAAA,KAAA,aAAA,MAAA,IAAA,KAAA,aAAA,MAAA,KAAA,IACA,OAAA,OAAA,MAAA,KAAA,KAAA,IAAA,MAAA,KAAA,MAGA,YAAA,SAAA,OACA,GAAA,MAAA,WAAA,KAAA,EAAA,GAAA,IACA,OAAA,OAAA,MAAA,KAAA,KAAA,IAAA,MAAA,KAAA,MAGA,KAAA,SAAA,OACA,GAAA,MAAA,KAAA,aAAA,KAAA,KACA,OAAA,OAAA,MAAA,KAAA,KAAA,IAAA,GAAA,MAAA,MAAA,MAGA,QAAA,SAAA,OACA,GAAA,MAAA,WAAA,KAAA,EAAA,GAAA,IACA,OAAA,OAAA,MAAA,KAAA,KAAA,IAAA,GAAA,MAAA,MAAA,MAGA,QAAA,SAAA,OACA,GAAA,UAAA,KAAA,MAAA,EAAA,KAAA,aAAA,MAAA,KAAA,CACA,OAAA,OAAA,MAAA,QAAA,KAAA,IAAA,MAAA,QAAA,MAGA,WAAA,SAAA,OAIA,MAAA,OAAA,MAAA,KAAA,OAAA,EAAA,KAAA,IAAA,KAAA,MAAA,EAAA,MAAA,MAAA,IAGA,eAAA,WACA,MAAA,aAAA,KAAA,OAAA,EAAA,IAGA,YAAA,WACA,GAAA,UAAA,KAAA,aAAA,KACA,OAAA,aAAA,KAAA,OAAA,SAAA,IAAA,SAAA,MAGA,IAAA,SAAA,OAEA,MADA,OAAA,eAAA,OACA,KAAA,UAGA,IAAA,SAAA,MAAA,OAKA,MAJA,OAAA,eAAA,OACA,kBAAA,MAAA,QACA,KAAA,OAAA,OAEA,MAMA,OAAA,SAAA,KACA,GAAA,cAEA,OAAA,OAAA,UACA,KAAA,QAAA,OAEA,cAAA,OAAA,WAAA,KACA,MAAA,gBACA,KAAA,QAAA,eAEA,OAIA,KAAA,UACA,kJACA,SAAA,KACA,MAAA,OAAA,UACA,KAAA,aAEA,KAAA,OAAA,OAKA,WAAA,WACA,MAAA,MAAA,SAGA,cAAA,WAGA,MAAA,IAAA,KAAA,MAAA,KAAA,GAAA,oBAAA,OA8CA,OAAA,GAAA,YAAA,OAAA,GAAA,aAAA,aAAA,gBAAA,GACA,OAAA,GAAA,OAAA,OAAA,GAAA,QAAA,aAAA,WAAA,GACA,OAAA,GAAA,OAAA,OAAA,GAAA,QAAA,aAAA,WAAA,GAKA,OAAA,GAAA,KAAA,OAAA,GAAA,MAAA,aAAA,SAAA,GAEA,OAAA,GAAA,KAAA,aAAA,QAAA,GACA,OAAA,GAAA,MAAA,UAAA,kDAAA,aAAA,QAAA,IACA,OAAA,GAAA,KAAA,aAAA,YAAA,GACA,OAAA,GAAA,MAAA,UAAA,kDAAA,aAAA,YAAA,IAGA,OAAA,GAAA,KAAA,OAAA,GAAA,IACA,OAAA,GAAA,OAAA,OAAA,GAAA,MACA,OAAA,GAAA,MAAA,OAAA,GAAA,KACA,OAAA,GAAA,SAAA,OAAA,GAAA,QACA,OAAA,GAAA,SAAA,OAAA,GAAA,QAGA,OAAA,GAAA,OAAA,OAAA,GAAA,YAkBA,OAAA,OAAA,SAAA,GAAA,SAAA,WAEA,QAAA,WACA,GAIA,SAAA,QAAA,MAJA,aAAA,KAAA,cACA,KAAA,KAAA,MACA,OAAA,KAAA,QACA,KAAA,KAAA,MACA,MAAA,CAIA,MAAA,aAAA,aAAA,IAEA,QAAA,SAAA,aAAA,KACA,KAAA,QAAA,QAAA,GAEA,QAAA,SAAA,QAAA,IACA,KAAA,QAAA,QAAA,GAEA,MAAA,SAAA,QAAA,IACA,KAAA,MAAA,MAAA,GAEA,MAAA,SAAA,MAAA,IAGA,MAAA,SAAA,YAAA,OACA,MAAA,SAAA,YAAA,QAIA,QAAA,SAAA,KAAA,IACA,MAAA,GAGA,OAAA,SAAA,OAAA,IACA,QAAA,GAEA,KAAA,KAAA,KACA,KAAA,OAAA,OACA,KAAA,MAAA;EAGA,IAAA,WAYA,MAXA,MAAA,cAAA,KAAA,IAAA,KAAA,eACA,KAAA,MAAA,KAAA,IAAA,KAAA,OACA,KAAA,QAAA,KAAA,IAAA,KAAA,SAEA,KAAA,MAAA,aAAA,KAAA,IAAA,KAAA,MAAA,cACA,KAAA,MAAA,QAAA,KAAA,IAAA,KAAA,MAAA,SACA,KAAA,MAAA,QAAA,KAAA,IAAA,KAAA,MAAA,SACA,KAAA,MAAA,MAAA,KAAA,IAAA,KAAA,MAAA,OACA,KAAA,MAAA,OAAA,KAAA,IAAA,KAAA,MAAA,QACA,KAAA,MAAA,MAAA,KAAA,IAAA,KAAA,MAAA,OAEA,MAGA,MAAA,WACA,MAAA,UAAA,KAAA,OAAA,IAGA,QAAA,WACA,MAAA,MAAA,cACA,MAAA,KAAA,MACA,KAAA,QAAA,GAAA,OACA,QAAA,MAAA,KAAA,QAAA,KAGA,SAAA,SAAA,YACA,GAAA,QAAA,aAAA,MAAA,WAAA,KAAA,aAMA,OAJA,cACA,OAAA,KAAA,aAAA,YAAA,KAAA,SAGA,KAAA,aAAA,WAAA,SAGA,IAAA,SAAA,MAAA,KAEA,GAAA,KAAA,OAAA,SAAA,MAAA,IAQA,OANA,MAAA,eAAA,IAAA,cACA,KAAA,OAAA,IAAA,MACA,KAAA,SAAA,IAAA,QAEA,KAAA,UAEA,MAGA,SAAA,SAAA,MAAA,KACA,GAAA,KAAA,OAAA,SAAA,MAAA,IAQA,OANA,MAAA,eAAA,IAAA,cACA,KAAA,OAAA,IAAA,MACA,KAAA,SAAA,IAAA,QAEA,KAAA,UAEA,MAGA,IAAA,SAAA,OAEA,MADA,OAAA,eAAA,OACA,KAAA,MAAA,cAAA,QAGA,GAAA,SAAA,OACA,GAAA,MAAA,MAGA,IAFA,MAAA,eAAA,OAEA,UAAA,OAAA,SAAA,MAGA,MAFA,MAAA,KAAA,MAAA,KAAA,cAAA,MACA,OAAA,KAAA,QAAA,GAAA,YAAA,MACA,UAAA,MAAA,OAAA,OAAA,EAIA,QADA,KAAA,KAAA,MAAA,KAAA,MAAA,YAAA,KAAA,QAAA,KACA,OACA,IAAA,OAAA,MAAA,MAAA,EAAA,KAAA,cAAA,MACA,KAAA,MAAA,MAAA,MAAA,KAAA,cAAA,KACA,KAAA,OAAA,MAAA,IAAA,KAAA,KAAA,cAAA,IACA,KAAA,SAAA,MAAA,IAAA,KAAA,GAAA,KAAA,cAAA,GACA,KAAA,SAAA,MAAA,IAAA,KAAA,GAAA,GAAA,KAAA,cAAA,GAEA,KAAA,cAAA,MAAA,MAAA,MAAA,GAAA,KAAA,GAAA,GAAA,KAAA,KAAA,aACA,SAAA,KAAA,IAAA,OAAA,gBAAA,SAKA,KAAA,OAAA,GAAA,KACA,OAAA,OAAA,GAAA,OAEA,YAAA,UACA,sFAEA,WACA,MAAA,MAAA,gBAIA,YAAA,WAEA,GAAA,OAAA,KAAA,IAAA,KAAA,SACA,OAAA,KAAA,IAAA,KAAA,UACA,KAAA,KAAA,IAAA,KAAA,QACA,MAAA,KAAA,IAAA,KAAA,SACA,QAAA,KAAA,IAAA,KAAA,WACA,QAAA,KAAA,IAAA,KAAA,UAAA,KAAA,eAAA,IAEA,OAAA,MAAA,aAMA,KAAA,YAAA,EAAA,IAAA,IACA,KACA,MAAA,MAAA,IAAA,KACA,OAAA,OAAA,IAAA,KACA,KAAA,KAAA,IAAA,KACA,OAAA,SAAA,QAAA,IAAA,KACA,MAAA,MAAA,IAAA,KACA,QAAA,QAAA,IAAA,KACA,QAAA,QAAA,IAAA,IAXA,OAcA,WAAA,WACA,MAAA,MAAA,WAIA,OAAA,SAAA,GAAA,SAAA,OAAA,SAAA,GAAA,WAQA,KAAA,IAAA,wBACA,WAAA,uBAAA,IACA,mBAAA,EAAA,cAIA,QAAA,SAAA,GAAA,eAAA,WACA,MAAA,MAAA,GAAA,OAEA,OAAA,SAAA,GAAA,UAAA,WACA,MAAA,MAAA,GAAA,MAEA,OAAA,SAAA,GAAA,UAAA,WACA,MAAA,MAAA,GAAA,MAEA,OAAA,SAAA,GAAA,QAAA,WACA,MAAA,MAAA,GAAA,MAEA,OAAA,SAAA,GAAA,OAAA,WACA,MAAA,MAAA,GAAA,MAEA,OAAA,SAAA,GAAA,QAAA,WACA,MAAA,MAAA,GAAA,UAEA,OAAA,SAAA,GAAA,SAAA,WACA,MAAA,MAAA,GAAA,MAEA,OAAA,SAAA,GAAA,QAAA,WACA,MAAA,MAAA,GAAA,MASA,OAAA,OAAA,MACA,aAAA,uBACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,IAAA,MAAA,OAAA,IAAA,IAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KAAA,IACA,OAAA,QAAA,UAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,8FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,IAAA,MACA,QAAA,KAAA,KAEA,QAAA,KAAA,MAGA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,eACA,SAAA,eACA,QAAA,iBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,YACA,EAAA,mBACA,EAAA,YACA,GAAA,YACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,SACA,EAAA,WACA,GAAA,YACA,EAAA,UACA,GAAA,WAEA,aAAA,kBACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,QAAA,IAAA,QAAA,QAAA,GAAA,MAAA,OAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wEAAA,MAAA,KACA,YAAA,wEAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,wCAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,wBACA,QAAA,sBACA,SAAA,uBACA,QAAA,sBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,WACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,QAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,SACA,OAAA,6EAAA,MAAA,KACA,YAAA,6EAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,wCAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,IAEA,KAGA,UACA,QAAA,wBACA,QAAA,sBACA,SAAA,uBACA,QAAA,sBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,WACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,YAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,MACA,IAAA,EACA,IAAA,QAUA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KACA,WAAA,SAAA,GACA,MAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GACA,SACA,GAAA,eAAA,eAAA,UAAA,WAAA,UAAA,WAAA,YACA,GAAA,eAAA,eAAA,UAAA,WAAA,WAAA,WAAA,YACA,GAAA,cAAA,cAAA,SAAA,UAAA,WAAA,UAAA,WACA,GAAA,aAAA,YAAA,QAAA,SAAA,UAAA,WAAA,UACA,GAAA,aAAA,YAAA,QAAA,SAAA,UAAA,UAAA,UACA,GAAA,aAAA,YAAA,QAAA,SAAA,WAAA,WAAA,WACA,UAAA,SAAA,GACA,MAAA,UAAA,OAAA,eACA,GAAA,GAAA,WAAA,QACA,IAAA,QAAA,GAAA,WAAA,QAIA,OAHA,KAAA,IACA,IAAA,IAAA,cAAA,EAAA,IAEA,IAAA,QAAA,MAAA,UAEA,QACA,qBACA,cACA,YACA,cACA,YACA,eACA,aACA,WACA,eACA,qBACA,sBACA,qBAGA,OAAA,QAAA,aAAA,MACA,OAAA,OACA,YAAA,OACA,SAAA,sDAAA,MAAA,KACA,cAAA,wCAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,IAEA,KAGA,UACA,QAAA,wBACA,QAAA,uBACA,SAAA,uBACA,QAAA,sBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,SACA,EAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,KACA,EAAA,UAAA,KACA,GAAA,UAAA,MAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,MACA,IAAA,EACA,IAAA,QAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,WACA,EAAA,QACA,EAAA,QACA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,EAAA,OACA,EAAA,OACA,GAAA,OACA,GAAA,OAEA,EAAA,QACA,EAAA,QACA,IAAA,QAEA,EAAA,OAEA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,GAAA,QACA,GAAA,QAEA,OAAA,QAAA,aAAA,MACA,OAAA,+EAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qEAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,kBACA,QAAA,kBACA,SAAA,+BACA,QAAA,aACA,SAAA,+BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,kBACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,SACA,GAAA,QACA,EAAA,SACA,GAAA,SAEA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,SAEA,SAGA,aAAA,wCACA,QAAA,SAAA,QACA,GAAA,IAAA,OACA,MAAA,QAAA,OAEA,IAAA,GAAA,OAAA,GACA,EAAA,OAAA,IAAA,EACA,EAAA,QAAA,IAAA,IAAA,IAEA,OAAA,SAAA,SAAA,IAAA,SAAA,IAAA,SAAA,KAEA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,QAAA,KAAA,KACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,KAAA,KAAA,GAAA,IAAA,MAAA,GAAA,MAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,KAAA,GAAA,IAAA,KAAA,IAAA,KAAA,IAAA,MAAA,GAAA,MAAA,GAGA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,yBAAA,yBACA,GAAA,cAAA,yBAAA,yBACA,GAAA,iBACA,GAAA,uBACA,GAAA,iBAEA,OAAA,MAAA,IACA,cAAA,UAAA,UAEA,MAAA,IACA,cAAA,UAAA,UAGA,OAAA,IAAA,OAAA,OAAA,MAAA,QAIA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,qGAAA,MAAA,KACA,WAAA,uGAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,0DAAA,MAAA,KACA,WAAA,0DAAA,MAAA,MAGA,SAAA,6CAAA,KAAA,QACA,aACA,YAEA,OAAA,UAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,0DAAA,MAAA,KACA,SAAA,oBACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,eACA,QAAA,gBACA,QAAA,eACA,SAAA,WACA,MAAA,mBAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,2BAGA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,UACA,EAAA,kBACA,EAAA,uBACA,GAAA,uBACA,EAAA,uBACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,MACA,GAAA,wBAIA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,SACA,GAAA,KACA,MAEA,UAIA,aAAA,mBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACA,IAAA,IACA,MAAA,QAAA,KAAA,GAAA,OAAA,KAAA,GAAA,OAAA,MAAA,IAAA,OAAA,MAAA,GAAA,OAAA,KAAA,OAAA,IACA,KAAA,IACA,MAAA,QAAA,KACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,YACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,cACA,SAAA,cACA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,4BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,8BAGA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,WACA,EAAA,kBACA,EAAA,SACA,GAAA,YACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,SACA,EAAA,QACA,GAAA,YACA,EAAA,SACA,GAAA,aAEA,aAAA,8BACA,QAAA,SAAA,QACA,GAAA,WAAA,OAAA,GACA,YAAA,OAAA,GACA,OAAA,KAAA,OACA,OAAA,MACA,IAAA,YACA,OAAA,MACA,YAAA,IAAA,GAAA,YACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,WAAA,IAAA,UACA,OAAA,MAEA,OAAA,OAGA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,yDAAA,MAAA,KACA,SAAA,+DAAA,MAAA,KACA,cAAA,0CAAA,MAAA,KACA,YAAA,6BAAA,MAAA,KACA,gBACA,GAAA,aACA,IAAA,gBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,UACA,QAAA,gBACA,SAAA,WACA,QAAA,aACA,SAAA,gBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,SACA,EAAA,cACA,EAAA,WACA,GAAA,WACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,UAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAMA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,MACA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,QAEA,OAGA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,qJAAA,MAAA,KACA,YAAA,qJAAA,MAAA,KACA,SAAA,gFAAA,MAAA,KACA,cAAA,oDAAA,MAAA,KACA,YAAA,oDAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,cACA,QAAA,cACA,SAAA,wBACA,QAAA,YACA,SAAA,4BACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,QACA,EAAA,aACA,GAAA,WACA,EAAA,cACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,YACA,GAAA,UACA,EAAA,UACA,GAAA,SAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,SACA,GAAA,KACA,UACA,GAAA,KACA,UACA,GAAA,KACA,UAEA,UAGA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,0BAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,WACA,GAAA,MACA,GAAA,SAEA,OAAA,QAAA,IAAA,SAAA,OAAA,KAAA,QAGA,QAAA,yBAAA,QACA,OAAA,WAAA,SACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,QAAA,QACA,SACA,MAAA,QAAA,UAIA,QAAA,YAAA,QACA,MAAA,QAAA,EACA,WAAA,OAAA,IAEA,OAGA,QAAA,UAAA,KAAA,QACA,MAAA,KAAA,OACA,aAAA,MAEA,KAGA,QAAA,cAAA,MACA,GAAA,gBACA,EAAA,IACA,EAAA,IACA,EAAA,IAEA,OAAA,eAAA,KAAA,OAAA,MAAA,UACA,KAEA,cAAA,KAAA,OAAA,IAAA,KAAA,UAAA,GAGA,MAAA,QAAA,aAAA,MACA,OAAA,gFAAA,MAAA,KACA,YAAA,mDAAA,MAAA,KACA,SAAA,6CAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,wBAAA,MAAA,KACA,gBACA,GAAA,WACA,IAAA,cACA,EAAA,aACA,GAAA,sBACA,IAAA,yBACA,KAAA,gCAEA,UACA,QAAA,gBACA,QAAA,qBACA,SAAA,eACA,QAAA,gBACA,SAAA,qBACA,SAAA,KAEA,cACA,OAAA,YACA,KAAA,SACA,EAAA,wBACA,EAAA,cACA,GAAA,yBACA,EAAA,SACA,GAAA,SACA,EAAA,YACA,GAAA,yBACA,EAAA,SACA,GAAA,yBACA,EAAA,WACA,GAAA,yBAEA,aAAA,kBACA,QAAA,SAAA,QACA,GAAA,QAAA,IAAA,OAAA,KAAA,KACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,eAAA,cACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,QAGA,KAAA,IACA,MAAA,eAAA,YAAA,aACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,MACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,OAEA,MAGA,KAAA,KAMA,MAJA,SADA,IAAA,OACA,MAEA,MAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,UAEA,SAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,UAMA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,0BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,cACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,oFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,8DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,QAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,SAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,QAAA,WACA,MAAA,YAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,SAAA,WACA,MAAA,wBAAA,IAAA,KAAA,QAAA,MAAA,MAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,QACA,EAAA,aACA,EAAA,WACA,GAAA,YACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,qBACA,QAAA,SAAA,OAAA,QACA,GAAA,QAAA,IAAA,OAAA,IACA,IAAA,OAAA,IACA,IAAA,OAAA,IACA,IAAA,OAAA,IAAA,GAIA,QAHA,MAAA,QAAA,MAAA,UACA,OAAA,KAEA,OAAA,QAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QAIA,QAAA,QAAA,GACA,MAAA,GAAA,GAAA,EAAA,GAAA,OAAA,EAAA,IAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,gBAAA,SAAA,aAAA,eACA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,MACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,MAAA,OAEA,OAAA,KAGA,KAAA,IACA,MAAA,gBAAA,SAAA,QAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,UAEA,OAAA,QAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,OACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,OAAA,OAEA,OAAA,QAtDA,GAAA,QAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,IA2DA,OAAA,QAAA,aAAA,MACA,OAAA,OACA,YAAA,YACA,YAAA,SAAA,OAAA,aACA,GAAA,GAAA,eACA,KAAA,EAAA,EAAA,GAAA,EAAA,IAEA,aAAA,GAAA,GAAA,QAAA,IAAA,OAAA,GAAA,MAAA,YAAA,GAAA,IAAA,IAEA,OAAA,eACA,OAAA,aACA,SAAA,mDAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,kBACA,KAAA,GACA,MAAA,mBACA,KAAA,GACA,MAAA,gBACA,KAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,uBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,0BAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,gEAAA,MAAA,KACA,YAAA,iDAAA,MAAA,KACA,SAAA,oEAAA,MAAA,KACA,cAAA,6BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,sCACA,IAAA,0CACA,KAAA,iDAEA,UACA,QAAA,sBACA,QAAA,sBACA,QAAA,sBACA,SAAA,4BACA,SAAA,4BACA,SAAA,KAEA,cACA,OAAA,SAAA,QACA,GAAA,OAAA,UAAA,KAAA,QAAA,MAAA,QAAA,KAAA,QAAA,MAAA,KACA,OAAA,QAAA,OAEA,KAAA,YACA,EAAA,iBACA,EAAA,YACA,GAAA,WACA,EAAA,YACA,GAAA,WACA,EAAA,UACA,GAAA,SACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,UAEA,aAAA,cACA,QAAA,SACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,qDAAA,MAAA,KACA,SAAA,+EAAA,MAAA,KACA,cAAA,+BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KAEA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,gBACA,SAAA,eACA,QAAA,eACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,WACA,EAAA,mBACA,EAAA,QACA,GAAA,WACA,EAAA,MACA,GAAA,SACA,EAAA,UACA,GAAA,aACA,EAAA,MACA,GAAA,SACA,EAAA,WACA,GAAA,cAEA,aAAA,mCAEA,QAAA,SAAA,QACA,GAAA,GAAA,OACA,OAAA,GACA,QACA,GAAA,KAAA,KAAA,MAAA,MAAA,KAAA,KAAA,KAAA,MAAA,MAAA,MACA,KAAA,MAAA,KAAA,KAAA,MAAA,KAAA,KAAA,MAAA,KAAA,MAaA,OAVA,GAAA,GAEA,OADA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA,KAAA,GAAA,MAAA,EACA,MAEA,MAEA,EAAA,IACA,OAAA,OAAA,IAGA,OAAA,QAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,sFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,6BAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,iBACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,cACA,EAAA,WACA,GAAA,cACA,EAAA,UACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,WACA,GAAA,aACA,EAAA,QACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,gBACA,GAAA,cAAA,gBACA,GAAA,UAAA,aACA,IAAA,OAAA,QAAA,OAAA,UACA,GAAA,YAAA,eACA,IAAA,OAAA,UAAA,OAAA,YACA,GAAA,WAAA,cACA,IAAA,OAAA,SAAA,OAAA,WAEA,OAAA,eAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,MAAA,QAAA,aAAA,SACA,OAAA,qFAAA,MAAA,KACA,YAAA,+DAAA,MAAA,KACA,SAAA,8DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,sBACA,SAAA,IACA,QAAA,uBACA,SAAA,qBACA,QAAA,wBACA,SAAA,gCAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,oBACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,qBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,gBACA,GAAA,cAAA,gBACA,GAAA,UAAA,aACA,IAAA,OAAA,QAAA,OAAA,UACA,GAAA,YAAA,eACA,IAAA,OAAA,UAAA,OAAA,YACA,GAAA,WAAA,cACA,IAAA,OAAA,SAAA,OAAA,WAEA,OAAA,eAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,+DAAA,MAAA,KACA,SAAA,8DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,sBACA,SAAA,IACA,QAAA,uBACA,SAAA,qBACA,QAAA,wBACA,SAAA,gCAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,oBACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,qBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,mBAAA,qHAAA,MAAA,KACA,iBAAA,qHAAA,MAAA,KACA,OAAA,SAAA,eAAA,QACA,MAAA,IAAA,KAAA,OAAA,UAAA,EAAA,OAAA,QAAA,UACA,KAAA,kBAAA,eAAA,SAEA,KAAA,oBAAA,eAAA;EAGA,YAAA,oDAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,OAAA,GACA,QAAA,KAAA,KAEA,QAAA,KAAA,MAGA,KAAA,SAAA,OACA,MAAA,OAAA,MAAA,IAAA,cAAA,IAEA,cAAA,gBACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,YACA,QAAA,iBACA,QAAA,gBACA,SAAA,eACA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,+BACA,SACA,MAAA,mCAGA,SAAA,KAEA,SAAA,SAAA,IAAA,KACA,GAAA,QAAA,KAAA,YAAA,KACA,MAAA,KAAA,IAAA,OAMA,OAJA,kBAAA,UACA,OAAA,OAAA,MAAA,MAGA,OAAA,QAAA,KAAA,MAAA,KAAA,EAAA,MAAA,SAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,oBACA,EAAA,YACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,WACA,GAAA,WACA,EAAA,aACA,GAAA,WACA,EAAA,cACA,GAAA,aAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAOA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,gBACA,QAAA,mBACA,SAAA,eACA,QAAA,oBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,gBACA,EAAA,WACA,GAAA,aACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,UACA,EAAA,UACA,GAAA,YACA,EAAA,SACA,GAAA,YAEA,aAAA,uBACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KAAA,IACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,gBACA,QAAA,mBACA,SAAA,eACA,QAAA,oBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,gBACA,EAAA,WACA,GAAA,aACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,UACA,EAAA,UACA,GAAA,YACA,EAAA,SACA,GAAA,YAEA,aAAA,uBACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KAAA,IACA,OAAA,QAAA,YAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,gBACA,QAAA,mBACA,SAAA,eACA,QAAA,oBACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,gBACA,EAAA,WACA,GAAA,aACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,UACA,EAAA,UACA,GAAA,YACA,EAAA,SACA,GAAA,YAEA,aAAA,uBACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KACA,IAAA,EAAA,KAAA,IACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,6FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,gCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,uBACA,IAAA,0BACA,KAAA,sCAEA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,OAAA,GACA,QAAA,SAAA,SAEA,QAAA,SAAA,UAGA,UACA,QAAA,iBACA,QAAA,iBACA,SAAA,eACA,QAAA,iBACA,SAAA,yBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,WACA,EAAA,SACA,GAAA,aACA,EAAA,OACA,GAAA,WACA,EAAA,OACA,GAAA,WACA,EAAA,SACA,GAAA,aACA,EAAA,OACA,GAAA,YAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,gBAAA,8DAAA,MAAA,KACA,YAAA,kDAAA,MAAA,IAEA,OAAA,QAAA,aAAA,MACA,OAAA,2FAAA,MAAA,KACA,YAAA,SAAA,EAAA,QACA,MAAA,QAAA,KAAA,QACA,YAAA,EAAA,SAEA,eAAA,EAAA,UAGA,SAAA,uDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,2BACA,KAAA,kCAEA,UACA,QAAA,WACA,MAAA,aAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,QAAA,WACA,MAAA,gBAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,SAAA,WACA,MAAA,cAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,QAAA,WACA,MAAA,cAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,SAAA,WACA,MAAA,0BAAA,IAAA,KAAA,QAAA,IAAA,IAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,gBACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,IAAA,UACA,GAAA,SACA,GAAA,eAAA,cAAA,iBACA,GAAA,aAAA,aACA,IAAA,OAAA,UAAA,OAAA,YACA,GAAA,YAAA,YAAA,YACA,IAAA,OAAA,SAAA,OAAA,UACA,GAAA,YAAA,YACA,GAAA,UAAA,WAAA,WACA,IAAA,OAAA,OAAA,OAAA,SACA,GAAA,YAAA,QAAA,aACA,IAAA,OAAA,SAAA,OAAA,WAEA,OAAA,eACA,OAAA,KAAA,GAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAEA,SAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,MAAA,QAAA,aAAA,MACA,OAAA,6FAAA,MAAA,KACA,YAAA,6DAAA,MAAA,KACA,SAAA,iEAAA,MAAA,KACA,cAAA,gBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,aACA,QAAA,cACA,SAAA,qBACA,QAAA,aACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,YACA,KAAA,YACA,EAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,WACA,EAAA,oBACA,GAAA,oBACA,EAAA,oBACA,GAAA,qBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,+FAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,sEAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,0BACA,IAAA,6BACA,KAAA,mCACA,EAAA,WACA,GAAA,oBACA,IAAA,uBACA,KAAA,6BAEA,UACA,QAAA,kBACA,QAAA,mBACA,SAAA,gBACA,QAAA,kBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,iBACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,UACA,EAAA,eACA,GAAA,cACA,EAAA,WACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,wEAAA,MAAA,KACA,YAAA,wEAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,qDAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,aAEA,cAGA,UACA,QAAA,kBACA,QAAA,iBACA,SAAA,iBACA,QAAA,kBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,cACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,SACA,EAAA,SACA,GAAA,UAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,SAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,SACA,QAAA,KAAA,MAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,QAQA,SAAA,SACA,QAAA,SACA,SAAA,QAOA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,EACA,QAAA,KACA,IAAA,IACA,MAAA,UAAA,oBAAA,iBACA,KAAA,IACA,MAAA,UAAA,WAAA,UACA,KAAA,KACA,OAAA,SAAA,WAAA,WACA,MACA,KAAA,IACA,MAAA,UAAA,SAAA,OACA,KAAA,KACA,OAAA,SAAA,SAAA,QACA,MACA,KAAA,IACA,MAAA,UAAA,SAAA,OACA,KAAA,KACA,OAAA,SAAA,SAAA,QACA,MACA,KAAA,IACA,MAAA,UAAA,YAAA,UACA,KAAA,KACA,OAAA,SAAA,YAAA,WACA,MACA,KAAA,IACA,MAAA,UAAA,SAAA,OACA,KAAA,KACA,OAAA,SAAA,SAAA,SAIA,MADA,QAAA,aAAA,OAAA,UAAA,IAAA,OAIA,QAAA,cAAA,OAAA,UACA,MAAA,IAAA,OAAA,SAAA,cAAA,QAAA,YAAA,QAAA,OA1CA,GAAA,aAAA,wEAAA,MAAA,KACA,eACA,QAAA,QAAA,SAAA,SAAA,SAAA,SAAA,SACA,YAAA,GAAA,YAAA,GAAA,YAAA,GA0CA,OAAA,QAAA,aAAA,MACA,OAAA,2GAAA,MAAA,KACA,YAAA,uEAAA,MAAA,KACA,SAAA,qEAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,mBACA,IAAA,6BACA,KAAA,mCACA,EAAA,WACA,GAAA,cACA,IAAA,wBACA,KAAA,8BAEA,UACA,QAAA,oBACA,QAAA,sBACA,SAAA,gBACA,QAAA,mBACA,SAAA,4BACA,SAAA,KAEA,cACA,OAAA,YACA,KAAA,YACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,4EAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,yBAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,kBACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,YACA,EAAA,YACA,EAAA,aACA,GAAA,cACA,EAAA,WACA,GAAA,WACA,EAAA,YACA,GAAA,WACA,EAAA,aACA,GAAA,aACA,EAAA,UACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,uFAAA,MAAA,KACA,YAAA,iEAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,qBACA,QAAA,gBACA,SAAA,cACA,QAAA,cACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,YACA,EAAA,oBACA,EAAA,aACA,GAAA,aACA,EAAA,YACA,GAAA,YACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,QACA,GAAA,UAEA,aAAA,eACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,OAAA,KAAA,SAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,iEAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,qBACA,QAAA,gBACA,SAAA,cACA,QAAA,cACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,YACA,EAAA,oBACA,EAAA,aACA,GAAA,aACA,EAAA,YACA,GAAA,YACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,QACA,GAAA,UAEA,aAAA,eACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,OAAA,KAAA,KAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,mDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,QAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,SAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,QAAA,WACA,MAAA,UAAA,IAAA,KAAA,QAAA,IAAA,KAAA,QAEA,SAAA,WACA,MAAA,qBAAA,IAAA,KAAA,QAAA,KAAA,KAAA,QAEA,SAAA,KAEA,cACA,OAAA,SAAA,KACA,MAAA,iBAAA,IACA,gBAEA,MAAA,KAEA,KAAA,SACA,EAAA,eACA,EAAA,YACA,GAAA,aACA,EAAA,YACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,0EAAA,MAAA,KACA,YAAA,4DAAA,MAAA,KACA,SAAA,uCAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,oBACA,KAAA,0BACA,EAAA,WACA,GAAA,aACA,IAAA,gBACA,KAAA,sBAEA,UACA,QAAA,cACA,QAAA,aACA,SAAA,iBACA,QAAA,eACA,SAAA,+BACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,UACA,EAAA,aACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,SAEA,OAAA,SAEA,EAAA,MACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,SAEA,OAAA,SAEA,EAAA,OACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,UAEA,OAAA,WAEA,EAAA,MACA,GAAA,SAAA,QACA,MAAA,KAAA,OACA,SAEA,OAAA,cASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,8EAAA,MAAA,KACA,YAAA,6DAAA,MAAA,KACA,SAAA,uDAAA,MAAA,KACA,cAAA,kCAAA,MAAA,KACA,YAAA,qBAAA,MAAA,KACA,gBACA,GAAA,aACA,IAAA,gBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,UACA,QAAA,UACA,SAAA,WACA,QAAA,UACA,SAAA,mBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,UACA,EAAA,cACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,SACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,WAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAKA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,MACA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,MAEA,OAGA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,eAAA,cACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,QAGA,KAAA,IACA,MAAA,eAAA,YAAA,aACA,KAAA,KAQA,MANA,SADA,IAAA,OACA,MACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,OAEA,MAGA,KAAA,KAMA,MAJA,SADA,IAAA,OACA,MAEA,MAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,UAEA,SAGA,KAAA,KAQA,MANA,SADA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,QAAA,IAAA,OACA,SAEA,UAMA,MAAA,QAAA,aAAA,MACA,OAAA,+FAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,0BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,cACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,KAAA,MAGA,QAAA,KACA,IAAA,IACA,MAAA,WAAA,cAAA,mBAAA,mBACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,QAAA,SACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,QAAA,SACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,OAAA,SACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,OAAA,SACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,OAAA,SACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,OAAA,SACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,SAAA,WACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,SAAA,WACA,KAAA,IACA,MAAA,OAAA,UAAA,cAAA,MAAA,OACA,KAAA,KACA,MAAA,MAAA,UAAA,cAAA,MAAA,QAGA,MAAA,GAGA,QAAA,MAAA,UACA,OAAA,SAAA,GAAA,WAAA,IAAA,YAAA,KAAA,OAAA,aAnCA,GAAA,aAAA,gEAAA,MAAA,IAsCA,OAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,qDAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,gCAAA,MAAA,KACA,YAAA,qBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,cACA,GAAA,gBACA,IAAA,oBACA,KAAA,0BAEA,SAAA,SAAA,MAAA,QAAA,SACA,MAAA,IAAA,MACA,WAAA,EAAA,KAAA,KAEA,WAAA,EAAA,KAAA,MAGA,UACA,QAAA,gBACA,QAAA,oBACA,SAAA,WACA,MAAA,MAAA,KAAA,MAAA,IAEA,QAAA,oBACA,SAAA,WACA,MAAA,MAAA,KAAA,MAAA,IAEA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,KACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,gGAAA,MAAA,KACA,WAAA,4GAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,wBAAA,GACA,GAAA,aAAA,kDAAA,MAAA,IAEA,OAAA,aAAA,EAAA,SAGA,QAAA,qBAAA,GACA,GAAA,UAAA,gEAAA,MAAA,IAEA,OAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,SACA,OAAA,kBACA,YAAA,uBACA,SAAA,oBACA,cAAA,+BAAA,MAAA,KACA,YAAA,+BAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,aACA,QAAA,YACA,QAAA,YACA,SAAA,WACA,MAAA,sBAEA,SAAA,WACA,MAAA,8BAEA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,UACA,EAAA,mBACA,EAAA,OACA,GAAA,UACA,EAAA,MACA,GAAA,SACA,EAAA,KACA,GAAA,QACA,EAAA,OACA,GAAA,UACA,EAAA,OACA,GAAA,WAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,UACA,GAAA,KACA,WACA,GAAA,KACA,UAEA,YAIA,aAAA,0BACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,MACA,IAAA,IACA,IAAA,IACA,IAAA,OACA,MAAA,KAAA,OACA,OAAA,MAEA,OAAA,KACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,6CAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,yBACA,KAAA,gCAEA,SAAA,SAAA,OACA,MAAA,IAAA,MACA,OACA,GAAA,MACA,QACA,GAAA,MACA,OAEA,SAGA,UACA,QAAA,sBACA,QAAA,mBACA,SAAA,kBACA,QAAA,qBACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,eACA,EAAA,iBACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,SACA,EAAA,SACA,GAAA,UACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,QAAA,GACA,MAAA,GAAA,MAAA,IACA,EACA,EAAA,KAAA,GACA,GAEA,EAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,gBAAA,SAAA,mBAAA,kBACA,KAAA,IACA,MAAA,eAAA,SAAA,QACA,KAAA,KACA,MAAA,QAAA,QACA,QAAA,eAAA,SAAA,UAAA,WACA,cACA,OAAA,SAEA,OAAA,QACA,KAAA,KACA,MAAA,QAAA,QACA,QAAA,eAAA,SAAA,gBAAA,iBAEA,OAAA,aACA,KAAA,IACA,MAAA,eACA,QAEA,SAAA,MAAA,MACA,KAAA,KACA,MAAA,QAAA,QACA,cACA,OAAA,QAEA,QAAA,SAAA,OAAA,SACA,cACA,OAAA,QAEA,QAAA,SAAA,MAAA,OACA,KAAA,IACA,MAAA,eACA,UAEA,SAAA,QAAA,QACA,KAAA,KACA,MAAA,QAAA,QACA,cACA,OAAA,UAEA,QAAA,SAAA,SAAA,WACA,cACA,OAAA,UAEA,QAAA,SAAA,QAAA,SACA,KAAA,IACA,MAAA,gBAAA,SAAA,KAAA,KACA,KAAA,KACA,MAAA,QAAA,QACA,QAAA,eAAA,SAAA,KAAA,QAEA,QAAA,eAAA,SAAA,KAAA,QAIA,MAAA,QAAA,aAAA,MACA,OAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,mFAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,wBACA,KAAA,+BAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,iBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,iBACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,cACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,gGAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,2DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,kBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,mBACA,SAAA,iBACA,QAAA,iBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,4BACA,SACA,MAAA,+BAGA,SAAA,KAEA,cACA,OAAA,SAAA,GACA,OAAA,YAAA,KAAA,GAAA,MAAA,MAAA,IAAA,GAEA,KAAA,QACA,EAAA,iBACA,EAAA,YACA,GAAA,YACA,EAAA,SACA,GAAA,SACA,EAAA,YACA,GAAA,YACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,gBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,OACA,EAAA,aACA,GAAA,YACA,IAAA,cACA,KAAA,oBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,KAEA,MAGA,UACA,QAAA,UACA,QAAA,UACA,SAAA,cACA,QAAA,UACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,MACA,KAAA,MACA,EAAA,KACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,WAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,qGAAA,MAAA,KACA,WAAA,sGAAA,MAAA,MAGA,SAAA,eAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,gEAAA,MAAA,KACA,WAAA,iEAAA,MAAA,MAGA,SAAA,gBAAA,KAAA,QACA,aACA,YAEA;MAAA,UAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,kDAAA,MAAA,KACA,SAAA,oBACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,SACA,IAAA,YACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,iBACA,QAAA,iBACA,QAAA,kBACA,SAAA,wBACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,SAAA,GACA,MAAA,yBAAA,KAAA,GACA,EAAA,QAAA,KAAA,MACA,EAAA,MAEA,KAAA,SAAA,GACA,MAAA,4BAAA,KAAA,GACA,EAAA,QAAA,SAAA,UAEA,OAAA,KAAA,GACA,EAAA,QAAA,QAAA,YADA,QAIA,EAAA,iBACA,EAAA,OACA,GAAA,UACA,EAAA,QACA,GAAA,WACA,EAAA,MACA,GAAA,SACA,EAAA,MACA,GAAA,SACA,EAAA,OACA,GAAA,WAEA,aAAA,8BACA,QAAA,SAAA,QACA,MAAA,KAAA,OACA,OAGA,IAAA,OACA,OAAA,MAGA,GAAA,QAAA,KAAA,QAAA,OAAA,KAAA,GAAA,OAAA,MAAA,EACA,MAAA,OAGA,OAAA,MAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yEAAA,MAAA,KACA,YAAA,yEAAA,MAAA,KACA,SAAA,iDAAA,MAAA,KACA,cAAA,iDAAA,MAAA,KACA,YAAA,iDAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,mBACA,QAAA,kBACA,SAAA,iBACA,QAAA,qBACA,SAAA,8BACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,QACA,EAAA,iBACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,QACA,GAAA,QACA,EAAA,WACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,OAWA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,gBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,UACA,IAAA,aACA,EAAA,aACA,GAAA,gBACA,IAAA,mBACA,KAAA,yBAEA,SAAA,SAAA,MACA,MAAA,IAAA,KAAA,KAAA,MAEA,UACA,QAAA,QACA,QAAA,QACA,SAAA,UACA,QAAA,QACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,OACA,KAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,KACA,GAAA,MACA,EAAA,KACA,GAAA,OAEA,aAAA,WACA,QAAA,MACA,cAAA,UACA,KAAA,SAAA,OACA,MAAA,OAAA,WAYA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,qBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,aAAA,gBACA,GAAA,YAAA,eACA,GAAA,UAAA,aACA,GAAA,WAAA,eACA,GAAA,UAAA,cAEA,OAAA,eAAA,OAAA,KAAA,GAAA,OAAA,KAAA,GAGA,QAAA,mBAAA,QACA,GAAA,QAAA,OAAA,OAAA,EAAA,OAAA,QAAA,KACA,OAAA,6BAAA,QACA,KAAA,OAEA,MAAA,OAGA,QAAA,iBAAA,QACA,GAAA,QAAA,OAAA,OAAA,EAAA,OAAA,QAAA,KACA,OAAA,6BAAA,QACA,QAAA,OAEA,SAAA,OAUA,QAAA,6BAAA,QAEA,GADA,OAAA,SAAA,OAAA,IACA,MAAA,QACA,OAAA,CAEA,IAAA,EAAA,OAEA,OAAA,CACA,IAAA,GAAA,OAEA,MAAA,SAAA,GAAA,GAAA,QACA,GAEA,CACA,IAAA,IAAA,OAAA,CAEA,GAAA,WAAA,OAAA,GAAA,WAAA,OAAA,EACA,OACA,6BADA,IAAA,UACA,WAEA,WACA,GAAA,IAAA,OAAA,CAEA,KAAA,QAAA,IACA,QAAA,EAEA,OAAA,6BAAA,QAIA,MADA,SAAA,IACA,4BAAA,QAIA,MAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,+DAAA,MAAA,KACA,SAAA,mEAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,cACA,IAAA,iBACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,SAAA,IACA,QAAA,eACA,SAAA,eACA,QAAA,mBACA,SAAA,WAEA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,SACA,MAAA,4BAIA,cACA,OAAA,kBACA,KAAA,gBACA,EAAA,kBACA,EAAA,oBACA,GAAA,cACA,EAAA,oBACA,GAAA,aACA,EAAA,oBACA,GAAA,UACA,EAAA,oBACA,GAAA,WACA,EAAA,oBACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QAeA,QAAA,kBAAA,OAAA,cAAA,IAAA,UACA,MAAA,eACA,kBAEA,SAAA,kBAAA,kBAIA,QAAA,mBAAA,OAAA,cAAA,IAAA,UACA,MAAA,eAAA,MAAA,KAAA,GAAA,SAAA,MAAA,KAAA,GAAA,MAAA,KAAA,GAGA,QAAA,SAAA,QACA,MAAA,QAAA,KAAA,GAAA,OAAA,IAAA,GAAA,OAGA,QAAA,OAAA,KACA,MAAA,OAAA,KAAA,MAAA,KAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,OAAA,KAAA,OACA,OAAA,kBAAA,OAAA,cAAA,IAAA,GAAA,UACA,cACA,QAAA,QAAA,QAAA,MAAA,KAAA,GAAA,MAAA,KAAA,IAEA,SACA,OAAA,MAAA,KAAA,GAEA,QAAA,QAAA,QAAA,MAAA,KAAA,GAAA,MAAA,KAAA,IAKA,QAAA,iBAAA,OAAA,QACA,GAAA,YAAA,KAAA,OAAA,QAAA,cACA,QAAA,SAAA,OAAA,MAEA,OAAA,YAAA,QAAA,QAAA,UAAA,EAAA,QAAA,OAAA,GAAA,IArDA,GAAA,QACA,EAAA,wBACA,GAAA,0BACA,EAAA,2BACA,GAAA,4BACA,EAAA,qBACA,GAAA,sBACA,EAAA,uBACA,GAAA,4BACA,EAAA,mBACA,GAAA,oBAEA,SAAA,2FAAA,MAAA,IA4CA,OAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,gBACA,cAAA,8BAAA,MAAA,KACA,YAAA,iBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,mCACA,KAAA,yCACA,EAAA,aACA,GAAA,wBACA,IAAA,mCACA,KAAA,yCAEA,UACA,QAAA,gBACA,QAAA,aACA,SAAA,UACA,QAAA,aACA,SAAA,qBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,iBACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,UACA,EAAA,kBACA,GAAA,WAEA,aAAA,cACA,QAAA,SAAA,QACA,MAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QASA,QAAA,QAAA,KAAA,OAAA,eACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,eACA,OAAA,KAAA,GAAA,KAAA,OAAA,MAAA,GAAA,MAAA,GAEA,OAAA,KAAA,GAAA,KAAA,OAAA,MAAA,GAAA,MAAA,GAIA,QAAA,wBAAA,OAAA,cAAA,KACA,MAAA,QAAA,IAAA,OAAA,MAAA,KAAA,OAAA,eAlBA,GAAA,QACA,GAAA,gCACA,GAAA,gCACA,GAAA,4BACA,GAAA,gCACA,GAAA,uBAgBA,OAAA,QAAA,aAAA,MACA,OAAA,uGAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,0EAAA,MAAA,KACA,cAAA,kBAAA,MAAA,KACA,YAAA,kBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,uBACA,IAAA,2BACA,KAAA,kCAEA,UACA,QAAA,uBACA,QAAA,oBACA,SAAA,qBACA,QAAA,sBACA,SAAA,gCACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,iBACA,EAAA,SACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,OACA,GAAA,wBAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,YACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,gBACA,QAAA,eACA,SAAA,eACA,QAAA,gBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,8BACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,iCAGA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,UACA,EAAA,kBACA,EAAA,SACA,GAAA,YACA,EAAA,MACA,GAAA,UACA,EAAA,MACA,GAAA,UACA,EAAA,QACA,GAAA,YACA,EAAA,SACA,GAAA,aAEA,aAAA,8BACA,QAAA,SAAA,QACA,GAAA,WAAA,OAAA,GACA,YAAA,OAAA,GACA,OAAA,KAAA,OACA,OAAA,MACA,IAAA,YACA,OAAA,MACA,YAAA,IAAA,GAAA,YACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,UACA,OAAA,MACA,IAAA,WAAA,IAAA,UACA,OAAA,MAEA,OAAA,OAGA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,yFAAA,MAAA,KACA,YAAA,yEAAA,MAAA,KACA,SAAA,wEAAA,MAAA,KACA,cAAA,2CAAA,MAAA,KACA,YAAA,wBAAA,MAAA,KACA,gBACA,GAAA,aACA,IAAA,gBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,aACA,QAAA,YACA,SAAA,WACA,QAAA,cACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,aACA,KAAA,WACA,EAAA,gBACA,EAAA,eACA,GAAA,cACA,EAAA,eACA,GAAA,cACA,EAAA,YACA,GAAA,WACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,WAEA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,SACA,GAAA,KACA,SACA,GAAA,KACA,eACA,GAAA,KACA,aAEA,cASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,wFAAA,MAAA,KACA,YAAA,gFAAA,MAAA,KACA,SAAA,uDAAA,MAAA,KACA,cAAA,kCAAA,MAAA,KACA,YAAA,qBAAA,MAAA,KACA,gBACA,GAAA,eACA,IAAA,kBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,UACA,QAAA,aACA,SAAA,WACA,QAAA,WACA,SAAA,mBACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,YACA,EAAA,QACA,EAAA,WACA,GAAA,YACA,EAAA,SACA,GAAA,SACA,EAAA,UACA,GAAA,UACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,YAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,SAAA,SAAA,MAEA,MAAA,GAAA,KACA,SACA,GAAA,KACA,QACA,GAAA,KACA,SACA,GAAA,KACA,WAEA,UAGA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,6CAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,yBACA,KAAA,gCAEA,SAAA,SAAA,OACA,MAAA,IAAA,MACA,OACA,GAAA,MACA,YACA,GAAA,MACA,SAEA,SAGA,UACA,QAAA,sBACA,QAAA,kBACA,SAAA,kBACA,QAAA,sBACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,gBACA,EAAA,gBACA,EAAA,UACA,GAAA,WACA,EAAA,QACA,GAAA,SACA,EAAA,SACA,GAAA,UACA,EAAA,UACA,GAAA,WACA,EAAA,UACA,GAAA,YAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KACA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAEA,OAAA,QAAA,aAAA,MACA,OAAA,2FAAA,MAAA,KACA,YAAA,mDAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,8BAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,WACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,kBACA,QAAA,sBACA,SAAA,gBACA,QAAA,mBACA,SAAA,6BACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,kBACA,EAAA,kBACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,SACA,EAAA,OACA,GAAA,OACA,EAAA,UACA,GAAA,WAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,gCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,wBACA,KAAA,8BAEA,UACA,QAAA,iBACA,QAAA,oBACA,SAAA,gBACA,QAAA,iBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,eACA,EAAA,gBACA,EAAA,aACA,GAAA,cACA,EAAA,UACA,GAAA,WACA,EAAA,SACA,GAAA,WACA,EAAA,WACA,GAAA,aACA,EAAA,SACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,YACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,IACA,EAAA,KAEA,WACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAGA,OAAA,QAAA,aAAA,MACA,OAAA,uFAAA,MAAA,KACA,YAAA,uEAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,0CAAA,MAAA,KACA,YAAA,6BAAA,MAAA,KACA,gBACA,GAAA,eACA,IAAA,kBACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,SAAA,SAAA,QACA,MAAA,QAAA,QAAA,gBAAA,SAAA,OACA,MAAA,WAAA,UAGA,WAAA,SAAA,QACA,MAAA,QAAA,QAAA,MAAA,SAAA,OACA,MAAA,WAAA,UAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,SACA,GAAA,KACA,SACA,GAAA,KACA,OAEA,QAGA,UACA,QAAA,UACA,QAAA,YACA,SAAA,qBACA,QAAA,YACA,SAAA,oBACA,SAAA,KAEA,cACA,OAAA,OACA,KAAA,WACA,EAAA,WACA,EAAA,WACA,GAAA,WACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,SACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,WAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,qBAAA,6DAAA,MAAA,KACA,uBAAA,kDAAA,MAAA,IAEA,OAAA,QAAA,aAAA,MACA,OAAA,0FAAA,MAAA,KACA,YAAA,SAAA,EAAA,QACA,MAAA,QAAA,KAAA,QACA,uBAAA,EAAA,SAEA,oBAAA,EAAA,UAGA,SAAA,6DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,kBACA,QAAA,iBACA,SAAA,eACA,QAAA,mBACA,SAAA,2BACA,SAAA,KAEA,cACA,OAAA,UACA,KAAA,aACA,EAAA,oBACA,EAAA,aACA,GAAA,aACA,EAAA,UACA,GAAA,SACA,EAAA,UACA,GAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WAEA,aAAA,kBACA,QAAA,SAAA,QACA,MAAA,SAAA,IAAA,QAAA,IAAA,QAAA,QAAA,GAAA,MAAA,OAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,qDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,oBACA,QAAA,uBACA,SAAA,mBACA,QAAA,oBACA,SAAA,gCACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,eACA,EAAA,eACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,WACA,EAAA,UACA,GAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,SACA,GAAA,SAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QAIA,QAAA,QAAA,GACA,MAAA,GAAA,EAAA,IAAA,EAAA,GAAA,MAAA,EAAA,IAAA,KAAA,EAGA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,SAAA,QACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,SAAA,QACA,KAAA,IACA,MAAA,eAAA,UAAA,SACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,UAAA,SACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,WAAA,WACA,KAAA,KACA,MAAA,SAAA,OAAA,QAAA,OAAA,QArBA,GAAA,kBAAA,mGAAA,MAAA,KACA,iBAAA,qGAAA,MAAA,IAwBA,OAAA,QAAA,aAAA,MACA,OAAA,SAAA,eAAA,QACA,MAAA,SAAA,KAAA,QACA,iBAAA,eAAA,SAEA,iBAAA,eAAA,UAGA,YAAA,kDAAA,MAAA,KACA,SAAA,6DAAA,MAAA,KACA,cAAA,0BAAA,MAAA,KACA,YAAA,sBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,eACA,SAAA,kBACA,QAAA,iBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,2BACA,KAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,wBACA,SACA,MAAA,2BAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,eACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,UACA,GAAA,UACA,EAAA,MACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,2FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,iFAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,yBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,gCACA,KAAA,uCAEA,UACA,QAAA,eACA,QAAA,iBACA,SAAA,eACA,QAAA,gBACA,SAAA,WACA,MAAA,KAAA,KAAA,OAAA,IAAA,KAAA,MACA,wBACA,yBAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,WACA,EAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,UAOA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,2FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,iFAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,yBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,wBACA,IAAA,2BACA,KAAA,kCAEA,UACA,QAAA,eACA,QAAA,iBACA,SAAA,eACA,QAAA,gBACA,SAAA,WACA,MAAA,KAAA,KAAA,OAAA,IAAA,KAAA,MACA,wBACA,yBAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,QACA,EAAA,WACA,EAAA,YACA,GAAA,aACA,EAAA,WACA,GAAA,WACA,EAAA,SACA,GAAA,UACA,EAAA,SACA,GAAA,WACA,EAAA,SACA,GAAA,WAEA,aAAA,WACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,SACA,GAAA,MACA,GAAA,OACA,GAAA,OACA,GAAA,OAEA,UAAA,GAKA,QAJA,OAAA,KAAA,IAAA,QAAA,KAAA,OAAA,MAAA,KACA,UAAA,QAGA,OAAA,UAAA,OAAA,KAGA,MAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,gEAAA,MAAA,KACA,SAAA,kDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,mBACA,KAAA,0BAEA,UACA,QAAA,cACA,QAAA,gBACA,SAAA,eACA,QAAA,eACA,SAAA,uBACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,aACA,EAAA,iBACA,EAAA,WACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,OACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,QACA,GAAA,wBAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,QAAA,KAAA,KACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,KAAA,KAAA,GAAA,IAAA,MAAA,GAAA,MAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,KAAA,GAAA,IAAA,KAAA,IAAA,KAAA,IAAA,MAAA,GAAA,MAAA,GAGA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,cAAA,sBAAA,sBACA,GAAA,iBACA,GAAA,gBACA,GAAA,uBACA,GAAA,eAEA,OAAA,MAAA,IACA,cAAA,SAAA,SAGA,OAAA,IAAA,OAAA,OAAA,MAAA,QAIA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,kFAAA,MAAA,KACA,WAAA,oFAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,wBAAA,EAAA,QACA,GAAA,cACA,WAAA,qDAAA,MAAA,KACA,WAAA,oDAAA,MAAA,MAGA,SAAA,iCAAA,KAAA,QACA,aACA,YAEA,OAAA,aAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,gEAAA,MAAA,KACA,WAAA,gEAAA,MAAA,MAGA,SAAA,iDAAA,KAAA,QACA,aACA,YAEA,OAAA,UAAA,UAAA,EAAA,OAGA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,uBACA,SAAA,oBACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,aAAA,QAAA,QAAA,QAAA,QAAA,YAAA,QAAA,QAAA,QAAA,QAAA,QAAA,QAAA,SACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,iBACA,QAAA,gBACA,QAAA,eACA,SAAA,WACA,MAAA,KAAA,KAAA,MAAA,mBAAA,mBAEA,SAAA,SAAA,KACA,GAAA,IAAA,SAAA,KAAA,OAcA,MAAA,KAAA,KAAA,MACA,mBAEA,iBAhBA,QAAA,KAAA,OACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,4BAUA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,WACA,EAAA,mBACA,EAAA,uBACA,GAAA,uBACA,EAAA,MACA,GAAA,uBACA,EAAA,OACA,GAAA,uBACA,EAAA,QACA,GAAA,uBACA,EAAA,MACA,GAAA,wBAGA,cAAA,wBACA,KAAA,SAAA,OACA,MAAA,iBAAA,KAAA,QAGA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,OACA,GAAA,KACA,MAEA,UAIA,aAAA,mBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,MAAA,QAAA,IACA,KAAA,IACA,MAAA,QAAA,KACA,KAAA,IACA,IAAA,IACA,MAAA,QAAA,IACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QAIA,QAAA,QAAA,GACA,MAAA,GAAA,GAAA,EAAA,EAGA,QAAA,WAAA,OAAA,cAAA,IAAA,UACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,gBAAA,SAAA,aAAA,eACA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,eAAA,SAAA,SAAA,SAAA,SACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,SAAA,SAEA,OAAA,UAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,MACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,MAAA,OAEA,OAAA,OAGA,KAAA,IACA,MAAA,gBAAA,SAAA,SAAA,UACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,UAAA,YAEA,OAAA,UAGA,KAAA,IACA,MAAA,gBAAA,SAAA,MAAA,OACA,KAAA,KACA,MAAA,gBAAA,SACA,QAAA,OAAA,QAAA,OAAA,SAEA,OAAA,SAtDA,GAAA,QAAA,oFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,IA2DA,OAAA,QAAA,aAAA,MACA,OAAA,OACA,YAAA,YACA,YAAA,SAAA,OAAA,aACA,GAAA,GAAA,eACA,KAAA,EAAA,EAAA,GAAA,EAAA,IAEA,aAAA,GAAA,GAAA,QAAA,IAAA,OAAA,GAAA,MAAA,YAAA,GAAA,IAAA,IAEA,OAAA,eACA,OAAA,aACA,SAAA,sDAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,aACA,GAAA,eACA,IAAA,kBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,gBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,IAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,mBACA,KAAA,GACA,MAAA,iBACA,KAAA,GACA,MAAA,oBAGA,QAAA,eACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,yBAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,WAAA,OAAA,cAAA,KACA,GAAA,QAAA,OAAA,GACA,QAAA,KACA,IAAA,IACA,MAAA,eAAA,aAAA,YACA,KAAA,KAUA,MARA,SADA,IAAA,OACA,SACA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,OACA,SAEA,OAGA,KAAA,IACA,MAAA,eAAA,UAAA,SACA,KAAA,KAUA,MARA,SADA,IAAA,OACA,MACA,IAAA,OACA,MACA,IAAA,QAAA,IAAA,OACA,MAEA,IAGA,KAAA,KAMA,MAJA,SADA,IAAA,OACA,MAEA,KAGA,KAAA,KAUA,MARA,SADA,IAAA,OACA,QACA,IAAA,OACA,SACA,IAAA,QAAA,IAAA,OACA,SAEA,SAGA,KAAA,KAUA,MARA,SADA,IAAA,OACA,OACA,IAAA,OACA,OACA,IAAA,QAAA,IAAA,OACA,OAEA;EAMA,MAAA,QAAA,aAAA,MACA,OAAA,wFAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,sDAAA,MAAA,KACA,cAAA,qCAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,gBACA,QAAA,gBAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,uBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,MAAA,sBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,qBAGA,QAAA,iBACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,yBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,4BAGA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,WACA,EAAA,eACA,EAAA,UACA,GAAA,UACA,EAAA,UACA,GAAA,UACA,EAAA,SACA,GAAA,UACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAUA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,gFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,4DAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,mBAAA,MAAA,KACA,SAAA,SAAA,OACA,MAAA,IAAA,MAAA,KAAA,MAEA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,cACA,QAAA,gBACA,SAAA,eACA,QAAA,cACA,SAAA,wBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,aACA,EAAA,eACA,EAAA,aACA,GAAA,YACA,EAAA,UACA,GAAA,SACA,EAAA,WACA,GAAA,UACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,aACA,OACA,GAAA,cAAA,gBACA,IAAA,QAAA,SAAA,UACA,GAAA,YAAA,eACA,IAAA,MAAA,OAAA,QACA,IAAA,MAAA,OAAA,QACA,IAAA,QAAA,SAAA,UACA,IAAA,SAAA,SAAA,WAEA,uBAAA,SAAA,OAAA,SACA,MAAA,KAAA,OAAA,QAAA,GAAA,QAAA,GAAA,GAAA,OAAA,QAAA,GAAA,QAAA,IAEA,UAAA,SAAA,OAAA,cAAA,KACA,GAAA,SAAA,WAAA,MAAA,IACA,OAAA,KAAA,IAAA,OACA,cAAA,QAAA,GAAA,QAAA,GAEA,OAAA,IAAA,WAAA,uBAAA,OAAA,UAKA,OAAA,QAAA,aAAA,WACA,QAAA,SAAA,UAAA,OAAA,QAAA,MAAA,MAAA,MAAA,SAAA,YAAA,UAAA,WAAA,YACA,aAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,OAAA,OAAA,OAAA,OAAA,QACA,UAAA,SAAA,YAAA,SAAA,QAAA,WAAA,QAAA,UACA,eAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,QACA,aAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,qBACA,KAAA,GACA,MAAA,oBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,cACA,SAAA,WACA,GAAA,eACA,2BACA,+BACA,4BACA,0BACA,8BACA,2BACA,2BAEA,OAAA,cAAA,KAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,mBACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,MACA,GAAA,WAAA,UACA,EAAA,QACA,GAAA,WAAA,UACA,EAAA,SACA,GAAA,WAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,aACA,OACA,GAAA,cAAA,gBACA,IAAA,QAAA,SAAA,UACA,GAAA,YAAA,eACA,IAAA,MAAA,OAAA,QACA,IAAA,MAAA,OAAA,QACA,IAAA,QAAA,SAAA,UACA,IAAA,SAAA,SAAA,WAEA,uBAAA,SAAA,OAAA,SACA,MAAA,KAAA,OAAA,QAAA,GAAA,QAAA,GAAA,GAAA,OAAA,QAAA,GAAA,QAAA,IAEA,UAAA,SAAA,OAAA,cAAA,KACA,GAAA,SAAA,WAAA,MAAA,IACA,OAAA,KAAA,IAAA,OACA,cAAA,QAAA,GAAA,QAAA,GAEA,OAAA,IAAA,WAAA,uBAAA,OAAA,UAKA,OAAA,QAAA,aAAA,MACA,QAAA,SAAA,UAAA,OAAA,QAAA,MAAA,MAAA,MAAA,SAAA,YAAA,UAAA,WAAA,YACA,aAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,MAAA,OAAA,OAAA,OAAA,OAAA,QACA,UAAA,UAAA,aAAA,SAAA,QAAA,WAAA,QAAA,UACA,eAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,QACA,aAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MACA,gBACA,GAAA,OACA,IAAA,QACA,EAAA,eACA,GAAA,eACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,eACA,QAAA,eAEA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,MAAA,sBACA,KAAA,GACA,MAAA,oBACA,KAAA,GACA,MAAA,qBACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,oBAGA,QAAA,cACA,SAAA,WACA,GAAA,eACA,4BACA,gCACA,4BACA,0BACA,8BACA,2BACA,2BAEA,OAAA,cAAA,KAAA,QAEA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,SACA,EAAA,mBACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,WAAA,UACA,GAAA,WAAA,UACA,EAAA,MACA,GAAA,WAAA,UACA,EAAA,QACA,GAAA,WAAA,UACA,EAAA,SACA,GAAA,WAAA,WAEA,aAAA,YACA,QAAA,MACA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,wFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,oDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,YACA,QAAA,eACA,QAAA,YACA,SAAA,UACA,SAAA,sBACA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,eACA,EAAA,iBACA,EAAA,WACA,GAAA,aACA,EAAA,WACA,GAAA,YACA,EAAA,SACA,GAAA,WACA,EAAA,WACA,GAAA,aACA,EAAA,SACA,GAAA,SAEA,aAAA,eACA,QAAA,SAAA,QACA,GAAA,GAAA,OAAA,GACA,OAAA,OAAA,OAAA,IAAA,IAAA,IACA,IAAA,EAAA,IACA,IAAA,EAAA,IACA,IAAA,EAAA,IAAA,GACA,OAAA,QAAA,QAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QA0BA,MAAA,QAAA,aAAA,MACA,OAAA,0FAAA,MAAA,KACA,YAAA,0FAAA,MAAA,KACA,SAAA,8FAAA,MAAA,KACA,cAAA,mDAAA,MAAA,KACA,YAAA,sBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,kBACA,KAAA,yBAEA,UACA,QAAA,aACA,QAAA,YACA,SAAA,WACA,QAAA,cACA,SAAA,yBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,UACA,EAAA,oBACA,EAAA,cACA,GAAA,gBACA,EAAA,gBACA,GAAA,eACA,EAAA,WACA,GAAA,aACA,EAAA,YACA,GAAA,cACA,EAAA,aACA,GAAA,eAYA,aAAA,aACA,QAAA,SAAA,QACA,MAAA,QAAA,OAMA,SAAA,SAAA,MACA,MAAA,OAAA,GAAA,IAAA,KACA,QACA,MAAA,IAAA,IAAA,KACA,WACA,MAAA,IAAA,IAAA,KACA,WACA,MAAA,IAAA,IAAA,KACA,QACA,MAAA,IAAA,IAAA,KACA,QACA,MAAA,GAAA,GAAA,KACA,SADA,QAIA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,oGAAA,MAAA,KACA,YAAA,yEAAA,MAAA,KACA,SAAA,iDAAA,MAAA,KACA,cAAA,8CAAA,MAAA,KACA,YAAA,yBAAA,MAAA,KACA,gBACA,GAAA,kBACA,IAAA,cACA,EAAA,aACA,GAAA,cACA,IAAA,sBACA,KAAA,kCAEA,SAAA,SAAA,MACA,MAAA,IAAA,KACA,aAEA,cAGA,UACA,QAAA,mBACA,QAAA,qBACA,SAAA,qBACA,QAAA,wBACA,SAAA,6BACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,YACA,EAAA,eACA,EAAA,SACA,GAAA,UACA,EAAA,YACA,GAAA,aACA,EAAA,QACA,GAAA,SACA,EAAA,UACA,GAAA,WACA,EAAA,OACA,GAAA,aAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,0FAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,wBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,YACA,GAAA,eACA,IAAA,kBACA,KAAA,0BAEA,UACA,QAAA,iBACA,QAAA,gBACA,SAAA,eACA,QAAA,kBACA,SAAA,0BACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,mBACA,EAAA,gBACA,EAAA,eACA,GAAA,YACA,EAAA,aACA,GAAA,UACA,EAAA,aACA,GAAA,UACA,EAAA,cACA,GAAA,WACA,EAAA,aACA,GAAA,WAEA,aAAA,UACA,QAAA,SAAA,QACA,MAAA,SAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,GAAA,WACA,EAAA,QACA,EAAA,QACA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,EAAA,OACA,EAAA,OACA,GAAA,OACA,GAAA,OAEA,EAAA,QACA,EAAA,QACA,IAAA,QAEA,EAAA,OAEA,EAAA,QACA,GAAA,QACA,GAAA,QAEA,GAAA,QACA,GAAA,QAGA,OAAA,QAAA,aAAA,MACA,OAAA,6EAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,wDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,kBACA,QAAA,kBACA,SAAA,2BACA,QAAA,WACA,SAAA,+BACA,SAAA,KAEA,cACA,OAAA,WACA,KAAA,UACA,EAAA,gBACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,SACA,GAAA,QACA,EAAA,UACA,GAAA,UAEA,aAAA,wCACA,QAAA,SAAA,QACA,GAAA,IAAA,OACA,MAAA,QAAA,OAEA,IAAA,GAAA,OAAA,GACA,EAAA,OAAA,IAAA,EACA,EAAA,QAAA,IAAA,IAAA,IAEA,OAAA,SAAA,SAAA,IAAA,SAAA,IAAA,SAAA,KAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,YACA,OAAA,wFAAA,MAAA,KACA,YAAA,wFAAA,MAAA,KACA,SAAA,kDAAA,MAAA,KACA,cAAA,kDAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,eACA,QAAA,cACA,SAAA,cACA,QAAA,gBACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,iBACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,cACA,EAAA,MACA,GAAA,WACA,EAAA,QACA,GAAA,YACA,EAAA,QACA,GAAA,aAEA,MACA,IAAA,EACA,IAAA,QAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,OACA,OAAA,kFAAA,MAAA,KACA,YAAA,kFAAA,MAAA,KACA,SAAA,kDAAA,MAAA,KACA,cAAA,kDAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,uBAEA,UACA,QAAA,cACA,QAAA,cACA,SAAA,cACA,QAAA,eACA,SAAA,cACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,SACA,EAAA,OACA,EAAA,QACA,GAAA,WACA,EAAA,OACA,GAAA,cACA,EAAA,MACA,GAAA,WACA,EAAA,QACA,GAAA,YACA,EAAA,QACA,GAAA,aAEA,MACA,IAAA,EACA,IAAA,QASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,QAAA,QAAA,KAAA,KACA,GAAA,OAAA,KAAA,MAAA,IACA,OAAA,KAAA,KAAA,GAAA,IAAA,MAAA,GAAA,MAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,KAAA,GAAA,IAAA,KAAA,IAAA,KAAA,IAAA,MAAA,GAAA,MAAA,GAGA,QAAA,wBAAA,OAAA,cAAA,KACA,GAAA,SACA,GAAA,yBACA,GAAA,sBACA,GAAA,gBACA,GAAA,wBACA,GAAA,iBAEA,OAAA,MAAA,IACA,cAAA,UAAA,UAEA,MAAA,IACA,cAAA,SAAA,SAGA,OAAA,IAAA,OAAA,OAAA,MAAA,QAIA,QAAA,mBAAA,EAAA,QACA,GAAA,SACA,WAAA,iGAAA,MAAA,KACA,WAAA,yFAAA,MAAA,MAGA,SAAA,gBAAA,KAAA,QACA,aACA,YAEA,OAAA,QAAA,UAAA,EAAA,SAGA,QAAA,qBAAA,EAAA,QACA,GAAA,WACA,WAAA,0DAAA,MAAA,KACA,WAAA,0DAAA,MAAA,KACA,SAAA,4DAAA,MAAA,MAGA,SAAA,qBAAA,KAAA,QACA,aACA,sCAAA,KAAA,QACA,WACA,YAEA,OAAA,UAAA,UAAA,EAAA,OAGA,QAAA,sBAAA,KACA,MAAA,YACA,MAAA,KAAA,KAAA,KAAA,KAAA,QAAA,IAAA,IAAA,QAIA,MAAA,QAAA,aAAA,MACA,OAAA,kBACA,YAAA,yDAAA,MAAA,KACA,SAAA,oBACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,iBACA,IAAA,qBACA,KAAA,4BAEA,UACA,QAAA,qBAAA,cACA,QAAA,qBAAA,YACA,QAAA,qBAAA,WACA,SAAA,qBAAA,cACA,SAAA,WACA,OAAA,KAAA,OACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,sBAAA,oBAAA,KAAA,KACA,KAAA,GACA,IAAA,GACA,IAAA,GACA,MAAA,sBAAA,qBAAA,KAAA,QAGA,SAAA,KAEA,cACA,OAAA,QACA,KAAA,UACA,EAAA,kBACA,EAAA,uBACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,OACA,GAAA,uBACA,EAAA,SACA,GAAA,uBACA,EAAA,MACA,GAAA,wBAKA,SAAA,SAAA,MACA,MAAA,GAAA,KACA,OACA,GAAA,KACA,QACA,GAAA,KACA,MAEA,UAIA,aAAA,iBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,IAAA,IACA,IAAA,IACA,MAAA,QAAA,IACA,KAAA,IACA,MAAA,QAAA,KACA,SACA,MAAA,UAIA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,kFAAA,MAAA,KACA,YAAA,kDAAA,MAAA,KACA,SAAA,uDAAA,MAAA,KACA,cAAA,8BAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,cACA,IAAA,iBACA,KAAA,wBAEA,UACA,QAAA,uBACA,QAAA,mBACA,SAAA,2BACA,QAAA,sBACA,SAAA,mCACA,SAAA,KAEA,cACA,OAAA,gBACA,KAAA,oBACA,EAAA,SACA,EAAA,aACA,GAAA,YACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,SACA,GAAA,QACA,EAAA,UACA,GAAA,UAEA,MACA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,MACA,OAAA,qGAAA,MAAA,KACA,YAAA,8DAAA,MAAA,KACA,SAAA,yDAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,uBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,QACA,EAAA,aACA,GAAA,oBACA,IAAA,uBACA,KAAA,6BACA,EAAA,YACA,GAAA,aACA,IAAA,gBACA,KAAA,sBAEA,UACA,QAAA,mBACA,QAAA,oBACA,SAAA,yBACA,QAAA,mBACA,SAAA,yBACA,SAAA,KAEA,cACA,OAAA,SACA,KAAA,WACA,EAAA,WACA,EAAA,WACA,GAAA,UACA,EAAA,UACA,GAAA,SACA,EAAA,WACA,GAAA,UACA,EAAA,YACA,GAAA,WACA,EAAA,UACA,GAAA,UAEA,aAAA,UACA,QAAA,SAAA,QACA,MAAA,SAEA,MACA,IAAA,EACA,IAAA,OASA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,UACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,mBACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,oBAEA,SAAA,SAAA,KAAA,QACA,GAAA,IAAA,IAAA,KAAA,MACA,OAAA,KAAA,GACA,KACA,IAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KAEA,MAGA,UACA,QAAA,WACA,MAAA,KAAA,KAAA,UAAA,aAAA,UAEA,QAAA,WACA,MAAA,KAAA,KAAA,UAAA,aAAA,UAEA,QAAA,WACA,MAAA,KAAA,KAAA,UAAA,aAAA,UAEA,SAAA,WACA,GAAA,aAAA,MAGA,OAFA,aAAA,SAAA,QAAA,QACA,OAAA,KAAA,OAAA,YAAA,QAAA,OAAA,MAAA,MACA,IAAA,KAAA,UAAA,OAAA,UAAA,OAAA,YAEA,SAAA,WACA,GAAA,aAAA,MAGA,OAFA,aAAA,SAAA,QAAA,QACA,OAAA,KAAA,OAAA,YAAA,OAAA,MAAA,MACA,IAAA,KAAA,UAAA,OAAA,UAAA,OAAA,YAEA,SAAA,MAEA,aAAA,iBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,MAAA,QAAA,GACA,KAAA,IACA,MAAA,QAAA,GACA,KAAA,IACA,IAAA,IACA,MAAA,QAAA,GACA,SACA,MAAA,UAGA,cACA,OAAA,MACA,KAAA,MACA,EAAA,KACA,EAAA,MACA,GAAA,OACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,OAEA,MAEA,IAAA,EACA,IAAA,OAQA,SAAA,SACA,QAAA,SACA,SAAA,QACA,MAAA,QAAA,aAAA,SACA,OAAA,wCAAA,MAAA,KACA,YAAA,yCAAA,MAAA,KACA,SAAA,8BAAA,MAAA,KACA,cAAA,uBAAA,MAAA,KACA,YAAA,gBAAA,MAAA,KACA,gBACA,GAAA,QACA,IAAA,UACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,mBACA,EAAA,aACA,GAAA,aACA,IAAA,eACA,KAAA,oBAEA,SAAA,SAAA,KAAA,QACA,GAAA,IAAA,IAAA,KAAA,MACA,OAAA,KAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KACA,KAAA,GACA,KAEA,MAGA,UACA,QAAA,SACA,QAAA,SACA,SAAA,YACA,QAAA,SACA,SAAA,YACA,SAAA,KAEA,aAAA,iBACA,QAAA,SAAA,OAAA,QACA,OAAA,QACA,IAAA,IACA,IAAA,IACA,IAAA,MACA,MAAA,QAAA,GACA,KAAA,IACA,MAAA,QAAA,GACA,KAAA,IACA,IAAA,IACA,MAAA,QAAA,GACA,SACA,MAAA,UAGA,cACA,OAAA,MACA,KAAA,MACA,EAAA,KACA,EAAA,MACA,GAAA,OACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,MACA,EAAA,MACA,GAAA,OACA,EAAA,KACA,GAAA,WAKA,OAAA,OAAA,MAyBA,UACA,OAAA,QAAA,OACA,kBAAA,SAAA,OAAA,KACA,OAAA,SAAA,SAAA,QAAA,QAAA,QAMA,MALA,QAAA,QAAA,OAAA,UAAA,OAAA,SAAA,YAAA,IAEA,YAAA,OAAA,iBAGA,SAEA,YAAA,IAEA,cAEA,KAAA","file":"combined.min.js","sourcesContent":["var app = angular.module('app', ['ngProgress', 'ngResource']);\n\napp.config(function () {\n  SC.initialize({\n    client_id: \"2553d3948bd996a6f522c024161d134b\",\n    redirect_uri: \"http://example.com/callback.html\"\n  });\n});","//! moment.js\n//! version : 2.8.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (undefined) {\n    /************************************\n        Constants\n    ************************************/\n\n    var moment,\n        VERSION = '2.8.4',\n        // the global-scope this is NOT the global object in Node.js\n        globalScope = typeof global !== 'undefined' ? global : this,\n        oldGlobalMoment,\n        round = Math.round,\n        hasOwnProperty = Object.prototype.hasOwnProperty,\n        i,\n\n        YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n\n        // internal storage for locale config files\n        locales = {},\n\n        // extra moment internal properties (plugins register props here)\n        momentProperties = [],\n\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module && module.exports),\n\n        // ASP.NET json date format regex\n        aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n        aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\n        // format tokens\n        formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n\n        // parsing token regexes\n        parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n        parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n        parseTokenOneToFourDigits = /\\d{1,4}/, // 0 - 9999\n        parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n        parseTokenDigits = /\\d+/, // nonzero number of digits\n        parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.\n        parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        parseTokenT = /T/i, // T (ISO separator)\n        parseTokenOffsetMs = /[\\+\\-]?\\d+/, // 1234567890123\n        parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n\n        //strict parsing regexes\n        parseTokenOneDigit = /\\d/, // 0 - 9\n        parseTokenTwoDigits = /\\d\\d/, // 00 - 99\n        parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n        parseTokenFourDigits = /\\d{4}/, // 0000 - 9999\n        parseTokenSixDigits = /[+-]?\\d{6}/, // -999,999 - 999,999\n        parseTokenSignedNumber = /[+-]?\\d+/, // -inf - inf\n\n        // iso 8601 regex\n        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n        isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\n        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n            ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/]\n        ],\n\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n            ['HH', /(T| )\\d\\d/]\n        ],\n\n        // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-15', '30']\n        parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\n        // getter and setter names\n        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n        unitMillisecondFactors = {\n            'Milliseconds' : 1,\n            'Seconds' : 1e3,\n            'Minutes' : 6e4,\n            'Hours' : 36e5,\n            'Days' : 864e5,\n            'Months' : 2592e6,\n            'Years' : 31536e6\n        },\n\n        unitAliases = {\n            ms : 'millisecond',\n            s : 'second',\n            m : 'minute',\n            h : 'hour',\n            d : 'day',\n            D : 'date',\n            w : 'week',\n            W : 'isoWeek',\n            M : 'month',\n            Q : 'quarter',\n            y : 'year',\n            DDD : 'dayOfYear',\n            e : 'weekday',\n            E : 'isoWeekday',\n            gg: 'weekYear',\n            GG: 'isoWeekYear'\n        },\n\n        camelFunctions = {\n            dayofyear : 'dayOfYear',\n            isoweekday : 'isoWeekday',\n            isoweek : 'isoWeek',\n            weekyear : 'weekYear',\n            isoweekyear : 'isoWeekYear'\n        },\n\n        // format function strings\n        formatFunctions = {},\n\n        // default relative time thresholds\n        relativeTimeThresholds = {\n            s: 45,  // seconds to minute\n            m: 45,  // minutes to hour\n            h: 22,  // hours to day\n            d: 26,  // days to month\n            M: 11   // months to year\n        },\n\n        // tokens to ordinalize and pad\n        ordinalizeTokens = 'DDD w W M D d'.split(' '),\n        paddedTokens = 'M D H h m s w W'.split(' '),\n\n        formatTokenFunctions = {\n            M    : function () {\n                return this.month() + 1;\n            },\n            MMM  : function (format) {\n                return this.localeData().monthsShort(this, format);\n            },\n            MMMM : function (format) {\n                return this.localeData().months(this, format);\n            },\n            D    : function () {\n                return this.date();\n            },\n            DDD  : function () {\n                return this.dayOfYear();\n            },\n            d    : function () {\n                return this.day();\n            },\n            dd   : function (format) {\n                return this.localeData().weekdaysMin(this, format);\n            },\n            ddd  : function (format) {\n                return this.localeData().weekdaysShort(this, format);\n            },\n            dddd : function (format) {\n                return this.localeData().weekdays(this, format);\n            },\n            w    : function () {\n                return this.week();\n            },\n            W    : function () {\n                return this.isoWeek();\n            },\n            YY   : function () {\n                return leftZeroFill(this.year() % 100, 2);\n            },\n            YYYY : function () {\n                return leftZeroFill(this.year(), 4);\n            },\n            YYYYY : function () {\n                return leftZeroFill(this.year(), 5);\n            },\n            YYYYYY : function () {\n                var y = this.year(), sign = y >= 0 ? '+' : '-';\n                return sign + leftZeroFill(Math.abs(y), 6);\n            },\n            gg   : function () {\n                return leftZeroFill(this.weekYear() % 100, 2);\n            },\n            gggg : function () {\n                return leftZeroFill(this.weekYear(), 4);\n            },\n            ggggg : function () {\n                return leftZeroFill(this.weekYear(), 5);\n            },\n            GG   : function () {\n                return leftZeroFill(this.isoWeekYear() % 100, 2);\n            },\n            GGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 4);\n            },\n            GGGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 5);\n            },\n            e : function () {\n                return this.weekday();\n            },\n            E : function () {\n                return this.isoWeekday();\n            },\n            a    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), true);\n            },\n            A    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), false);\n            },\n            H    : function () {\n                return this.hours();\n            },\n            h    : function () {\n                return this.hours() % 12 || 12;\n            },\n            m    : function () {\n                return this.minutes();\n            },\n            s    : function () {\n                return this.seconds();\n            },\n            S    : function () {\n                return toInt(this.milliseconds() / 100);\n            },\n            SS   : function () {\n                return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n            },\n            SSS  : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            SSSS : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            Z    : function () {\n                var a = -this.zone(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n            },\n            ZZ   : function () {\n                var a = -this.zone(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n            },\n            z : function () {\n                return this.zoneAbbr();\n            },\n            zz : function () {\n                return this.zoneName();\n            },\n            x    : function () {\n                return this.valueOf();\n            },\n            X    : function () {\n                return this.unix();\n            },\n            Q : function () {\n                return this.quarter();\n            }\n        },\n\n        deprecations = {},\n\n        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'];\n\n    // Pick the first defined of two or three arguments. dfl comes from\n    // default.\n    function dfl(a, b, c) {\n        switch (arguments.length) {\n            case 2: return a != null ? a : b;\n            case 3: return a != null ? a : b != null ? b : c;\n            default: throw new Error('Implement me');\n        }\n    }\n\n    function hasOwnProp(a, b) {\n        return hasOwnProperty.call(a, b);\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object, and es5 standard is not very\n        // helpful.\n        return {\n            empty : false,\n            unusedTokens : [],\n            unusedInput : [],\n            overflow : -2,\n            charsLeftOver : 0,\n            nullInput : false,\n            invalidMonth : null,\n            invalidFormat : false,\n            userInvalidated : false,\n            iso: false\n        };\n    }\n\n    function printMsg(msg) {\n        if (moment.suppressDeprecationWarnings === false &&\n                typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n        return extend(function () {\n            if (firstTime) {\n                printMsg(msg);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            printMsg(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    function padToken(func, count) {\n        return function (a) {\n            return leftZeroFill(func.call(this, a), count);\n        };\n    }\n    function ordinalizeToken(func, period) {\n        return function (a) {\n            return this.localeData().ordinal(func.call(this, a), period);\n        };\n    }\n\n    while (ordinalizeTokens.length) {\n        i = ordinalizeTokens.pop();\n        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n    }\n    while (paddedTokens.length) {\n        i = paddedTokens.pop();\n        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n    }\n    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    function Locale() {\n    }\n\n    // Moment prototype object\n    function Moment(config, skipOverflow) {\n        if (skipOverflow !== false) {\n            checkOverflow(config);\n        }\n        copyConfig(this, config);\n        this._d = new Date(+config._d);\n    }\n\n    // Duration Constructor\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = moment.localeData();\n\n        this._bubble();\n    }\n\n    /************************************\n        Helpers\n    ************************************/\n\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = from._pf;\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    // left zero fill a number\n    // see http://jsperf.com/left-zero-filling for performance comparison\n    function leftZeroFill(number, targetLength, forceSign) {\n        var output = '' + Math.abs(number),\n            sign = number >= 0;\n\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return (sign ? (forceSign ? '+' : '') : '-') + output;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = makeAs(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = moment.duration(val, period);\n            addOrSubtractDurationFromMoment(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            moment.updateOffset(mom, days || months);\n        }\n    }\n\n    // check if is an array\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return Object.prototype.toString.call(input) === '[object Date]' ||\n            input instanceof Date;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function normalizeUnits(units) {\n        if (units) {\n            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n            units = unitAliases[units] || camelFunctions[lowered] || lowered;\n        }\n        return units;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeList(field) {\n        var count, setter;\n\n        if (field.indexOf('week') === 0) {\n            count = 7;\n            setter = 'day';\n        }\n        else if (field.indexOf('month') === 0) {\n            count = 12;\n            setter = 'month';\n        }\n        else {\n            return;\n        }\n\n        moment[field] = function (format, index) {\n            var i, getter,\n                method = moment._locale[field],\n                results = [];\n\n            if (typeof format === 'number') {\n                index = format;\n                format = undefined;\n            }\n\n            getter = function (i) {\n                var m = moment().utc().set(setter, i);\n                return method.call(moment._locale, m, format || '');\n            };\n\n            if (index != null) {\n                return getter(index);\n            }\n            else {\n                for (i = 0; i < count; i++) {\n                    results.push(getter(i));\n                }\n                return results;\n            }\n        };\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function checkOverflow(m) {\n        var overflow;\n        if (m._a && m._pf.overflow === -2) {\n            overflow =\n                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :\n                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :\n                m._a[HOUR] < 0 || m._a[HOUR] > 24 ||\n                    (m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 ||\n                                           m._a[SECOND] !== 0 ||\n                                           m._a[MILLISECOND] !== 0)) ? HOUR :\n                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :\n                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :\n                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            m._pf.overflow = overflow;\n        }\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            m._isValid = !isNaN(m._d.getTime()) &&\n                m._pf.overflow < 0 &&\n                !m._pf.empty &&\n                !m._pf.invalidMonth &&\n                !m._pf.nullInput &&\n                !m._pf.invalidFormat &&\n                !m._pf.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    m._pf.charsLeftOver === 0 &&\n                    m._pf.unusedTokens.length === 0 &&\n                    m._pf.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        if (!locales[name] && hasModule) {\n            try {\n                oldLocale = moment.locale();\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n                moment.locale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function makeAs(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (moment.isMoment(input) || isDate(input) ?\n                    +input : +moment(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            moment.updateOffset(res, false);\n            return res;\n        } else {\n            return moment(input).local();\n        }\n    }\n\n    /************************************\n        Locale\n    ************************************/\n\n\n    extend(Locale.prototype, {\n\n        set : function (config) {\n            var prop, i;\n            for (i in config) {\n                prop = config[i];\n                if (typeof prop === 'function') {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n            // Lenient ordinal parsing accepts just a number in addition to\n            // number + (possibly) stuff coming from _ordinalParseLenient.\n            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n        },\n\n        _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        months : function (m) {\n            return this._months[m.month()];\n        },\n\n        _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        monthsShort : function (m) {\n            return this._monthsShort[m.month()];\n        },\n\n        monthsParse : function (monthName, format, strict) {\n            var i, mom, regex;\n\n            if (!this._monthsParse) {\n                this._monthsParse = [];\n                this._longMonthsParse = [];\n                this._shortMonthsParse = [];\n            }\n\n            for (i = 0; i < 12; i++) {\n                // make the regex if we don't have it already\n                mom = moment.utc([2000, i]);\n                if (strict && !this._longMonthsParse[i]) {\n                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n                }\n                if (!strict && !this._monthsParse[i]) {\n                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (!strict && this._monthsParse[i].test(monthName)) {\n                    return i;\n                }\n            }\n        },\n\n        _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdays : function (m) {\n            return this._weekdays[m.day()];\n        },\n\n        _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysShort : function (m) {\n            return this._weekdaysShort[m.day()];\n        },\n\n        _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        weekdaysMin : function (m) {\n            return this._weekdaysMin[m.day()];\n        },\n\n        weekdaysParse : function (weekdayName) {\n            var i, mom, regex;\n\n            if (!this._weekdaysParse) {\n                this._weekdaysParse = [];\n            }\n\n            for (i = 0; i < 7; i++) {\n                // make the regex if we don't have it already\n                if (!this._weekdaysParse[i]) {\n                    mom = moment([2000, 1]).day(i);\n                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (this._weekdaysParse[i].test(weekdayName)) {\n                    return i;\n                }\n            }\n        },\n\n        _longDateFormat : {\n            LTS : 'h:mm:ss A',\n            LT : 'h:mm A',\n            L : 'MM/DD/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY LT',\n            LLLL : 'dddd, MMMM D, YYYY LT'\n        },\n        longDateFormat : function (key) {\n            var output = this._longDateFormat[key];\n            if (!output && this._longDateFormat[key.toUpperCase()]) {\n                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                    return val.slice(1);\n                });\n                this._longDateFormat[key] = output;\n            }\n            return output;\n        },\n\n        isPM : function (input) {\n            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n            // Using charAt should be more compatible.\n            return ((input + '').toLowerCase().charAt(0) === 'p');\n        },\n\n        _meridiemParse : /[ap]\\.?m?\\.?/i,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'pm' : 'PM';\n            } else {\n                return isLower ? 'am' : 'AM';\n            }\n        },\n\n        _calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        calendar : function (key, mom, now) {\n            var output = this._calendar[key];\n            return typeof output === 'function' ? output.apply(mom, [now]) : output;\n        },\n\n        _relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n\n        relativeTime : function (number, withoutSuffix, string, isFuture) {\n            var output = this._relativeTime[string];\n            return (typeof output === 'function') ?\n                output(number, withoutSuffix, string, isFuture) :\n                output.replace(/%d/i, number);\n        },\n\n        pastFuture : function (diff, output) {\n            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n        },\n\n        ordinal : function (number) {\n            return this._ordinal.replace('%d', number);\n        },\n        _ordinal : '%d',\n        _ordinalParse : /\\d{1,2}/,\n\n        preparse : function (string) {\n            return string;\n        },\n\n        postformat : function (string) {\n            return string;\n        },\n\n        week : function (mom) {\n            return weekOfYear(mom, this._week.dow, this._week.doy).week;\n        },\n\n        _week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        },\n\n        _invalidDate: 'Invalid date',\n        invalidDate: function () {\n            return this._invalidDate;\n        }\n    });\n\n    /************************************\n        Formatting\n    ************************************/\n\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n\n    /************************************\n        Parsing\n    ************************************/\n\n\n    // get the regex to find the next token\n    function getParseRegexForToken(token, config) {\n        var a, strict = config._strict;\n        switch (token) {\n        case 'Q':\n            return parseTokenOneDigit;\n        case 'DDDD':\n            return parseTokenThreeDigits;\n        case 'YYYY':\n        case 'GGGG':\n        case 'gggg':\n            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n        case 'Y':\n        case 'G':\n        case 'g':\n            return parseTokenSignedNumber;\n        case 'YYYYYY':\n        case 'YYYYY':\n        case 'GGGGG':\n        case 'ggggg':\n            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n        case 'S':\n            if (strict) {\n                return parseTokenOneDigit;\n            }\n            /* falls through */\n        case 'SS':\n            if (strict) {\n                return parseTokenTwoDigits;\n            }\n            /* falls through */\n        case 'SSS':\n            if (strict) {\n                return parseTokenThreeDigits;\n            }\n            /* falls through */\n        case 'DDD':\n            return parseTokenOneToThreeDigits;\n        case 'MMM':\n        case 'MMMM':\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            return parseTokenWord;\n        case 'a':\n        case 'A':\n            return config._locale._meridiemParse;\n        case 'x':\n            return parseTokenOffsetMs;\n        case 'X':\n            return parseTokenTimestampMs;\n        case 'Z':\n        case 'ZZ':\n            return parseTokenTimezone;\n        case 'T':\n            return parseTokenT;\n        case 'SSSS':\n            return parseTokenDigits;\n        case 'MM':\n        case 'DD':\n        case 'YY':\n        case 'GG':\n        case 'gg':\n        case 'HH':\n        case 'hh':\n        case 'mm':\n        case 'ss':\n        case 'ww':\n        case 'WW':\n            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n        case 'M':\n        case 'D':\n        case 'd':\n        case 'H':\n        case 'h':\n        case 'm':\n        case 's':\n        case 'w':\n        case 'W':\n        case 'e':\n        case 'E':\n            return parseTokenOneOrTwoDigits;\n        case 'Do':\n            return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;\n        default :\n            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n            return a;\n        }\n    }\n\n    function timezoneMinutesFromString(string) {\n        string = string || '';\n        var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n            minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? -minutes : minutes;\n    }\n\n    // function to convert string input to date\n    function addTimeToArrayFromToken(token, input, config) {\n        var a, datePartArray = config._a;\n\n        switch (token) {\n        // QUARTER\n        case 'Q':\n            if (input != null) {\n                datePartArray[MONTH] = (toInt(input) - 1) * 3;\n            }\n            break;\n        // MONTH\n        case 'M' : // fall through to MM\n        case 'MM' :\n            if (input != null) {\n                datePartArray[MONTH] = toInt(input) - 1;\n            }\n            break;\n        case 'MMM' : // fall through to MMMM\n        case 'MMMM' :\n            a = config._locale.monthsParse(input, token, config._strict);\n            // if we didn't find a month name, mark the date as invalid.\n            if (a != null) {\n                datePartArray[MONTH] = a;\n            } else {\n                config._pf.invalidMonth = input;\n            }\n            break;\n        // DAY OF MONTH\n        case 'D' : // fall through to DD\n        case 'DD' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(input);\n            }\n            break;\n        case 'Do' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(parseInt(\n                            input.match(/\\d{1,2}/)[0], 10));\n            }\n            break;\n        // DAY OF YEAR\n        case 'DDD' : // fall through to DDDD\n        case 'DDDD' :\n            if (input != null) {\n                config._dayOfYear = toInt(input);\n            }\n\n            break;\n        // YEAR\n        case 'YY' :\n            datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n            break;\n        case 'YYYY' :\n        case 'YYYYY' :\n        case 'YYYYYY' :\n            datePartArray[YEAR] = toInt(input);\n            break;\n        // AM / PM\n        case 'a' : // fall through to A\n        case 'A' :\n            config._isPm = config._locale.isPM(input);\n            break;\n        // HOUR\n        case 'h' : // fall through to hh\n        case 'hh' :\n            config._pf.bigHour = true;\n            /* falls through */\n        case 'H' : // fall through to HH\n        case 'HH' :\n            datePartArray[HOUR] = toInt(input);\n            break;\n        // MINUTE\n        case 'm' : // fall through to mm\n        case 'mm' :\n            datePartArray[MINUTE] = toInt(input);\n            break;\n        // SECOND\n        case 's' : // fall through to ss\n        case 'ss' :\n            datePartArray[SECOND] = toInt(input);\n            break;\n        // MILLISECOND\n        case 'S' :\n        case 'SS' :\n        case 'SSS' :\n        case 'SSSS' :\n            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n            break;\n        // UNIX OFFSET (MILLISECONDS)\n        case 'x':\n            config._d = new Date(toInt(input));\n            break;\n        // UNIX TIMESTAMP WITH MS\n        case 'X':\n            config._d = new Date(parseFloat(input) * 1000);\n            break;\n        // TIMEZONE\n        case 'Z' : // fall through to ZZ\n        case 'ZZ' :\n            config._useUTC = true;\n            config._tzm = timezoneMinutesFromString(input);\n            break;\n        // WEEKDAY - human\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            a = config._locale.weekdaysParse(input);\n            // if we didn't get a weekday name, mark the date as invalid\n            if (a != null) {\n                config._w = config._w || {};\n                config._w['d'] = a;\n            } else {\n                config._pf.invalidWeekday = input;\n            }\n            break;\n        // WEEK, WEEK DAY - numeric\n        case 'w':\n        case 'ww':\n        case 'W':\n        case 'WW':\n        case 'd':\n        case 'e':\n        case 'E':\n            token = token.substr(0, 1);\n            /* falls through */\n        case 'gggg':\n        case 'GGGG':\n        case 'GGGGG':\n            token = token.substr(0, 2);\n            if (input) {\n                config._w = config._w || {};\n                config._w[token] = toInt(input);\n            }\n            break;\n        case 'gg':\n        case 'GG':\n            config._w = config._w || {};\n            config._w[token] = moment.parseTwoDigitYear(input);\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n            week = dfl(w.W, 1);\n            weekday = dfl(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n            week = dfl(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function dateFromConfig(config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                config._pf._overflowDayOfYear = true;\n            }\n\n            date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n        // Apply timezone offset from input. The actual zone can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() + config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dateFromObject(config) {\n        var normalizedInput;\n\n        if (config._d) {\n            return;\n        }\n\n        normalizedInput = normalizeObjectUnits(config._i);\n        config._a = [\n            normalizedInput.year,\n            normalizedInput.month,\n            normalizedInput.day || normalizedInput.date,\n            normalizedInput.hour,\n            normalizedInput.minute,\n            normalizedInput.second,\n            normalizedInput.millisecond\n        ];\n\n        dateFromConfig(config);\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [\n                now.getUTCFullYear(),\n                now.getUTCMonth(),\n                now.getUTCDate()\n            ];\n        } else {\n            return [now.getFullYear(), now.getMonth(), now.getDate()];\n        }\n    }\n\n    // date from string and format string\n    function makeDateFromStringAndFormat(config) {\n        if (config._f === moment.ISO_8601) {\n            parseISO(config);\n            return;\n        }\n\n        config._a = [];\n        config._pf.empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    config._pf.unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    config._pf.empty = false;\n                }\n                else {\n                    config._pf.unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                config._pf.unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            config._pf.unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n            config._pf.bigHour = undefined;\n        }\n        // handle am pm\n        if (config._isPm && config._a[HOUR] < 12) {\n            config._a[HOUR] += 12;\n        }\n        // if is 12 am, change hours to 0\n        if (config._isPm === false && config._a[HOUR] === 12) {\n            config._a[HOUR] = 0;\n        }\n        dateFromConfig(config);\n        checkOverflow(config);\n    }\n\n    function unescapeFormat(s) {\n        return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        });\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function regexpEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    // date from string and array of format strings\n    function makeDateFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            config._pf.invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._pf = defaultParsingFlags();\n            tempConfig._f = config._f[i];\n            makeDateFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += tempConfig._pf.charsLeftOver;\n\n            //or tokens\n            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n            tempConfig._pf.score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    // date from iso format\n    function parseISO(config) {\n        var i, l,\n            string = config._i,\n            match = isoRegex.exec(string);\n\n        if (match) {\n            config._pf.iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    // match[5] should be 'T' or undefined\n                    config._f = isoDates[i][0] + (match[6] || ' ');\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(parseTokenTimezone)) {\n                config._f += 'Z';\n            }\n            makeDateFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function makeDateFromString(config) {\n        parseISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function makeDateFromInput(config) {\n        var input = config._i, matched;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n            config._d = new Date(+matched[1]);\n        } else if (typeof input === 'string') {\n            makeDateFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            dateFromConfig(config);\n        } else if (typeof(input) === 'object') {\n            dateFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function makeDate(y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function makeUTCDate(y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    function parseWeekday(input, locale) {\n        if (typeof input === 'string') {\n            if (!isNaN(input)) {\n                input = parseInt(input, 10);\n            }\n            else {\n                input = locale.weekdaysParse(input);\n                if (typeof input !== 'number') {\n                    return null;\n                }\n            }\n        }\n        return input;\n    }\n\n    /************************************\n        Relative Time\n    ************************************/\n\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime(posNegDuration, withoutSuffix, locale) {\n        var duration = moment.duration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            years = round(duration.as('y')),\n\n            args = seconds < relativeTimeThresholds.s && ['s', seconds] ||\n                minutes === 1 && ['m'] ||\n                minutes < relativeTimeThresholds.m && ['mm', minutes] ||\n                hours === 1 && ['h'] ||\n                hours < relativeTimeThresholds.h && ['hh', hours] ||\n                days === 1 && ['d'] ||\n                days < relativeTimeThresholds.d && ['dd', days] ||\n                months === 1 && ['M'] ||\n                months < relativeTimeThresholds.M && ['MM', months] ||\n                years === 1 && ['y'] || ['yy', years];\n\n        args[2] = withoutSuffix;\n        args[3] = +posNegDuration > 0;\n        args[4] = locale;\n        return substituteTimeAgo.apply({}, args);\n    }\n\n\n    /************************************\n        Week of Year\n    ************************************/\n\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;\n\n        d = d === 0 ? 7 : d;\n        weekday = weekday != null ? weekday : firstDayOfWeek;\n        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n        return {\n            year: dayOfYear > 0 ? year : year - 1,\n            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    function makeMoment(config) {\n        var input = config._i,\n            format = config._f,\n            res;\n\n        config._locale = config._locale || moment.localeData(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return moment.invalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (moment.isMoment(input)) {\n            return new Moment(input, true);\n        } else if (format) {\n            if (isArray(format)) {\n                makeDateFromStringAndArray(config);\n            } else {\n                makeDateFromStringAndFormat(config);\n            }\n        } else {\n            makeDateFromInput(config);\n        }\n\n        res = new Moment(config);\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    moment = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._i = input;\n        c._f = format;\n        c._l = locale;\n        c._strict = strict;\n        c._isUTC = false;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c);\n    };\n\n    moment.suppressDeprecationWarnings = false;\n\n    moment.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return moment();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    moment.min = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    };\n\n    moment.max = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    };\n\n    // creating with utc\n    moment.utc = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._useUTC = true;\n        c._isUTC = true;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c).utc();\n    };\n\n    // creating with unix timestamp (in seconds)\n    moment.unix = function (input) {\n        return moment(input * 1000);\n    };\n\n    // duration\n    moment.duration = function (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            parseIso,\n            diffRes;\n\n        if (moment.isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = isoDurationRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            parseIso = function (inp) {\n                // We'd normally use ~~inp for this, but unfortunately it also\n                // converts floats to ints.\n                // inp may be undefined, so careful calling replace on it.\n                var res = inp && parseFloat(inp.replace(',', '.'));\n                // apply sign while we're at it\n                return (isNaN(res) ? 0 : res) * sign;\n            };\n            duration = {\n                y: parseIso(match[2]),\n                M: parseIso(match[3]),\n                d: parseIso(match[4]),\n                h: parseIso(match[5]),\n                m: parseIso(match[6]),\n                s: parseIso(match[7]),\n                w: parseIso(match[8])\n            };\n        } else if (typeof duration === 'object' &&\n                ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    };\n\n    // version number\n    moment.version = VERSION;\n\n    // default format\n    moment.defaultFormat = isoFormat;\n\n    // constant that refers to the ISO standard\n    moment.ISO_8601 = function () {};\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    moment.momentProperties = momentProperties;\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    moment.updateOffset = function () {};\n\n    // This function allows you to set a threshold for relative time strings\n    moment.relativeTimeThreshold = function (threshold, limit) {\n        if (relativeTimeThresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return relativeTimeThresholds[threshold];\n        }\n        relativeTimeThresholds[threshold] = limit;\n        return true;\n    };\n\n    moment.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        function (key, value) {\n            return moment.locale(key, value);\n        }\n    );\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    moment.locale = function (key, values) {\n        var data;\n        if (key) {\n            if (typeof(values) !== 'undefined') {\n                data = moment.defineLocale(key, values);\n            }\n            else {\n                data = moment.localeData(key);\n            }\n\n            if (data) {\n                moment.duration._locale = moment._locale = data;\n            }\n        }\n\n        return moment._locale._abbr;\n    };\n\n    moment.defineLocale = function (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            if (!locales[name]) {\n                locales[name] = new Locale();\n            }\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            moment.locale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    };\n\n    moment.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        function (key) {\n            return moment.localeData(key);\n        }\n    );\n\n    // returns locale data\n    moment.localeData = function (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return moment._locale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    };\n\n    // compare moment object\n    moment.isMoment = function (obj) {\n        return obj instanceof Moment ||\n            (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n    };\n\n    // for typechecking Duration objects\n    moment.isDuration = function (obj) {\n        return obj instanceof Duration;\n    };\n\n    for (i = lists.length - 1; i >= 0; --i) {\n        makeList(lists[i]);\n    }\n\n    moment.normalizeUnits = function (units) {\n        return normalizeUnits(units);\n    };\n\n    moment.invalid = function (flags) {\n        var m = moment.utc(NaN);\n        if (flags != null) {\n            extend(m._pf, flags);\n        }\n        else {\n            m._pf.userInvalidated = true;\n        }\n\n        return m;\n    };\n\n    moment.parseZone = function () {\n        return moment.apply(null, arguments).parseZone();\n    };\n\n    moment.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    /************************************\n        Moment Prototype\n    ************************************/\n\n\n    extend(moment.fn = Moment.prototype, {\n\n        clone : function () {\n            return moment(this);\n        },\n\n        valueOf : function () {\n            return +this._d + ((this._offset || 0) * 60000);\n        },\n\n        unix : function () {\n            return Math.floor(+this / 1000);\n        },\n\n        toString : function () {\n            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n        },\n\n        toDate : function () {\n            return this._offset ? new Date(+this) : this._d;\n        },\n\n        toISOString : function () {\n            var m = moment(this).utc();\n            if (0 < m.year() && m.year() <= 9999) {\n                if ('function' === typeof Date.prototype.toISOString) {\n                    // native implementation is ~50x faster, use it when we can\n                    return this.toDate().toISOString();\n                } else {\n                    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n                }\n            } else {\n                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        },\n\n        toArray : function () {\n            var m = this;\n            return [\n                m.year(),\n                m.month(),\n                m.date(),\n                m.hours(),\n                m.minutes(),\n                m.seconds(),\n                m.milliseconds()\n            ];\n        },\n\n        isValid : function () {\n            return isValid(this);\n        },\n\n        isDSTShifted : function () {\n            if (this._a) {\n                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n            }\n\n            return false;\n        },\n\n        parsingFlags : function () {\n            return extend({}, this._pf);\n        },\n\n        invalidAt: function () {\n            return this._pf.overflow;\n        },\n\n        utc : function (keepLocalTime) {\n            return this.zone(0, keepLocalTime);\n        },\n\n        local : function (keepLocalTime) {\n            if (this._isUTC) {\n                this.zone(0, keepLocalTime);\n                this._isUTC = false;\n\n                if (keepLocalTime) {\n                    this.add(this._dateTzOffset(), 'm');\n                }\n            }\n            return this;\n        },\n\n        format : function (inputString) {\n            var output = formatMoment(this, inputString || moment.defaultFormat);\n            return this.localeData().postformat(output);\n        },\n\n        add : createAdder(1, 'add'),\n\n        subtract : createAdder(-1, 'subtract'),\n\n        diff : function (input, units, asFloat) {\n            var that = makeAs(input, this),\n                zoneDiff = (this.zone() - that.zone()) * 6e4,\n                diff, output, daysAdjust;\n\n            units = normalizeUnits(units);\n\n            if (units === 'year' || units === 'month') {\n                // average number of days in the months in the given dates\n                diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2\n                // difference in months\n                output = ((this.year() - that.year()) * 12) + (this.month() - that.month());\n                // adjust by taking difference in days, average number of days\n                // and dst in the given months.\n                daysAdjust = (this - moment(this).startOf('month')) -\n                    (that - moment(that).startOf('month'));\n                // same as above but with zones, to negate all dst\n                daysAdjust -= ((this.zone() - moment(this).startOf('month').zone()) -\n                        (that.zone() - moment(that).startOf('month').zone())) * 6e4;\n                output += daysAdjust / diff;\n                if (units === 'year') {\n                    output = output / 12;\n                }\n            } else {\n                diff = (this - that);\n                output = units === 'second' ? diff / 1e3 : // 1000\n                    units === 'minute' ? diff / 6e4 : // 1000 * 60\n                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                    diff;\n            }\n            return asFloat ? output : absRound(output);\n        },\n\n        from : function (time, withoutSuffix) {\n            return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        },\n\n        fromNow : function (withoutSuffix) {\n            return this.from(moment(), withoutSuffix);\n        },\n\n        calendar : function (time) {\n            // We want to compare the start of today, vs this.\n            // Getting start-of-today depends on whether we're zone'd or not.\n            var now = time || moment(),\n                sod = makeAs(now, this).startOf('day'),\n                diff = this.diff(sod, 'days', true),\n                format = diff < -6 ? 'sameElse' :\n                    diff < -1 ? 'lastWeek' :\n                    diff < 0 ? 'lastDay' :\n                    diff < 1 ? 'sameDay' :\n                    diff < 2 ? 'nextDay' :\n                    diff < 7 ? 'nextWeek' : 'sameElse';\n            return this.format(this.localeData().calendar(format, this, moment(now)));\n        },\n\n        isLeapYear : function () {\n            return isLeapYear(this.year());\n        },\n\n        isDST : function () {\n            return (this.zone() < this.clone().month(0).zone() ||\n                this.zone() < this.clone().month(5).zone());\n        },\n\n        day : function (input) {\n            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n            if (input != null) {\n                input = parseWeekday(input, this.localeData());\n                return this.add(input - day, 'd');\n            } else {\n                return day;\n            }\n        },\n\n        month : makeAccessor('Month', true),\n\n        startOf : function (units) {\n            units = normalizeUnits(units);\n            // the following switch intentionally omits break keywords\n            // to utilize falling through the cases.\n            switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n                /* falls through */\n            }\n\n            // weeks are a special case\n            if (units === 'week') {\n                this.weekday(0);\n            } else if (units === 'isoWeek') {\n                this.isoWeekday(1);\n            }\n\n            // quarters are also special\n            if (units === 'quarter') {\n                this.month(Math.floor(this.month() / 3) * 3);\n            }\n\n            return this;\n        },\n\n        endOf: function (units) {\n            units = normalizeUnits(units);\n            if (units === undefined || units === 'millisecond') {\n                return this;\n            }\n            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n        },\n\n        isAfter: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this > +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return inputMs < +this.clone().startOf(units);\n            }\n        },\n\n        isBefore: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this < +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return +this.clone().endOf(units) < inputMs;\n            }\n        },\n\n        isSame: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(units || 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this === +input;\n            } else {\n                inputMs = +moment(input);\n                return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n            }\n        },\n\n        min: deprecate(\n                 'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n                 function (other) {\n                     other = moment.apply(null, arguments);\n                     return other < this ? this : other;\n                 }\n         ),\n\n        max: deprecate(\n                'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n                function (other) {\n                    other = moment.apply(null, arguments);\n                    return other > this ? this : other;\n                }\n        ),\n\n        // keepLocalTime = true means only change the timezone, without\n        // affecting the local hour. So 5:31:26 +0300 --[zone(2, true)]-->\n        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist int zone\n        // +0200, so we adjust the time as needed, to be valid.\n        //\n        // Keeping the time actually adds/subtracts (one hour)\n        // from the actual represented time. That is why we call updateOffset\n        // a second time. In case it wants us to change the offset again\n        // _changeInProgress == true case, then we have to adjust, because\n        // there is no such time in the given timezone.\n        zone : function (input, keepLocalTime) {\n            var offset = this._offset || 0,\n                localAdjust;\n            if (input != null) {\n                if (typeof input === 'string') {\n                    input = timezoneMinutesFromString(input);\n                }\n                if (Math.abs(input) < 16) {\n                    input = input * 60;\n                }\n                if (!this._isUTC && keepLocalTime) {\n                    localAdjust = this._dateTzOffset();\n                }\n                this._offset = input;\n                this._isUTC = true;\n                if (localAdjust != null) {\n                    this.subtract(localAdjust, 'm');\n                }\n                if (offset !== input) {\n                    if (!keepLocalTime || this._changeInProgress) {\n                        addOrSubtractDurationFromMoment(this,\n                                moment.duration(offset - input, 'm'), 1, false);\n                    } else if (!this._changeInProgress) {\n                        this._changeInProgress = true;\n                        moment.updateOffset(this, true);\n                        this._changeInProgress = null;\n                    }\n                }\n            } else {\n                return this._isUTC ? offset : this._dateTzOffset();\n            }\n            return this;\n        },\n\n        zoneAbbr : function () {\n            return this._isUTC ? 'UTC' : '';\n        },\n\n        zoneName : function () {\n            return this._isUTC ? 'Coordinated Universal Time' : '';\n        },\n\n        parseZone : function () {\n            if (this._tzm) {\n                this.zone(this._tzm);\n            } else if (typeof this._i === 'string') {\n                this.zone(this._i);\n            }\n            return this;\n        },\n\n        hasAlignedHourOffset : function (input) {\n            if (!input) {\n                input = 0;\n            }\n            else {\n                input = moment(input).zone();\n            }\n\n            return (this.zone() - input) % 60 === 0;\n        },\n\n        daysInMonth : function () {\n            return daysInMonth(this.year(), this.month());\n        },\n\n        dayOfYear : function (input) {\n            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n        },\n\n        quarter : function (input) {\n            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n        },\n\n        weekYear : function (input) {\n            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        isoWeekYear : function (input) {\n            var year = weekOfYear(this, 1, 4).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        week : function (input) {\n            var week = this.localeData().week(this);\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        isoWeek : function (input) {\n            var week = weekOfYear(this, 1, 4).week;\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        weekday : function (input) {\n            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n            return input == null ? weekday : this.add(input - weekday, 'd');\n        },\n\n        isoWeekday : function (input) {\n            // behaves the same as moment#day except\n            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n            // as a setter, sunday should belong to the previous week.\n            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n        },\n\n        isoWeeksInYear : function () {\n            return weeksInYear(this.year(), 1, 4);\n        },\n\n        weeksInYear : function () {\n            var weekInfo = this.localeData()._week;\n            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units]();\n        },\n\n        set : function (units, value) {\n            units = normalizeUnits(units);\n            if (typeof this[units] === 'function') {\n                this[units](value);\n            }\n            return this;\n        },\n\n        // If passed a locale key, it will set the locale for this\n        // instance.  Otherwise, it will return the locale configuration\n        // variables for this instance.\n        locale : function (key) {\n            var newLocaleData;\n\n            if (key === undefined) {\n                return this._locale._abbr;\n            } else {\n                newLocaleData = moment.localeData(key);\n                if (newLocaleData != null) {\n                    this._locale = newLocaleData;\n                }\n                return this;\n            }\n        },\n\n        lang : deprecate(\n            'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n            function (key) {\n                if (key === undefined) {\n                    return this.localeData();\n                } else {\n                    return this.locale(key);\n                }\n            }\n        ),\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        _dateTzOffset : function () {\n            // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n            // https://github.com/moment/moment/pull/1871\n            return Math.round(this._d.getTimezoneOffset() / 15) * 15;\n        }\n    });\n\n    function rawMonthSetter(mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(),\n                daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function rawGetter(mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function rawSetter(mom, unit, value) {\n        if (unit === 'Month') {\n            return rawMonthSetter(mom, value);\n        } else {\n            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n\n    function makeAccessor(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                rawSetter(this, unit, value);\n                moment.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return rawGetter(this, unit);\n            }\n        };\n    }\n\n    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);\n    // moment.fn.month is defined separately\n    moment.fn.date = makeAccessor('Date', true);\n    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n    moment.fn.year = makeAccessor('FullYear', true);\n    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));\n\n    // add plural methods\n    moment.fn.days = moment.fn.day;\n    moment.fn.months = moment.fn.month;\n    moment.fn.weeks = moment.fn.week;\n    moment.fn.isoWeeks = moment.fn.isoWeek;\n    moment.fn.quarters = moment.fn.quarter;\n\n    // add aliased format methods\n    moment.fn.toJSON = moment.fn.toISOString;\n\n    /************************************\n        Duration Prototype\n    ************************************/\n\n\n    function daysToYears (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        return days * 400 / 146097;\n    }\n\n    function yearsToDays (years) {\n        // years * 365 + absRound(years / 4) -\n        //     absRound(years / 100) + absRound(years / 400);\n        return years * 146097 / 400;\n    }\n\n    extend(moment.duration.fn = Duration.prototype, {\n\n        _bubble : function () {\n            var milliseconds = this._milliseconds,\n                days = this._days,\n                months = this._months,\n                data = this._data,\n                seconds, minutes, hours, years = 0;\n\n            // The following code bubbles up values, see the tests for\n            // examples of what that means.\n            data.milliseconds = milliseconds % 1000;\n\n            seconds = absRound(milliseconds / 1000);\n            data.seconds = seconds % 60;\n\n            minutes = absRound(seconds / 60);\n            data.minutes = minutes % 60;\n\n            hours = absRound(minutes / 60);\n            data.hours = hours % 24;\n\n            days += absRound(hours / 24);\n\n            // Accurately convert days to years, assume start from year 0.\n            years = absRound(daysToYears(days));\n            days -= absRound(yearsToDays(years));\n\n            // 30 days to a month\n            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n            months += absRound(days / 30);\n            days %= 30;\n\n            // 12 months -> 1 year\n            years += absRound(months / 12);\n            months %= 12;\n\n            data.days = days;\n            data.months = months;\n            data.years = years;\n        },\n\n        abs : function () {\n            this._milliseconds = Math.abs(this._milliseconds);\n            this._days = Math.abs(this._days);\n            this._months = Math.abs(this._months);\n\n            this._data.milliseconds = Math.abs(this._data.milliseconds);\n            this._data.seconds = Math.abs(this._data.seconds);\n            this._data.minutes = Math.abs(this._data.minutes);\n            this._data.hours = Math.abs(this._data.hours);\n            this._data.months = Math.abs(this._data.months);\n            this._data.years = Math.abs(this._data.years);\n\n            return this;\n        },\n\n        weeks : function () {\n            return absRound(this.days() / 7);\n        },\n\n        valueOf : function () {\n            return this._milliseconds +\n              this._days * 864e5 +\n              (this._months % 12) * 2592e6 +\n              toInt(this._months / 12) * 31536e6;\n        },\n\n        humanize : function (withSuffix) {\n            var output = relativeTime(this, !withSuffix, this.localeData());\n\n            if (withSuffix) {\n                output = this.localeData().pastFuture(+this, output);\n            }\n\n            return this.localeData().postformat(output);\n        },\n\n        add : function (input, val) {\n            // supports only 2.0-style add(1, 's') or add(moment)\n            var dur = moment.duration(input, val);\n\n            this._milliseconds += dur._milliseconds;\n            this._days += dur._days;\n            this._months += dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        subtract : function (input, val) {\n            var dur = moment.duration(input, val);\n\n            this._milliseconds -= dur._milliseconds;\n            this._days -= dur._days;\n            this._months -= dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units.toLowerCase() + 's']();\n        },\n\n        as : function (units) {\n            var days, months;\n            units = normalizeUnits(units);\n\n            if (units === 'month' || units === 'year') {\n                days = this._days + this._milliseconds / 864e5;\n                months = this._months + daysToYears(days) * 12;\n                return units === 'month' ? months : months / 12;\n            } else {\n                // handle milliseconds separately because of floating point math errors (issue #1867)\n                days = this._days + Math.round(yearsToDays(this._months / 12));\n                switch (units) {\n                    case 'week': return days / 7 + this._milliseconds / 6048e5;\n                    case 'day': return days + this._milliseconds / 864e5;\n                    case 'hour': return days * 24 + this._milliseconds / 36e5;\n                    case 'minute': return days * 24 * 60 + this._milliseconds / 6e4;\n                    case 'second': return days * 24 * 60 * 60 + this._milliseconds / 1000;\n                    // Math.floor prevents floating point math errors here\n                    case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n                    default: throw new Error('Unknown unit ' + units);\n                }\n            }\n        },\n\n        lang : moment.fn.lang,\n        locale : moment.fn.locale,\n\n        toIsoString : deprecate(\n            'toIsoString() is deprecated. Please use toISOString() instead ' +\n            '(notice the capitals)',\n            function () {\n                return this.toISOString();\n            }\n        ),\n\n        toISOString : function () {\n            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n            var years = Math.abs(this.years()),\n                months = Math.abs(this.months()),\n                days = Math.abs(this.days()),\n                hours = Math.abs(this.hours()),\n                minutes = Math.abs(this.minutes()),\n                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\n            if (!this.asSeconds()) {\n                // this is the same as C#'s (Noda) and python (isodate)...\n                // but not other JS (goog.date)\n                return 'P0D';\n            }\n\n            return (this.asSeconds() < 0 ? '-' : '') +\n                'P' +\n                (years ? years + 'Y' : '') +\n                (months ? months + 'M' : '') +\n                (days ? days + 'D' : '') +\n                ((hours || minutes || seconds) ? 'T' : '') +\n                (hours ? hours + 'H' : '') +\n                (minutes ? minutes + 'M' : '') +\n                (seconds ? seconds + 'S' : '');\n        },\n\n        localeData : function () {\n            return this._locale;\n        }\n    });\n\n    moment.duration.fn.toString = moment.duration.fn.toISOString;\n\n    function makeDurationGetter(name) {\n        moment.duration.fn[name] = function () {\n            return this._data[name];\n        };\n    }\n\n    for (i in unitMillisecondFactors) {\n        if (hasOwnProp(unitMillisecondFactors, i)) {\n            makeDurationGetter(i.toLowerCase());\n        }\n    }\n\n    moment.duration.fn.asMilliseconds = function () {\n        return this.as('ms');\n    };\n    moment.duration.fn.asSeconds = function () {\n        return this.as('s');\n    };\n    moment.duration.fn.asMinutes = function () {\n        return this.as('m');\n    };\n    moment.duration.fn.asHours = function () {\n        return this.as('h');\n    };\n    moment.duration.fn.asDays = function () {\n        return this.as('d');\n    };\n    moment.duration.fn.asWeeks = function () {\n        return this.as('weeks');\n    };\n    moment.duration.fn.asMonths = function () {\n        return this.as('M');\n    };\n    moment.duration.fn.asYears = function () {\n        return this.as('y');\n    };\n\n    /************************************\n        Default Locale\n    ************************************/\n\n\n    // Set default locale, other locale will inherit from English.\n    moment.locale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    /* EMBED_LOCALES */\n\n    /************************************\n        Exposing Moment\n    ************************************/\n\n    function makeGlobal(shouldDeprecate) {\n        /*global ender:false */\n        if (typeof ender !== 'undefined') {\n            return;\n        }\n        oldGlobalMoment = globalScope.moment;\n        if (shouldDeprecate) {\n            globalScope.moment = deprecate(\n                    'Accessing Moment through the global scope is ' +\n                    'deprecated, and will be removed in an upcoming ' +\n                    'release.',\n                    moment);\n        } else {\n            globalScope.moment = moment;\n        }\n    }\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = moment;\n    } else if (typeof define === 'function' && define.amd) {\n        define('moment', function (require, exports, module) {\n            if (module.config && module.config() && module.config().noGlobal === true) {\n                // release the global variable\n                globalScope.moment = oldGlobalMoment;\n            }\n\n            return moment;\n        });\n        makeGlobal(true);\n    } else {\n        makeGlobal();\n    }\n}).call(this);\n","/**\n * Directive to display information about the current track that is playing.\n * @author Joseph Wolschon <joseph.wolschon@gmail.com>\n */\nangular.module('app').directive('currentTrack', function (player, ngProgress, $log) {\n\n  // Process bar styling. TODO: not sure if I'm going to keep this...\n  ngProgress.color('black');\n  ngProgress.height('10px');\n\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'assets/partials/currentTrack.html',\n    controller: function ($scope, player) {\n      $scope.percent = 0;\n      var playing = false;\n\n      /**\n       * Update progress bar. TODO: fancy equilizer/peak shit\n       *@private\n       */\n      var whilePlaying = function () {\n        var newPercent = Math.round((this.position / $scope.track.duration) * 100);\n        if (newPercent !== $scope.percent) {\n          $scope.percent = newPercent;\n          ngProgress.set($scope.percent);\n        }\n      };\n\n      $scope.$watch(player.tracksLoaded_, function (loaded) {\n        if (loaded && !playing) {\n          playing = true;\n          player.start(whilePlaying);\n        }\n      });\n\n    },\n    link: function (scope) {\n      scope.$watch(player.getCurrentTrack_, function (track) {\n        $log.log('current track', track);\n        scope.track = track;\n      });\n    }\n  }\n});","/**\n * Directive to display artists location on globe.\n * @author Joseph Wolschon <jwolschon@payjunciton.com\n */\nangular.module('app').directive('globe', function(echonestApi, player, $log){\n   return {\n     restrict : 'E',\n     scope: true,\n     template: '<div>{{artistName}}</div><div>{{title}}</div><div>{{artistLocation}}</div>',\n     controller: function($scope)\n     {\n\n     },\n     link: function(scope)\n     {\n       scope.$watch(player.getCurrentTrack_, function (track) {\n\n         scope.track = track;\n         if(track) {\n           $log.log('getting artist info');\n           echonestApi.getArtistLocation(track).then(function (data) {\n             var songs = data.response.songs;\n             if(songs.length > 0)\n             {\n               $log.log(songs);\n               scope.artistName = songs[0].artist_name;\n               scope.title = songs[0].title;\n               scope.artistLocation = songs[0].artist_location;\n             }else{\n               $log.log('no songs');\n             }\n\n           }, function () {\n             $log.log('error searching for songs');\n           })\n         }\n       });\n     }\n   }\n});","/**\n * Service for finding artist information\n * @author Joseph Wolschon <joseph.wolschon@gmail.com>\n */\nangular.module('app').service('echonestApi', function ($resource, $rootScope) {\n\n  var ArtistInfo = $resource('http://developer.echonest.com/api/v4/song/search');\n\n  this.getArtistLocation = function (track) {\n    var params = {\n      api_key: 'JWFXTP4DHXIGTNSAN',\n      bucket: ['artist_location'],\n      combined: track.title\n    };\n\n    return ArtistInfo.get(params).$promise;\n  };\n});","/**\n * Service for finding and playing soundcloud songs.\n * @author Joseph Wolschon <joseph.wolschon@gmail.com>\n */\nangular.module('app').service('player', function ($rootScope) {\n    var mokb = 9251246;\n    var gvb = 496642;\n    var pitchfork = 175182;\n    var users = [gvb, mokb];\n\n    var trackIds = [];\n    var currentTrack = null;\n    var soundManager = null;\n    var loaded = false;\n    var options = null;\n\n    /**\n     * Add a track id to the list of tracks to play and start playing if we need to.\n     * @param id of the track\n     * @private\n     */\n    var addTrack = function (id) {\n\n        if (trackIds.length > 50 && loaded === false) {\n            loaded = true;\n            $rootScope.$apply();\n        }\n\n        trackIds.push(id);\n    };\n\n    /**\n     * Add all the tracks for a given playlist.\n     * @param id of the playlist\n     * @private\n     */\n    var addPlayList = function (id) {\n        return SC.get('/playlists/' + id, function (playlist) {\n            angular.forEach(playlist.tracks, function (track) {\n                addTrack(track.id);\n            });\n        })\n    };\n\n    /**\n     * Iterate through the users and snag any playlists they have and add all the songs from them to the list of\n     * tracks to play. TODO: future add more users, find similar new songs using the playlists as a base\n     * @private\n     */\n    var setSongs = function () {\n        angular.forEach(users, function (user) {\n            SC.get('/users/' + user + '/playlists', function (playlists) {\n                angular.forEach(playlists, function (playlist) {\n                    addPlayList(playlist.id);\n                });\n            });\n        });\n    };\n\n    /**\n     * Play the next track in the list. If there's an error just skip to the one in the list. There's plenty of reasons\n     * while playing a track could fail. Track data isn't current, the user could have change permissions on who can\n     * stream the song, it could have been deleted, the user who uploaded the song could have been deleted etc.\n     * @private\n     */\n    var playNext = function () {\n\n        var index = Math.floor(Math.random() * (trackIds.length - 1));\n        var trackId = trackIds[index];\n\n        SC.get('/tracks/' + trackId, function (track) {\n\n            // Grab another song if there's issues with this one.\n            if (track === null\n                || (track.errors && track.errors.length > 0)\n                || !track.streamable || track.stream_url === null || !angular.isDefined(track.stream_url)) {\n                playNext();\n                return;\n            }\n\n            currentTrack = track;\n            $rootScope.$apply();\n\n            SC.stream(currentTrack.stream_url, options, function (soundManagerObj) {\n                if(soundManagerObj === null)\n                {\n                    playNext();\n                    return;\n                }\n                soundManager = soundManagerObj;\n                soundManager.play();\n            }, playNext);\n        });\n    };\n\n    /**\n     * Start streaming tracks.\n     * @param whilePlaying callback that will be periodically called by sound manager. Contains useful information such\n     *   as current position of track, peak/equalizer data etc.\n     */\n    this.start = function (whilePlaying) {\n        options = {\n            onfinish: playNext,\n            whileplaying: whilePlaying,\n            usePeakData: true,\n            useWaveformData: true,\n            useEQData: true\n        };\n        playNext();\n    };\n\n    /**\n     * Get the track that is currently streaming.\n     * @returns {Object} current soundcloud track object\n     * @private\n     */\n    this.getCurrentTrack_ = function () {\n        return currentTrack;\n    };\n\n    /**\n     * @returns {boolean} true if we have some tracks to play\n     */\n    this.tracksLoaded_ = function () {\n        return loaded;\n    };\n\n    setSongs();\n});","var Benchmark = require('benchmark'),\n    moment = require(\"./../moment.js\"),\n    base = moment('2013-05-25');\n\nmodule.exports = {\n  name: 'clone',\n  onComplete: function(){console.log('done');},\n  fn: function(){base.clone();},\n  async: true\n};\n","// moment.js locale configuration\n// locale : afrikaans (af)\n// author : Werner Mollentze : https://github.com/wernerm\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('af', {\n        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),\n        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'vm' : 'VM';\n            } else {\n                return isLower ? 'nm' : 'NM';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Vandag om] LT',\n            nextDay : '[Môre om] LT',\n            nextWeek : 'dddd [om] LT',\n            lastDay : '[Gister om] LT',\n            lastWeek : '[Laas] dddd [om] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'oor %s',\n            past : '%s gelede',\n            s : '\\'n paar sekondes',\n            m : '\\'n minuut',\n            mm : '%d minute',\n            h : '\\'n uur',\n            hh : '%d ure',\n            d : '\\'n dag',\n            dd : '%d dae',\n            M : '\\'n maand',\n            MM : '%d maande',\n            y : '\\'n jaar',\n            yy : '%d jaar'\n        },\n        ordinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n        },\n        week : {\n            dow : 1, // Maandag is die eerste dag van die week.\n            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Moroccan Arabic (ar-ma)\n// author : ElFadili Yassine : https://github.com/ElFadiliY\n// author : Abdel Said : https://github.com/abdelsaid\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ar-ma', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Arabic Saudi Arabia (ar-sa)\n// author : Suhail Alkowaileet : https://github.com/xsoh\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    };\n\n    return moment.defineLocale('ar-sa', {\n        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// Locale: Arabic (ar)\n// Author: Abdel Said: https://github.com/abdelsaid\n// Changes in months, weekdays: Ahmed Elkhatib\n// Native plural forms: forabi https://github.com/forabi\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months = [\n        'كانون الثاني يناير',\n        'شباط فبراير',\n        'آذار مارس',\n        'نيسان أبريل',\n        'أيار مايو',\n        'حزيران يونيو',\n        'تموز يوليو',\n        'آب أغسطس',\n        'أيلول سبتمبر',\n        'تشرين الأول أكتوبر',\n        'تشرين الثاني نوفمبر',\n        'كانون الأول ديسمبر'\n    ];\n\n    return moment.defineLocale('ar', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : azerbaijani (az)\n// author : topchiyev : https://github.com/topchiyev\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var suffixes = {\n        1: '-inci',\n        5: '-inci',\n        8: '-inci',\n        70: '-inci',\n        80: '-inci',\n\n        2: '-nci',\n        7: '-nci',\n        20: '-nci',\n        50: '-nci',\n\n        3: '-üncü',\n        4: '-üncü',\n        100: '-üncü',\n\n        6: '-ncı',\n\n        9: '-uncu',\n        10: '-uncu',\n        30: '-uncu',\n\n        60: '-ıncı',\n        90: '-ıncı'\n    };\n    return moment.defineLocale('az', {\n        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[sabah saat] LT',\n            nextWeek : '[gələn həftə] dddd [saat] LT',\n            lastDay : '[dünən] LT',\n            lastWeek : '[keçən həftə] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s əvvəl',\n            s : 'birneçə saniyyə',\n            m : 'bir dəqiqə',\n            mm : '%d dəqiqə',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir il',\n            yy : '%d il'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'gecə';\n            } else if (hour < 12) {\n                return 'səhər';\n            } else if (hour < 17) {\n                return 'gündüz';\n            } else {\n                return 'axşam';\n            }\n        },\n        ordinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n        ordinal : function (number) {\n            if (number === 0) {  // special case for zero\n                return number + '-ıncı';\n            }\n            var a = number % 10,\n                b = number % 100 - a,\n                c = number >= 100 ? 100 : null;\n\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : belarusian (be)\n// author : Dmitry Demidov : https://github.com/demidov91\n// author: Praleska: http://praleska.pro/\n// Author : Menelion Elensúle : https://github.com/Oire\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n            'dd': 'дзень_дні_дзён',\n            'MM': 'месяц_месяцы_месяцаў',\n            'yy': 'год_гады_гадоў'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_'),\n            'accusative': 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n            'accusative': 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_')\n        },\n\n        nounCase = (/\\[ ?[Вв] ?(?:мінулую|наступную)? ?\\] ?dddd/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    return moment.defineLocale('be', {\n        months : monthsCaseReplace,\n        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., LT',\n            LLLL : 'dddd, D MMMM YYYY г., LT'\n        },\n        calendar : {\n            sameDay: '[Сёння ў] LT',\n            nextDay: '[Заўтра ў] LT',\n            lastDay: '[Учора ў] LT',\n            nextWeek: function () {\n                return '[У] dddd [ў] LT';\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return '[У мінулую] dddd [ў] LT';\n                case 1:\n                case 2:\n                case 4:\n                    return '[У мінулы] dddd [ў] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'праз %s',\n            past : '%s таму',\n            s : 'некалькі секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithPlural,\n            hh : relativeTimeWithPlural,\n            d : 'дзень',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночы';\n            } else if (hour < 12) {\n                return 'раніцы';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечара';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}-(і|ы|га)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';\n            case 'D':\n                return number + '-га';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : bulgarian (bg)\n// author : Krasen Borisov : https://github.com/kraz\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('bg', {\n        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Днес в] LT',\n            nextDay : '[Утре в] LT',\n            nextWeek : 'dddd [в] LT',\n            lastDay : '[Вчера в] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[В изминалата] dddd [в] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[В изминалия] dddd [в] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'след %s',\n            past : 'преди %s',\n            s : 'няколко секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дни',\n            M : 'месец',\n            MM : '%d месеца',\n            y : 'година',\n            yy : '%d години'\n        },\n        ordinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Bengali (bn)\n// author : Kaushik Gandhi : https://github.com/kaushikgandhi\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '১',\n        '2': '২',\n        '3': '৩',\n        '4': '৪',\n        '5': '৫',\n        '6': '৬',\n        '7': '৭',\n        '8': '৮',\n        '9': '৯',\n        '0': '০'\n    },\n    numberMap = {\n        '১': '1',\n        '২': '2',\n        '৩': '3',\n        '৪': '4',\n        '৫': '5',\n        '৬': '6',\n        '৭': '7',\n        '৮': '8',\n        '৯': '9',\n        '০': '0'\n    };\n\n    return moment.defineLocale('bn', {\n        months : 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n        monthsShort : 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split('_'),\n        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রুবার_শনিবার'.split('_'),\n        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্রু_শনি'.split('_'),\n        weekdaysMin : 'রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm সময়',\n            LTS : 'A h:mm:ss সময়',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[আজ] LT',\n            nextDay : '[আগামীকাল] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[গতকাল] LT',\n            lastWeek : '[গত] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s পরে',\n            past : '%s আগে',\n            s : 'কএক সেকেন্ড',\n            m : 'এক মিনিট',\n            mm : '%d মিনিট',\n            h : 'এক ঘন্টা',\n            hh : '%d ঘন্টা',\n            d : 'এক দিন',\n            dd : '%d দিন',\n            M : 'এক মাস',\n            MM : '%d মাস',\n            y : 'এক বছর',\n            yy : '%d বছর'\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        //Bengali is a vast language its spoken\n        //in different forms in various parts of the world.\n        //I have just generalized with most common one used\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 10) {\n                return 'শকাল';\n            } else if (hour < 17) {\n                return 'দুপুর';\n            } else if (hour < 20) {\n                return 'বিকেল';\n            } else {\n                return 'রাত';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : tibetan (bo)\n// author : Thupten N. Chakrishar : https://github.com/vajradog\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '༡',\n        '2': '༢',\n        '3': '༣',\n        '4': '༤',\n        '5': '༥',\n        '6': '༦',\n        '7': '༧',\n        '8': '༨',\n        '9': '༩',\n        '0': '༠'\n    },\n    numberMap = {\n        '༡': '1',\n        '༢': '2',\n        '༣': '3',\n        '༤': '4',\n        '༥': '5',\n        '༦': '6',\n        '༧': '7',\n        '༨': '8',\n        '༩': '9',\n        '༠': '0'\n    };\n\n    return moment.defineLocale('bo', {\n        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),\n        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[དི་རིང] LT',\n            nextDay : '[སང་ཉིན] LT',\n            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',\n            lastDay : '[ཁ་སང] LT',\n            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ལ་',\n            past : '%s སྔན་ལ',\n            s : 'ལམ་སང',\n            m : 'སྐར་མ་གཅིག',\n            mm : '%d སྐར་མ',\n            h : 'ཆུ་ཚོད་གཅིག',\n            hh : '%d ཆུ་ཚོད',\n            d : 'ཉིན་གཅིག',\n            dd : '%d ཉིན་',\n            M : 'ཟླ་བ་གཅིག',\n            MM : '%d ཟླ་བ',\n            y : 'ལོ་གཅིག',\n            yy : '%d ལོ'\n        },\n        preparse: function (string) {\n            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'མཚན་མོ';\n            } else if (hour < 10) {\n                return 'ཞོགས་ཀས';\n            } else if (hour < 17) {\n                return 'ཉིན་གུང';\n            } else if (hour < 20) {\n                return 'དགོང་དག';\n            } else {\n                return 'མཚན་མོ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : breton (br)\n// author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\n        var format = {\n            'mm': 'munutenn',\n            'MM': 'miz',\n            'dd': 'devezh'\n        };\n        return number + ' ' + mutation(format[key], number);\n    }\n\n    function specialMutationForYears(number) {\n        switch (lastNumber(number)) {\n        case 1:\n        case 3:\n        case 4:\n        case 5:\n        case 9:\n            return number + ' bloaz';\n        default:\n            return number + ' vloaz';\n        }\n    }\n\n    function lastNumber(number) {\n        if (number > 9) {\n            return lastNumber(number % 10);\n        }\n        return number;\n    }\n\n    function mutation(text, number) {\n        if (number === 2) {\n            return softMutation(text);\n        }\n        return text;\n    }\n\n    function softMutation(text) {\n        var mutationTable = {\n            'm': 'v',\n            'b': 'v',\n            'd': 'z'\n        };\n        if (mutationTable[text.charAt(0)] === undefined) {\n            return text;\n        }\n        return mutationTable[text.charAt(0)] + text.substring(1);\n    }\n\n    return moment.defineLocale('br', {\n        months : 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n        monthsShort : 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n        weekdays : 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\n        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h[e]mm A',\n            LTS : 'h[e]mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [a viz] MMMM YYYY',\n            LLL : 'D [a viz] MMMM YYYY LT',\n            LLLL : 'dddd, D [a viz] MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Hiziv da] LT',\n            nextDay : '[Warc\\'hoazh da] LT',\n            nextWeek : 'dddd [da] LT',\n            lastDay : '[Dec\\'h da] LT',\n            lastWeek : 'dddd [paset da] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'a-benn %s',\n            past : '%s \\'zo',\n            s : 'un nebeud segondennoù',\n            m : 'ur vunutenn',\n            mm : relativeTimeWithMutation,\n            h : 'un eur',\n            hh : '%d eur',\n            d : 'un devezh',\n            dd : relativeTimeWithMutation,\n            M : 'ur miz',\n            MM : relativeTimeWithMutation,\n            y : 'ur bloaz',\n            yy : specialMutationForYears\n        },\n        ordinalParse: /\\d{1,2}(añ|vet)/,\n        ordinal : function (number) {\n            var output = (number === 1) ? 'añ' : 'vet';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : bosnian (bs)\n// author : Nedim Cholich : https://github.com/frontyard\n// based on (hr) translation by Bojan Marković\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n        case 'mm':\n            if (number === 1) {\n                result += 'minuta';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'minute';\n            } else {\n                result += 'minuta';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'jedan sat' : 'jednog sata';\n        case 'hh':\n            if (number === 1) {\n                result += 'sat';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'sata';\n            } else {\n                result += 'sati';\n            }\n            return result;\n        case 'dd':\n            if (number === 1) {\n                result += 'dan';\n            } else {\n                result += 'dana';\n            }\n            return result;\n        case 'MM':\n            if (number === 1) {\n                result += 'mjesec';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'mjeseca';\n            } else {\n                result += 'mjeseci';\n            }\n            return result;\n        case 'yy':\n            if (number === 1) {\n                result += 'godina';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'godine';\n            } else {\n                result += 'godina';\n            }\n            return result;\n        }\n    }\n\n    return moment.defineLocale('bs', {\n        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD. MM. YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                case 0:\n                    return '[u] [nedjelju] [u] LT';\n                case 3:\n                    return '[u] [srijedu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                    return '[prošlu] dddd [u] LT';\n                case 6:\n                    return '[prošle] [subote] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : catalan (ca)\n// author : Juan G. Hurtado : https://github.com/juanghurtado\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ca', {\n        months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n        monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),\n        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextDay : function () {\n                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastDay : function () {\n                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'fa %s',\n            s : 'uns segons',\n            m : 'un minut',\n            mm : '%d minuts',\n            h : 'una hora',\n            hh : '%d hores',\n            d : 'un dia',\n            dd : '%d dies',\n            M : 'un mes',\n            MM : '%d mesos',\n            y : 'un any',\n            yy : '%d anys'\n        },\n        ordinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal : function (number, period) {\n            var output = (number === 1) ? 'r' :\n                (number === 2) ? 'n' :\n                (number === 3) ? 'r' :\n                (number === 4) ? 't' : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : czech (cs)\n// author : petrbela : https://github.com/petrbela\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n\n    function plural(n) {\n        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n        case 's':  // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n        case 'm':  // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'minuty' : 'minut');\n            } else {\n                return result + 'minutami';\n            }\n            break;\n        case 'h':  // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'hodiny' : 'hodin');\n            } else {\n                return result + 'hodinami';\n            }\n            break;\n        case 'd':  // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'dny' : 'dní');\n            } else {\n                return result + 'dny';\n            }\n            break;\n        case 'M':  // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'měsíce' : 'měsíců');\n            } else {\n                return result + 'měsíci';\n            }\n            break;\n        case 'y':  // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'roky' : 'let');\n            } else {\n                return result + 'lety';\n            }\n            break;\n        }\n    }\n\n    return moment.defineLocale('cs', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParse : (function (months, monthsShort) {\n            var i, _monthsParse = [];\n            for (i = 0; i < 12; i++) {\n                // use custom parser to solve problem with July (červenec)\n                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n            }\n            return _monthsParse;\n        }(months, monthsShort)),\n        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[v neděli v] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [v] LT';\n                case 3:\n                    return '[ve středu v] LT';\n                case 4:\n                    return '[ve čtvrtek v] LT';\n                case 5:\n                    return '[v pátek v] LT';\n                case 6:\n                    return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[minulou neděli v] LT';\n                case 1:\n                case 2:\n                    return '[minulé] dddd [v] LT';\n                case 3:\n                    return '[minulou středu v] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [v] LT';\n                case 6:\n                    return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'před %s',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse : /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : chuvash (cv)\n// author : Anatoly Mironov : https://github.com/mirontoli\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('cv', {\n        months : 'кăрлач_нарăс_пуш_ака_май_çĕртме_утă_çурла_авăн_юпа_чӳк_раштав'.split('_'),\n        monthsShort : 'кăр_нар_пуш_ака_май_çĕр_утă_çур_ав_юпа_чӳк_раш'.split('_'),\n        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кĕçнерникун_эрнекун_шăматкун'.split('_'),\n        weekdaysShort : 'выр_тун_ытл_юн_кĕç_эрн_шăм'.split('_'),\n        weekdaysMin : 'вр_тн_ыт_юн_кç_эр_шм'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ]',\n            LLL : 'YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT',\n            LLLL : 'dddd, YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT'\n        },\n        calendar : {\n            sameDay: '[Паян] LT [сехетре]',\n            nextDay: '[Ыран] LT [сехетре]',\n            lastDay: '[Ĕнер] LT [сехетре]',\n            nextWeek: '[Çитес] dddd LT [сехетре]',\n            lastWeek: '[Иртнĕ] dddd LT [сехетре]',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (output) {\n                var affix = /сехет$/i.exec(output) ? 'рен' : /çул$/i.exec(output) ? 'тан' : 'ран';\n                return output + affix;\n            },\n            past : '%s каялла',\n            s : 'пĕр-ик çеккунт',\n            m : 'пĕр минут',\n            mm : '%d минут',\n            h : 'пĕр сехет',\n            hh : '%d сехет',\n            d : 'пĕр кун',\n            dd : '%d кун',\n            M : 'пĕр уйăх',\n            MM : '%d уйăх',\n            y : 'пĕр çул',\n            yy : '%d çул'\n        },\n        ordinalParse: /\\d{1,2}-мĕш/,\n        ordinal : '%d-мĕш',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Welsh (cy)\n// author : Robert Allen\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('cy', {\n        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),\n        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),\n        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),\n        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n        // time formats are the same as en-gb\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS : 'LT:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY LT',\n            LLLL: 'dddd, D MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[Heddiw am] LT',\n            nextDay: '[Yfory am] LT',\n            nextWeek: 'dddd [am] LT',\n            lastDay: '[Ddoe am] LT',\n            lastWeek: 'dddd [diwethaf am] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'mewn %s',\n            past: '%s yn ôl',\n            s: 'ychydig eiliadau',\n            m: 'munud',\n            mm: '%d munud',\n            h: 'awr',\n            hh: '%d awr',\n            d: 'diwrnod',\n            dd: '%d diwrnod',\n            M: 'mis',\n            MM: '%d mis',\n            y: 'blwyddyn',\n            yy: '%d flynedd'\n        },\n        ordinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n        ordinal: function (number) {\n            var b = number,\n                output = '',\n                lookup = [\n                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed\n                ];\n\n            if (b > 20) {\n                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                    output = 'fed'; // not 30ain, 70ain or 90ain\n                } else {\n                    output = 'ain';\n                }\n            } else if (b > 0) {\n                output = lookup[b];\n            }\n\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : danish (da)\n// author : Ulrik Nielsen : https://github.com/mrbase\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('da', {\n        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd [d.] D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[I dag kl.] LT',\n            nextDay : '[I morgen kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[I går kl.] LT',\n            lastWeek : '[sidste] dddd [kl] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'få sekunder',\n            m : 'et minut',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dage',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'et år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : austrian german (de-at)\n// author : lluchs : https://github.com/lluchs\n// author: Menelion Elensúle: https://github.com/Oire\n// author : Martin Groller : https://github.com/MadMG\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    return moment.defineLocale('de-at', {\n        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[Morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[Gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : german (de)\n// author : lluchs : https://github.com/lluchs\n// author: Menelion Elensúle: https://github.com/Oire\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    return moment.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[Morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[Gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : modern greek (el)\n// author : Aggelos Karalias : https://github.com/mehiel\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('el', {\n        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n        months : function (momentToFormat, format) {\n            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM : function (input) {\n            return ((input + '').toLowerCase()[0] === 'μ');\n        },\n        meridiemParse : /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendarEl : {\n            sameDay : '[Σήμερα {}] LT',\n            nextDay : '[Αύριο {}] LT',\n            nextWeek : 'dddd [{}] LT',\n            lastDay : '[Χθες {}] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        calendar : function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n\n            if (typeof output === 'function') {\n                output = output.apply(mom);\n            }\n\n            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));\n        },\n        relativeTime : {\n            future : 'σε %s',\n            past : '%s πριν',\n            s : 'λίγα δευτερόλεπτα',\n            m : 'ένα λεπτό',\n            mm : '%d λεπτά',\n            h : 'μία ώρα',\n            hh : '%d ώρες',\n            d : 'μία μέρα',\n            dd : '%d μέρες',\n            M : 'ένας μήνας',\n            MM : '%d μήνες',\n            y : 'ένας χρόνος',\n            yy : '%d χρόνια'\n        },\n        ordinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : australian english (en-au)\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('en-au', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        ordinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : canadian english (en-ca)\n// author : Jonathan Abourbih : https://github.com/jonbca\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('en-ca', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM, YYYY',\n            LLL : 'D MMMM, YYYY LT',\n            LLLL : 'dddd, D MMMM, YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        ordinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : great britain english (en-gb)\n// author : Chris Gedrim : https://github.com/chrisgedrim\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('en-gb', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        ordinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : esperanto (eo)\n// author : Colin Dean : https://github.com/colindean\n// komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.\n//          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('eo', {\n        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),\n        weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),\n        weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),\n        weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D[-an de] MMMM, YYYY',\n            LLL : 'D[-an de] MMMM, YYYY LT',\n            LLLL : 'dddd, [la] D[-an de] MMMM, YYYY LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'p.t.m.' : 'P.T.M.';\n            } else {\n                return isLower ? 'a.t.m.' : 'A.T.M.';\n            }\n        },\n        calendar : {\n            sameDay : '[Hodiaŭ je] LT',\n            nextDay : '[Morgaŭ je] LT',\n            nextWeek : 'dddd [je] LT',\n            lastDay : '[Hieraŭ je] LT',\n            lastWeek : '[pasinta] dddd [je] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'je %s',\n            past : 'antaŭ %s',\n            s : 'sekundoj',\n            m : 'minuto',\n            mm : '%d minutoj',\n            h : 'horo',\n            hh : '%d horoj',\n            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo\n            dd : '%d tagoj',\n            M : 'monato',\n            MM : '%d monatoj',\n            y : 'jaro',\n            yy : '%d jaroj'\n        },\n        ordinalParse: /\\d{1,2}a/,\n        ordinal : '%da',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : spanish (es)\n// author : Julio Napurí : https://github.com/julionc\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    return moment.defineLocale('es', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'Do_Lu_Ma_Mi_Ju_Vi_Sá'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY LT',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY LT'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        ordinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : estonian (et)\n// author : Henry Kehlmann : https://github.com/madhenry\n// improvements : Illimar Tambek : https://github.com/ragulka\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n            'm' : ['ühe minuti', 'üks minut'],\n            'mm': [number + ' minuti', number + ' minutit'],\n            'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n            'hh': [number + ' tunni', number + ' tundi'],\n            'd' : ['ühe päeva', 'üks päev'],\n            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n            'MM': [number + ' kuu', number + ' kuud'],\n            'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n            'yy': [number + ' aasta', number + ' aastat']\n        };\n        if (withoutSuffix) {\n            return format[key][2] ? format[key][2] : format[key][1];\n        }\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    return moment.defineLocale('et', {\n        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),\n        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),\n        longDateFormat : {\n            LT   : 'H:mm',\n            LTS : 'LT:ss',\n            L    : 'DD.MM.YYYY',\n            LL   : 'D. MMMM YYYY',\n            LLL  : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[Täna,] LT',\n            nextDay  : '[Homme,] LT',\n            nextWeek : '[Järgmine] dddd LT',\n            lastDay  : '[Eile,] LT',\n            lastWeek : '[Eelmine] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s pärast',\n            past   : '%s tagasi',\n            s      : processRelativeTime,\n            m      : processRelativeTime,\n            mm     : processRelativeTime,\n            h      : processRelativeTime,\n            hh     : processRelativeTime,\n            d      : processRelativeTime,\n            dd     : '%d päeva',\n            M      : processRelativeTime,\n            MM     : processRelativeTime,\n            y      : processRelativeTime,\n            yy     : processRelativeTime\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : euskara (eu)\n// author : Eneko Illarramendi : https://github.com/eillarra\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('eu', {\n        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),\n        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),\n        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),\n        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),\n        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY[ko] MMMM[ren] D[a]',\n            LLL : 'YYYY[ko] MMMM[ren] D[a] LT',\n            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] LT',\n            l : 'YYYY-M-D',\n            ll : 'YYYY[ko] MMM D[a]',\n            lll : 'YYYY[ko] MMM D[a] LT',\n            llll : 'ddd, YYYY[ko] MMM D[a] LT'\n        },\n        calendar : {\n            sameDay : '[gaur] LT[etan]',\n            nextDay : '[bihar] LT[etan]',\n            nextWeek : 'dddd LT[etan]',\n            lastDay : '[atzo] LT[etan]',\n            lastWeek : '[aurreko] dddd LT[etan]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s barru',\n            past : 'duela %s',\n            s : 'segundo batzuk',\n            m : 'minutu bat',\n            mm : '%d minutu',\n            h : 'ordu bat',\n            hh : '%d ordu',\n            d : 'egun bat',\n            dd : '%d egun',\n            M : 'hilabete bat',\n            MM : '%d hilabete',\n            y : 'urte bat',\n            yy : '%d urte'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Persian (fa)\n// author : Ebrahim Byagowi : https://github.com/ebraminio\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '۱',\n        '2': '۲',\n        '3': '۳',\n        '4': '۴',\n        '5': '۵',\n        '6': '۶',\n        '7': '۷',\n        '8': '۸',\n        '9': '۹',\n        '0': '۰'\n    }, numberMap = {\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n        '۰': '0'\n    };\n\n    return moment.defineLocale('fa', {\n        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        weekdays : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysShort : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'قبل از ظهر';\n            } else {\n                return 'بعد از ظهر';\n            }\n        },\n        calendar : {\n            sameDay : '[امروز ساعت] LT',\n            nextDay : '[فردا ساعت] LT',\n            nextWeek : 'dddd [ساعت] LT',\n            lastDay : '[دیروز ساعت] LT',\n            lastWeek : 'dddd [پیش] [ساعت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'در %s',\n            past : '%s پیش',\n            s : 'چندین ثانیه',\n            m : 'یک دقیقه',\n            mm : '%d دقیقه',\n            h : 'یک ساعت',\n            hh : '%d ساعت',\n            d : 'یک روز',\n            dd : '%d روز',\n            M : 'یک ماه',\n            MM : '%d ماه',\n            y : 'یک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/[۰-۹]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        ordinalParse: /\\d{1,2}م/,\n        ordinal : '%dم',\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : finnish (fi)\n// author : Tarmo Aidantausta : https://github.com/bleadof\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n        numbersFuture = [\n            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n            numbersPast[7], numbersPast[8], numbersPast[9]\n        ];\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = '';\n        switch (key) {\n        case 's':\n            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n        case 'm':\n            return isFuture ? 'minuutin' : 'minuutti';\n        case 'mm':\n            result = isFuture ? 'minuutin' : 'minuuttia';\n            break;\n        case 'h':\n            return isFuture ? 'tunnin' : 'tunti';\n        case 'hh':\n            result = isFuture ? 'tunnin' : 'tuntia';\n            break;\n        case 'd':\n            return isFuture ? 'päivän' : 'päivä';\n        case 'dd':\n            result = isFuture ? 'päivän' : 'päivää';\n            break;\n        case 'M':\n            return isFuture ? 'kuukauden' : 'kuukausi';\n        case 'MM':\n            result = isFuture ? 'kuukauden' : 'kuukautta';\n            break;\n        case 'y':\n            return isFuture ? 'vuoden' : 'vuosi';\n        case 'yy':\n            result = isFuture ? 'vuoden' : 'vuotta';\n            break;\n        }\n        result = verbalNumber(number, isFuture) + ' ' + result;\n        return result;\n    }\n\n    function verbalNumber(number, isFuture) {\n        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;\n    }\n\n    return moment.defineLocale('fi', {\n        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'Do MMMM[ta] YYYY',\n            LLL : 'Do MMMM[ta] YYYY, [klo] LT',\n            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] LT',\n            l : 'D.M.YYYY',\n            ll : 'Do MMM YYYY',\n            lll : 'Do MMM YYYY, [klo] LT',\n            llll : 'ddd, Do MMM YYYY, [klo] LT'\n        },\n        calendar : {\n            sameDay : '[tänään] [klo] LT',\n            nextDay : '[huomenna] [klo] LT',\n            nextWeek : 'dddd [klo] LT',\n            lastDay : '[eilen] [klo] LT',\n            lastWeek : '[viime] dddd[na] [klo] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s päästä',\n            past : '%s sitten',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : faroese (fo)\n// author : Ragnar Johannesen : https://github.com/ragnar123\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('fo', {\n        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),\n        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D. MMMM, YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Í dag kl.] LT',\n            nextDay : '[Í morgin kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[Í gjár kl.] LT',\n            lastWeek : '[síðstu] dddd [kl] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'um %s',\n            past : '%s síðani',\n            s : 'fá sekund',\n            m : 'ein minutt',\n            mm : '%d minuttir',\n            h : 'ein tími',\n            hh : '%d tímar',\n            d : 'ein dagur',\n            dd : '%d dagar',\n            M : 'ein mánaði',\n            MM : '%d mánaðir',\n            y : 'eitt ár',\n            yy : '%d ár'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : canadian french (fr-ca)\n// author : Jonathan Abourbih : https://github.com/jonbca\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('fr-ca', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Aujourd\\'hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        ordinalParse: /\\d{1,2}(er|)/,\n        ordinal : function (number) {\n            return number + (number === 1 ? 'er' : '');\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : french (fr)\n// author : John Fischer : https://github.com/jfroffice\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('fr', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Aujourd\\'hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        ordinalParse: /\\d{1,2}(er|)/,\n        ordinal : function (number) {\n            return number + (number === 1 ? 'er' : '');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : galician (gl)\n// author : Juan G. Hurtado : https://github.com/juanghurtado\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('gl', {\n        months : 'Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro'.split('_'),\n        monthsShort : 'Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.'.split('_'),\n        weekdays : 'Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado'.split('_'),\n        weekdaysShort : 'Dom._Lun._Mar._Mér._Xov._Ven._Sáb.'.split('_'),\n        weekdaysMin : 'Do_Lu_Ma_Mé_Xo_Ve_Sá'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            lastDay : function () {\n                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';\n            },\n            lastWeek : function () {\n                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (str) {\n                if (str === 'uns segundos') {\n                    return 'nuns segundos';\n                }\n                return 'en ' + str;\n            },\n            past : 'hai %s',\n            s : 'uns segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'unha hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un ano',\n            yy : '%d anos'\n        },\n        ordinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Hebrew (he)\n// author : Tomer Cohen : https://github.com/tomer\n// author : Moshe Simantov : https://github.com/DevelopmentIL\n// author : Tal Ater : https://github.com/TalAter\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('he', {\n        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [ב]MMMM YYYY',\n            LLL : 'D [ב]MMMM YYYY LT',\n            LLLL : 'dddd, D [ב]MMMM YYYY LT',\n            l : 'D/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY LT',\n            llll : 'ddd, D MMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[היום ב־]LT',\n            nextDay : '[מחר ב־]LT',\n            nextWeek : 'dddd [בשעה] LT',\n            lastDay : '[אתמול ב־]LT',\n            lastWeek : '[ביום] dddd [האחרון בשעה] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'בעוד %s',\n            past : 'לפני %s',\n            s : 'מספר שניות',\n            m : 'דקה',\n            mm : '%d דקות',\n            h : 'שעה',\n            hh : function (number) {\n                if (number === 2) {\n                    return 'שעתיים';\n                }\n                return number + ' שעות';\n            },\n            d : 'יום',\n            dd : function (number) {\n                if (number === 2) {\n                    return 'יומיים';\n                }\n                return number + ' ימים';\n            },\n            M : 'חודש',\n            MM : function (number) {\n                if (number === 2) {\n                    return 'חודשיים';\n                }\n                return number + ' חודשים';\n            },\n            y : 'שנה',\n            yy : function (number) {\n                if (number === 2) {\n                    return 'שנתיים';\n                }\n                return number + ' שנים';\n            }\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : hindi (hi)\n// author : Mayank Singhal : https://github.com/mayanksinghal\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    return moment.defineLocale('hi', {\n        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm बजे',\n            LTS : 'A h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[कल] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[कल] LT',\n            lastWeek : '[पिछले] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s में',\n            past : '%s पहले',\n            s : 'कुछ ही क्षण',\n            m : 'एक मिनट',\n            mm : '%d मिनट',\n            h : 'एक घंटा',\n            hh : '%d घंटे',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महीने',\n            MM : '%d महीने',\n            y : 'एक वर्ष',\n            yy : '%d वर्ष'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात';\n            } else if (hour < 10) {\n                return 'सुबह';\n            } else if (hour < 17) {\n                return 'दोपहर';\n            } else if (hour < 20) {\n                return 'शाम';\n            } else {\n                return 'रात';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : hrvatski (hr)\n// author : Bojan Marković : https://github.com/bmarkovic\n\n// based on (sl) translation by Robert Sedovšek\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n        case 'mm':\n            if (number === 1) {\n                result += 'minuta';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'minute';\n            } else {\n                result += 'minuta';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'jedan sat' : 'jednog sata';\n        case 'hh':\n            if (number === 1) {\n                result += 'sat';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'sata';\n            } else {\n                result += 'sati';\n            }\n            return result;\n        case 'dd':\n            if (number === 1) {\n                result += 'dan';\n            } else {\n                result += 'dana';\n            }\n            return result;\n        case 'MM':\n            if (number === 1) {\n                result += 'mjesec';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'mjeseca';\n            } else {\n                result += 'mjeseci';\n            }\n            return result;\n        case 'yy':\n            if (number === 1) {\n                result += 'godina';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'godine';\n            } else {\n                result += 'godina';\n            }\n            return result;\n        }\n    }\n\n    return moment.defineLocale('hr', {\n        months : 'sječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_'),\n        monthsShort : 'sje._vel._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD. MM. YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                case 0:\n                    return '[u] [nedjelju] [u] LT';\n                case 3:\n                    return '[u] [srijedu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                    return '[prošlu] dddd [u] LT';\n                case 6:\n                    return '[prošle] [subote] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : hungarian (hu)\n// author : Adam Brunner : https://github.com/adambrunner\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var num = number,\n            suffix;\n\n        switch (key) {\n        case 's':\n            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n        case 'm':\n            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'mm':\n            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'h':\n            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'hh':\n            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'd':\n            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'dd':\n            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'M':\n            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'MM':\n            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'y':\n            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n        case 'yy':\n            return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n        }\n\n        return '';\n    }\n\n    function week(isFuture) {\n        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';\n    }\n\n    return moment.defineLocale('hu', {\n        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY. MMMM D.',\n            LLL : 'YYYY. MMMM D., LT',\n            LLLL : 'YYYY. MMMM D., dddd LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower === true ? 'de' : 'DE';\n            } else {\n                return isLower === true ? 'du' : 'DU';\n            }\n        },\n        calendar : {\n            sameDay : '[ma] LT[-kor]',\n            nextDay : '[holnap] LT[-kor]',\n            nextWeek : function () {\n                return week.call(this, true);\n            },\n            lastDay : '[tegnap] LT[-kor]',\n            lastWeek : function () {\n                return week.call(this, false);\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s múlva',\n            past : '%s',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Armenian (hy-am)\n// author : Armendarabyan : https://github.com/armendarabyan\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_'),\n            'accusative': 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function monthsShortCaseReplace(m, format) {\n        var monthsShort = 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_');\n\n        return monthsShort[m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_');\n\n        return weekdays[m.day()];\n    }\n\n    return moment.defineLocale('hy-am', {\n        months : monthsCaseReplace,\n        monthsShort : monthsShortCaseReplace,\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY թ.',\n            LLL : 'D MMMM YYYY թ., LT',\n            LLLL : 'dddd, D MMMM YYYY թ., LT'\n        },\n        calendar : {\n            sameDay: '[այսօր] LT',\n            nextDay: '[վաղը] LT',\n            lastDay: '[երեկ] LT',\n            nextWeek: function () {\n                return 'dddd [օրը ժամը] LT';\n            },\n            lastWeek: function () {\n                return '[անցած] dddd [օրը ժամը] LT';\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s հետո',\n            past : '%s առաջ',\n            s : 'մի քանի վայրկյան',\n            m : 'րոպե',\n            mm : '%d րոպե',\n            h : 'ժամ',\n            hh : '%d ժամ',\n            d : 'օր',\n            dd : '%d օր',\n            M : 'ամիս',\n            MM : '%d ամիս',\n            y : 'տարի',\n            yy : '%d տարի'\n        },\n\n        meridiem : function (hour) {\n            if (hour < 4) {\n                return 'գիշերվա';\n            } else if (hour < 12) {\n                return 'առավոտվա';\n            } else if (hour < 17) {\n                return 'ցերեկվա';\n            } else {\n                return 'երեկոյան';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'DDD':\n            case 'w':\n            case 'W':\n            case 'DDDo':\n                if (number === 1) {\n                    return number + '-ին';\n                }\n                return number + '-րդ';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Bahasa Indonesia (id)\n// author : Mohammad Satrio Utomo : https://github.com/tyok\n// reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('id', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'LT.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] LT',\n            LLLL : 'dddd, D MMMM YYYY [pukul] LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Besok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kemarin pukul] LT',\n            lastWeek : 'dddd [lalu pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lalu',\n            s : 'beberapa detik',\n            m : 'semenit',\n            mm : '%d menit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : icelandic (is)\n// author : Hinrik Örn Sigurðsson : https://github.com/hinrik\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function plural(n) {\n        if (n % 100 === 11) {\n            return true;\n        } else if (n % 10 === 1) {\n            return false;\n        }\n        return true;\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n        case 's':\n            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n        case 'm':\n            return withoutSuffix ? 'mínúta' : 'mínútu';\n        case 'mm':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n            } else if (withoutSuffix) {\n                return result + 'mínúta';\n            }\n            return result + 'mínútu';\n        case 'hh':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n            }\n            return result + 'klukkustund';\n        case 'd':\n            if (withoutSuffix) {\n                return 'dagur';\n            }\n            return isFuture ? 'dag' : 'degi';\n        case 'dd':\n            if (plural(number)) {\n                if (withoutSuffix) {\n                    return result + 'dagar';\n                }\n                return result + (isFuture ? 'daga' : 'dögum');\n            } else if (withoutSuffix) {\n                return result + 'dagur';\n            }\n            return result + (isFuture ? 'dag' : 'degi');\n        case 'M':\n            if (withoutSuffix) {\n                return 'mánuður';\n            }\n            return isFuture ? 'mánuð' : 'mánuði';\n        case 'MM':\n            if (plural(number)) {\n                if (withoutSuffix) {\n                    return result + 'mánuðir';\n                }\n                return result + (isFuture ? 'mánuði' : 'mánuðum');\n            } else if (withoutSuffix) {\n                return result + 'mánuður';\n            }\n            return result + (isFuture ? 'mánuð' : 'mánuði');\n        case 'y':\n            return withoutSuffix || isFuture ? 'ár' : 'ári';\n        case 'yy':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n            }\n            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n        }\n    }\n\n    return moment.defineLocale('is', {\n        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),\n        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] LT',\n            LLLL : 'dddd, D. MMMM YYYY [kl.] LT'\n        },\n        calendar : {\n            sameDay : '[í dag kl.] LT',\n            nextDay : '[á morgun kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[í gær kl.] LT',\n            lastWeek : '[síðasta] dddd [kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'eftir %s',\n            past : 'fyrir %s síðan',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : 'klukkustund',\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : italian (it)\n// author : Lorenzo : https://github.com/aliem\n// author: Mattia Larentis: https://github.com/nostalgiaz\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('it', {\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),\n        weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),\n        weekdaysMin : 'D_L_Ma_Me_G_V_S'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past : '%s fa',\n            s : 'alcuni secondi',\n            m : 'un minuto',\n            mm : '%d minuti',\n            h : 'un\\'ora',\n            hh : '%d ore',\n            d : 'un giorno',\n            dd : '%d giorni',\n            M : 'un mese',\n            MM : '%d mesi',\n            y : 'un anno',\n            yy : '%d anni'\n        },\n        ordinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : japanese (ja)\n// author : LI Long : https://github.com/baryon\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ja', {\n        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),\n        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),\n        longDateFormat : {\n            LT : 'Ah時m分',\n            LTS : 'LTs秒',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日LT',\n            LLLL : 'YYYY年M月D日LT dddd'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return '午前';\n            } else {\n                return '午後';\n            }\n        },\n        calendar : {\n            sameDay : '[今日] LT',\n            nextDay : '[明日] LT',\n            nextWeek : '[来週]dddd LT',\n            lastDay : '[昨日] LT',\n            lastWeek : '[前週]dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s後',\n            past : '%s前',\n            s : '数秒',\n            m : '1分',\n            mm : '%d分',\n            h : '1時間',\n            hh : '%d時間',\n            d : '1日',\n            dd : '%d日',\n            M : '1ヶ月',\n            MM : '%dヶ月',\n            y : '1年',\n            yy : '%d年'\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Georgian (ka)\n// author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n            'accusative': 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')\n        },\n\n        nounCase = (/D[oD] *MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n            'accusative': 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_')\n        },\n\n        nounCase = (/(წინა|შემდეგ)/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    return moment.defineLocale('ka', {\n        months : monthsCaseReplace,\n        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[დღეს] LT[-ზე]',\n            nextDay : '[ხვალ] LT[-ზე]',\n            lastDay : '[გუშინ] LT[-ზე]',\n            nextWeek : '[შემდეგ] dddd LT[-ზე]',\n            lastWeek : '[წინა] dddd LT-ზე',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?\n                    s.replace(/ი$/, 'ში') :\n                    s + 'ში';\n            },\n            past : function (s) {\n                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {\n                    return s.replace(/(ი|ე)$/, 'ის წინ');\n                }\n                if ((/წელი/).test(s)) {\n                    return s.replace(/წელი$/, 'წლის წინ');\n                }\n            },\n            s : 'რამდენიმე წამი',\n            m : 'წუთი',\n            mm : '%d წუთი',\n            h : 'საათი',\n            hh : '%d საათი',\n            d : 'დღე',\n            dd : '%d დღე',\n            M : 'თვე',\n            MM : '%d თვე',\n            y : 'წელი',\n            yy : '%d წელი'\n        },\n        ordinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n        ordinal : function (number) {\n            if (number === 0) {\n                return number;\n            }\n\n            if (number === 1) {\n                return number + '-ლი';\n            }\n\n            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {\n                return 'მე-' + number;\n            }\n\n            return number + '-ე';\n        },\n        week : {\n            dow : 1,\n            doy : 7\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : khmer (km)\n// author : Kruy Vanna : https://github.com/kruyvanna\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('km', {\n        months: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n        monthsShort: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS : 'LT:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY LT',\n            LLLL: 'dddd, D MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[ថ្ងៃនៈ ម៉ោង] LT',\n            nextDay: '[ស្អែក ម៉ោង] LT',\n            nextWeek: 'dddd [ម៉ោង] LT',\n            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%sទៀត',\n            past: '%sមុន',\n            s: 'ប៉ុន្មានវិនាទី',\n            m: 'មួយនាទី',\n            mm: '%d នាទី',\n            h: 'មួយម៉ោង',\n            hh: '%d ម៉ោង',\n            d: 'មួយថ្ងៃ',\n            dd: '%d ថ្ងៃ',\n            M: 'មួយខែ',\n            MM: '%d ខែ',\n            y: 'មួយឆ្នាំ',\n            yy: '%d ឆ្នាំ'\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : korean (ko)\n//\n// authors\n//\n// - Kyungwook, Park : https://github.com/kyungw00k\n// - Jeeeyul Lee <jeeeyul@gmail.com>\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ko', {\n        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat : {\n            LT : 'A h시 m분',\n            LTS : 'A h시 m분 s초',\n            L : 'YYYY.MM.DD',\n            LL : 'YYYY년 MMMM D일',\n            LLL : 'YYYY년 MMMM D일 LT',\n            LLLL : 'YYYY년 MMMM D일 dddd LT'\n        },\n        meridiem : function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        },\n        calendar : {\n            sameDay : '오늘 LT',\n            nextDay : '내일 LT',\n            nextWeek : 'dddd LT',\n            lastDay : '어제 LT',\n            lastWeek : '지난주 dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s 후',\n            past : '%s 전',\n            s : '몇초',\n            ss : '%d초',\n            m : '일분',\n            mm : '%d분',\n            h : '한시간',\n            hh : '%d시간',\n            d : '하루',\n            dd : '%d일',\n            M : '한달',\n            MM : '%d달',\n            y : '일년',\n            yy : '%d년'\n        },\n        ordinalParse : /\\d{1,2}일/,\n        ordinal : '%d일',\n        meridiemParse : /(오전|오후)/,\n        isPM : function (token) {\n            return token === '오후';\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Luxembourgish (lb)\n// author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz\n\n// Note: Luxembourgish has a very particular phonological rule ('Eifeler Regel') that causes the\n// deletion of the final 'n' in certain contexts. That's what the 'eifelerRegelAppliesToWeekday'\n// and 'eifelerRegelAppliesToNumber' methods are meant for\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eng Minutt', 'enger Minutt'],\n            'h': ['eng Stonn', 'enger Stonn'],\n            'd': ['een Dag', 'engem Dag'],\n            'M': ['ee Mount', 'engem Mount'],\n            'y': ['ee Joer', 'engem Joer']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    function processFutureTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'a ' + string;\n        }\n        return 'an ' + string;\n    }\n\n    function processPastTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'viru ' + string;\n        }\n        return 'virun ' + string;\n    }\n\n    /**\n     * Returns true if the word before the given number loses the '-n' ending.\n     * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n     *\n     * @param number {integer}\n     * @returns {boolean}\n     */\n    function eifelerRegelAppliesToNumber(number) {\n        number = parseInt(number, 10);\n        if (isNaN(number)) {\n            return false;\n        }\n        if (number < 0) {\n            // Negative Number --> always true\n            return true;\n        } else if (number < 10) {\n            // Only 1 digit\n            if (4 <= number && number <= 7) {\n                return true;\n            }\n            return false;\n        } else if (number < 100) {\n            // 2 digits\n            var lastDigit = number % 10, firstDigit = number / 10;\n            if (lastDigit === 0) {\n                return eifelerRegelAppliesToNumber(firstDigit);\n            }\n            return eifelerRegelAppliesToNumber(lastDigit);\n        } else if (number < 10000) {\n            // 3 or 4 digits --> recursively check first digit\n            while (number >= 10) {\n                number = number / 10;\n            }\n            return eifelerRegelAppliesToNumber(number);\n        } else {\n            // Anything larger than 4 digits: recursively check first n-3 digits\n            number = number / 1000;\n            return eifelerRegelAppliesToNumber(number);\n        }\n    }\n\n    return moment.defineLocale('lb', {\n        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm [Auer]',\n            LTS: 'H:mm:ss [Auer]',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY LT',\n            LLLL: 'dddd, D. MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[Haut um] LT',\n            sameElse: 'L',\n            nextDay: '[Muer um] LT',\n            nextWeek: 'dddd [um] LT',\n            lastDay: '[Gëschter um] LT',\n            lastWeek: function () {\n                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n                switch (this.day()) {\n                    case 2:\n                    case 4:\n                        return '[Leschten] dddd [um] LT';\n                    default:\n                        return '[Leschte] dddd [um] LT';\n                }\n            }\n        },\n        relativeTime : {\n            future : processFutureTime,\n            past : processPastTime,\n            s : 'e puer Sekonnen',\n            m : processRelativeTime,\n            mm : '%d Minutten',\n            h : processRelativeTime,\n            hh : '%d Stonnen',\n            d : processRelativeTime,\n            dd : '%d Deeg',\n            M : processRelativeTime,\n            MM : '%d Méint',\n            y : processRelativeTime,\n            yy : '%d Joer'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Lithuanian (lt)\n// author : Mindaugas Mozūras : https://github.com/mmozuras\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var units = {\n        'm' : 'minutė_minutės_minutę',\n        'mm': 'minutės_minučių_minutes',\n        'h' : 'valanda_valandos_valandą',\n        'hh': 'valandos_valandų_valandas',\n        'd' : 'diena_dienos_dieną',\n        'dd': 'dienos_dienų_dienas',\n        'M' : 'mėnuo_mėnesio_mėnesį',\n        'MM': 'mėnesiai_mėnesių_mėnesius',\n        'y' : 'metai_metų_metus',\n        'yy': 'metai_metų_metus'\n    },\n    weekDays = 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_');\n\n    function translateSeconds(number, withoutSuffix, key, isFuture) {\n        if (withoutSuffix) {\n            return 'kelios sekundės';\n        } else {\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n        }\n    }\n\n    function translateSingular(number, withoutSuffix, key, isFuture) {\n        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n    }\n\n    function special(number) {\n        return number % 10 === 0 || (number > 10 && number < 20);\n    }\n\n    function forms(key) {\n        return units[key].split('_');\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        if (number === 1) {\n            return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n        } else if (withoutSuffix) {\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n        } else {\n            if (isFuture) {\n                return result + forms(key)[1];\n            } else {\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n            }\n        }\n    }\n\n    function relativeWeekDay(moment, format) {\n        var nominative = format.indexOf('dddd HH:mm') === -1,\n            weekDay = weekDays[moment.day()];\n\n        return nominative ? weekDay : weekDay.substring(0, weekDay.length - 2) + 'į';\n    }\n\n    return moment.defineLocale('lt', {\n        months : 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n        weekdays : relativeWeekDay,\n        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY [m.] MMMM D [d.]',\n            LLL : 'YYYY [m.] MMMM D [d.], LT [val.]',\n            LLLL : 'YYYY [m.] MMMM D [d.], dddd, LT [val.]',\n            l : 'YYYY-MM-DD',\n            ll : 'YYYY [m.] MMMM D [d.]',\n            lll : 'YYYY [m.] MMMM D [d.], LT [val.]',\n            llll : 'YYYY [m.] MMMM D [d.], ddd, LT [val.]'\n        },\n        calendar : {\n            sameDay : '[Šiandien] LT',\n            nextDay : '[Rytoj] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[Vakar] LT',\n            lastWeek : '[Praėjusį] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'po %s',\n            past : 'prieš %s',\n            s : translateSeconds,\n            m : translateSingular,\n            mm : translate,\n            h : translateSingular,\n            hh : translate,\n            d : translateSingular,\n            dd : translate,\n            M : translateSingular,\n            MM : translate,\n            y : translateSingular,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}-oji/,\n        ordinal : function (number) {\n            return number + '-oji';\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : latvian (lv)\n// author : Kristaps Karlsons : https://github.com/skakri\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var units = {\n        'mm': 'minūti_minūtes_minūte_minūtes',\n        'hh': 'stundu_stundas_stunda_stundas',\n        'dd': 'dienu_dienas_diena_dienas',\n        'MM': 'mēnesi_mēnešus_mēnesis_mēneši',\n        'yy': 'gadu_gadus_gads_gadi'\n    };\n\n    function format(word, number, withoutSuffix) {\n        var forms = word.split('_');\n        if (withoutSuffix) {\n            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];\n        } else {\n            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];\n        }\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        return number + ' ' + format(units[key], number, withoutSuffix);\n    }\n\n    return moment.defineLocale('lv', {\n        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),\n        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'YYYY. [gada] D. MMMM',\n            LLL : 'YYYY. [gada] D. MMMM, LT',\n            LLLL : 'YYYY. [gada] D. MMMM, dddd, LT'\n        },\n        calendar : {\n            sameDay : '[Šodien pulksten] LT',\n            nextDay : '[Rīt pulksten] LT',\n            nextWeek : 'dddd [pulksten] LT',\n            lastDay : '[Vakar pulksten] LT',\n            lastWeek : '[Pagājušā] dddd [pulksten] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s vēlāk',\n            past : '%s agrāk',\n            s : 'dažas sekundes',\n            m : 'minūti',\n            mm : relativeTimeWithPlural,\n            h : 'stundu',\n            hh : relativeTimeWithPlural,\n            d : 'dienu',\n            dd : relativeTimeWithPlural,\n            M : 'mēnesi',\n            MM : relativeTimeWithPlural,\n            y : 'gadu',\n            yy : relativeTimeWithPlural\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : macedonian (mk)\n// author : Borislav Mickov : https://github.com/B0k0\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('mk', {\n        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Денес во] LT',\n            nextDay : '[Утре во] LT',\n            nextWeek : 'dddd [во] LT',\n            lastDay : '[Вчера во] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[Во изминатата] dddd [во] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[Во изминатиот] dddd [во] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'после %s',\n            past : 'пред %s',\n            s : 'неколку секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дена',\n            M : 'месец',\n            MM : '%d месеци',\n            y : 'година',\n            yy : '%d години'\n        },\n        ordinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : malayalam (ml)\n// author : Floyd Pink : https://github.com/floydpink\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ml', {\n        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),\n        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),\n        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),\n        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm -നു',\n            LTS : 'A h:mm:ss -നു',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[ഇന്ന്] LT',\n            nextDay : '[നാളെ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ഇന്നലെ] LT',\n            lastWeek : '[കഴിഞ്ഞ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s കഴിഞ്ഞ്',\n            past : '%s മുൻപ്',\n            s : 'അൽപ നിമിഷങ്ങൾ',\n            m : 'ഒരു മിനിറ്റ്',\n            mm : '%d മിനിറ്റ്',\n            h : 'ഒരു മണിക്കൂർ',\n            hh : '%d മണിക്കൂർ',\n            d : 'ഒരു ദിവസം',\n            dd : '%d ദിവസം',\n            M : 'ഒരു മാസം',\n            MM : '%d മാസം',\n            y : 'ഒരു വർഷം',\n            yy : '%d വർഷം'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'രാത്രി';\n            } else if (hour < 12) {\n                return 'രാവിലെ';\n            } else if (hour < 17) {\n                return 'ഉച്ച കഴിഞ്ഞ്';\n            } else if (hour < 20) {\n                return 'വൈകുന്നേരം';\n            } else {\n                return 'രാത്രി';\n            }\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Marathi (mr)\n// author : Harshad Kale : https://github.com/kalehv\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    return moment.defineLocale('mr', {\n        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm वाजता',\n            LTS : 'A h:mm:ss वाजता',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[उद्या] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[काल] LT',\n            lastWeek: '[मागील] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s नंतर',\n            past : '%s पूर्वी',\n            s : 'सेकंद',\n            m: 'एक मिनिट',\n            mm: '%d मिनिटे',\n            h : 'एक तास',\n            hh : '%d तास',\n            d : 'एक दिवस',\n            dd : '%d दिवस',\n            M : 'एक महिना',\n            MM : '%d महिने',\n            y : 'एक वर्ष',\n            yy : '%d वर्षे'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiem: function (hour, minute, isLower)\n        {\n            if (hour < 4) {\n                return 'रात्री';\n            } else if (hour < 10) {\n                return 'सकाळी';\n            } else if (hour < 17) {\n                return 'दुपारी';\n            } else if (hour < 20) {\n                return 'सायंकाळी';\n            } else {\n                return 'रात्री';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Bahasa Malaysia (ms-MY)\n// author : Weldan Jamili : https://github.com/weldan\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ms-my', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'LT.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] LT',\n            LLLL : 'dddd, D MMMM YYYY [pukul] LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Burmese (my)\n// author : Squar team, mysquar.com\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '၁',\n        '2': '၂',\n        '3': '၃',\n        '4': '၄',\n        '5': '၅',\n        '6': '၆',\n        '7': '၇',\n        '8': '၈',\n        '9': '၉',\n        '0': '၀'\n    }, numberMap = {\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        '၀': '0'\n    };\n    return moment.defineLocale('my', {\n        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),\n        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),\n        weekdaysShort: 'နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        weekdaysMin: 'နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY LT',\n            LLLL: 'dddd D MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[ယနေ.] LT [မှာ]',\n            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n            nextWeek: 'dddd LT [မှာ]',\n            lastDay: '[မနေ.က] LT [မှာ]',\n            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'လာမည့် %s မှာ',\n            past: 'လွန်ခဲ့သော %s က',\n            s: 'စက္ကန်.အနည်းငယ်',\n            m: 'တစ်မိနစ်',\n            mm: '%d မိနစ်',\n            h: 'တစ်နာရီ',\n            hh: '%d နာရီ',\n            d: 'တစ်ရက်',\n            dd: '%d ရက်',\n            M: 'တစ်လ',\n            MM: '%d လ',\n            y: 'တစ်နှစ်',\n            yy: '%d နှစ်'\n        },\n        preparse: function (string) {\n            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : norwegian bokmål (nb)\n// authors : Espen Hovlandsdal : https://github.com/rexxars\n//           Sigurd Gartmann : https://github.com/sigurdga\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('nb', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'søn_man_tirs_ons_tors_fre_lør'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'H.mm',\n            LTS : 'LT.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] LT',\n            LLLL : 'dddd D. MMMM YYYY [kl.] LT'\n        },\n        calendar : {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[forrige] dddd [kl.] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'for %s siden',\n            s : 'noen sekunder',\n            m : 'ett minutt',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dager',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : nepali/nepalese\n// author : suvash : https://github.com/suvash\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    return moment.defineLocale('ne', {\n        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),\n        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),\n        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),\n        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n        weekdaysMin : 'आइ._सो._मङ्_बु._बि._शु._श.'.split('_'),\n        longDateFormat : {\n            LT : 'Aको h:mm बजे',\n            LTS : 'Aको h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 3) {\n                return 'राती';\n            } else if (hour < 10) {\n                return 'बिहान';\n            } else if (hour < 15) {\n                return 'दिउँसो';\n            } else if (hour < 18) {\n                return 'बेलुका';\n            } else if (hour < 20) {\n                return 'साँझ';\n            } else {\n                return 'राती';\n            }\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[भोली] LT',\n            nextWeek : '[आउँदो] dddd[,] LT',\n            lastDay : '[हिजो] LT',\n            lastWeek : '[गएको] dddd[,] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sमा',\n            past : '%s अगाडी',\n            s : 'केही समय',\n            m : 'एक मिनेट',\n            mm : '%d मिनेट',\n            h : 'एक घण्टा',\n            hh : '%d घण्टा',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महिना',\n            MM : '%d महिना',\n            y : 'एक बर्ष',\n            yy : '%d बर्ष'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : dutch (nl)\n// author : Joris Röling : https://github.com/jjupiter\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    return moment.defineLocale('nl', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        ordinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : norwegian nynorsk (nn)\n// author : https://github.com/mechuwind\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('nn', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),\n        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[I dag klokka] LT',\n            nextDay: '[I morgon klokka] LT',\n            nextWeek: 'dddd [klokka] LT',\n            lastDay: '[I går klokka] LT',\n            lastWeek: '[Føregåande] dddd [klokka] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'for %s sidan',\n            s : 'nokre sekund',\n            m : 'eit minutt',\n            mm : '%d minutt',\n            h : 'ein time',\n            hh : '%d timar',\n            d : 'ein dag',\n            dd : '%d dagar',\n            M : 'ein månad',\n            MM : '%d månader',\n            y : 'eit år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : polish (pl)\n// author : Rafal Hirsz : https://github.com/evoL\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),\n        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n\n    function plural(n) {\n        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n    }\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'minuta' : 'minutę';\n        case 'mm':\n            return result + (plural(number) ? 'minuty' : 'minut');\n        case 'h':\n            return withoutSuffix  ? 'godzina'  : 'godzinę';\n        case 'hh':\n            return result + (plural(number) ? 'godziny' : 'godzin');\n        case 'MM':\n            return result + (plural(number) ? 'miesiące' : 'miesięcy');\n        case 'yy':\n            return result + (plural(number) ? 'lata' : 'lat');\n        }\n    }\n\n    return moment.defineLocale('pl', {\n        months : function (momentToFormat, format) {\n            if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n        weekdaysShort : 'nie_pon_wt_śr_czw_pt_sb'.split('_'),\n        weekdaysMin : 'N_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: '[W] dddd [o] LT',\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[W zeszłą niedzielę o] LT';\n                case 3:\n                    return '[W zeszłą środę o] LT';\n                case 6:\n                    return '[W zeszłą sobotę o] LT';\n                default:\n                    return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : '%s temu',\n            s : 'kilka sekund',\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : '1 dzień',\n            dd : '%d dni',\n            M : 'miesiąc',\n            MM : translate,\n            y : 'rok',\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : brazilian portuguese (pt-br)\n// author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('pt-br', {\n        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays : 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split('_'),\n        weekdaysShort : 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),\n        weekdaysMin : 'dom_2ª_3ª_4ª_5ª_6ª_sáb'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY [às] LT',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] LT'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : '%s atrás',\n            s : 'segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        ordinalParse: /\\d{1,2}º/,\n        ordinal : '%dº'\n    });\n}));\n","// moment.js locale configuration\n// locale : portuguese (pt)\n// author : Jefferson : https://github.com/jalex79\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('pt', {\n        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays : 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split('_'),\n        weekdaysShort : 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),\n        weekdaysMin : 'dom_2ª_3ª_4ª_5ª_6ª_sáb'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY LT',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        ordinalParse: /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : romanian (ro)\n// author : Vlad Gurdiga : https://github.com/gurdiga\n// author : Valentin Agachi : https://github.com/avaly\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n                'mm': 'minute',\n                'hh': 'ore',\n                'dd': 'zile',\n                'MM': 'luni',\n                'yy': 'ani'\n            },\n            separator = ' ';\n        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n            separator = ' de ';\n        }\n\n        return number + separator + format[key];\n    }\n\n    return moment.defineLocale('ro', {\n        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[azi la] LT',\n            nextDay: '[mâine la] LT',\n            nextWeek: 'dddd [la] LT',\n            lastDay: '[ieri la] LT',\n            lastWeek: '[fosta] dddd [la] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'peste %s',\n            past : '%s în urmă',\n            s : 'câteva secunde',\n            m : 'un minut',\n            mm : relativeTimeWithPlural,\n            h : 'o oră',\n            hh : relativeTimeWithPlural,\n            d : 'o zi',\n            dd : relativeTimeWithPlural,\n            M : 'o lună',\n            MM : relativeTimeWithPlural,\n            y : 'un an',\n            yy : relativeTimeWithPlural\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : russian (ru)\n// author : Viktorminator : https://github.com/Viktorminator\n// Author : Menelion Elensúle : https://github.com/Oire\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function monthsShortCaseReplace(m, format) {\n        var monthsShort = {\n            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return monthsShort[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')\n        },\n\n        nounCase = (/\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    return moment.defineLocale('ru', {\n        months : monthsCaseReplace,\n        monthsShort : monthsShortCaseReplace,\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., LT',\n            LLLL : 'dddd, D MMMM YYYY г., LT'\n        },\n        calendar : {\n            sameDay: '[Сегодня в] LT',\n            nextDay: '[Завтра в] LT',\n            lastDay: '[Вчера в] LT',\n            nextWeek: function () {\n                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                    case 0:\n                        return '[В прошлое] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd [в] LT';\n                    } else {\n                        return '[В] dddd [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'час',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            case 'w':\n            case 'W':\n                return number + '-я';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : slovak (sk)\n// author : Martin Minka : https://github.com/k2s\n// based on work of petrbela : https://github.com/petrbela\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),\n        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n\n    function plural(n) {\n        return (n > 1) && (n < 5);\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n        case 's':  // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n        case 'm':  // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'minúty' : 'minút');\n            } else {\n                return result + 'minútami';\n            }\n            break;\n        case 'h':  // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'hodiny' : 'hodín');\n            } else {\n                return result + 'hodinami';\n            }\n            break;\n        case 'd':  // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'dni' : 'dní');\n            } else {\n                return result + 'dňami';\n            }\n            break;\n        case 'M':  // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'mesiace' : 'mesiacov');\n            } else {\n                return result + 'mesiacmi';\n            }\n            break;\n        case 'y':  // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'roky' : 'rokov');\n            } else {\n                return result + 'rokmi';\n            }\n            break;\n        }\n    }\n\n    return moment.defineLocale('sk', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParse : (function (months, monthsShort) {\n            var i, _monthsParse = [];\n            for (i = 0; i < 12; i++) {\n                // use custom parser to solve problem with July (červenec)\n                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n            }\n            return _monthsParse;\n        }(months, monthsShort)),\n        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),\n        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[dnes o] LT',\n            nextDay: '[zajtra o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[v nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [o] LT';\n                case 3:\n                    return '[v stredu o] LT';\n                case 4:\n                    return '[vo štvrtok o] LT';\n                case 5:\n                    return '[v piatok o] LT';\n                case 6:\n                    return '[v sobotu o] LT';\n                }\n            },\n            lastDay: '[včera o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[minulú nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[minulý] dddd [o] LT';\n                case 3:\n                    return '[minulú stredu o] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [o] LT';\n                case 6:\n                    return '[minulú sobotu o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'pred %s',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : slovenian (sl)\n// author : Robert Sedovšek : https://github.com/sedovsek\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'ena minuta' : 'eno minuto';\n        case 'mm':\n            if (number === 1) {\n                result += 'minuta';\n            } else if (number === 2) {\n                result += 'minuti';\n            } else if (number === 3 || number === 4) {\n                result += 'minute';\n            } else {\n                result += 'minut';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'ena ura' : 'eno uro';\n        case 'hh':\n            if (number === 1) {\n                result += 'ura';\n            } else if (number === 2) {\n                result += 'uri';\n            } else if (number === 3 || number === 4) {\n                result += 'ure';\n            } else {\n                result += 'ur';\n            }\n            return result;\n        case 'dd':\n            if (number === 1) {\n                result += 'dan';\n            } else {\n                result += 'dni';\n            }\n            return result;\n        case 'MM':\n            if (number === 1) {\n                result += 'mesec';\n            } else if (number === 2) {\n                result += 'meseca';\n            } else if (number === 3 || number === 4) {\n                result += 'mesece';\n            } else {\n                result += 'mesecev';\n            }\n            return result;\n        case 'yy':\n            if (number === 1) {\n                result += 'leto';\n            } else if (number === 2) {\n                result += 'leti';\n            } else if (number === 3 || number === 4) {\n                result += 'leta';\n            } else {\n                result += 'let';\n            }\n            return result;\n        }\n    }\n\n    return moment.defineLocale('sl', {\n        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD. MM. YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[danes ob] LT',\n            nextDay  : '[jutri ob] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                case 0:\n                    return '[v] [nedeljo] [ob] LT';\n                case 3:\n                    return '[v] [sredo] [ob] LT';\n                case 6:\n                    return '[v] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[v] dddd [ob] LT';\n                }\n            },\n            lastDay  : '[včeraj ob] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[prejšnja] dddd [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prejšnji] dddd [ob] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'čez %s',\n            past   : '%s nazaj',\n            s      : 'nekaj sekund',\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'en dan',\n            dd     : translate,\n            M      : 'en mesec',\n            MM     : translate,\n            y      : 'eno leto',\n            yy     : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Albanian (sq)\n// author : Flakërim Ismani : https://github.com/flakerimi\n// author: Menelion Elensúle: https://github.com/Oire (tests)\n// author : Oerd Cukalla : https://github.com/oerd (fixes)\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('sq', {\n        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            return hours < 12 ? 'PD' : 'MD';\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Sot në] LT',\n            nextDay : '[Nesër në] LT',\n            nextWeek : 'dddd [në] LT',\n            lastDay : '[Dje në] LT',\n            lastWeek : 'dddd [e kaluar në] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'në %s',\n            past : '%s më parë',\n            s : 'disa sekonda',\n            m : 'një minutë',\n            mm : '%d minuta',\n            h : 'një orë',\n            hh : '%d orë',\n            d : 'një ditë',\n            dd : '%d ditë',\n            M : 'një muaj',\n            MM : '%d muaj',\n            y : 'një vit',\n            yy : '%d vite'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Serbian-cyrillic (sr-cyrl)\n// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var translator = {\n        words: { //Different grammatical cases\n            m: ['један минут', 'једне минуте'],\n            mm: ['минут', 'минуте', 'минута'],\n            h: ['један сат', 'једног сата'],\n            hh: ['сат', 'сата', 'сати'],\n            dd: ['дан', 'дана', 'дана'],\n            MM: ['месец', 'месеца', 'месеци'],\n            yy: ['година', 'године', 'година']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    return moment.defineLocale('sr-cyrl', {\n        months: ['јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'],\n        monthsShort: ['јан.', 'феб.', 'мар.', 'апр.', 'мај', 'јун', 'јул', 'авг.', 'сеп.', 'окт.', 'нов.', 'дец.'],\n        weekdays: ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],\n        weekdaysShort: ['нед.', 'пон.', 'уто.', 'сре.', 'чет.', 'пет.', 'суб.'],\n        weekdaysMin: ['не', 'по', 'ут', 'ср', 'че', 'пе', 'су'],\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L: 'DD. MM. YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY LT',\n            LLLL: 'dddd, D. MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[данас у] LT',\n            nextDay: '[сутра у] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[у] [недељу] [у] LT';\n                case 3:\n                    return '[у] [среду] [у] LT';\n                case 6:\n                    return '[у] [суботу] [у] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[у] dddd [у] LT';\n                }\n            },\n            lastDay  : '[јуче у] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[прошле] [недеље] [у] LT',\n                    '[прошлог] [понедељка] [у] LT',\n                    '[прошлог] [уторка] [у] LT',\n                    '[прошле] [среде] [у] LT',\n                    '[прошлог] [четвртка] [у] LT',\n                    '[прошлог] [петка] [у] LT',\n                    '[прошле] [суботе] [у] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past   : 'пре %s',\n            s      : 'неколико секунди',\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'дан',\n            dd     : translator.translate,\n            M      : 'месец',\n            MM     : translator.translate,\n            y      : 'годину',\n            yy     : translator.translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Serbian-latin (sr)\n// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var translator = {\n        words: { //Different grammatical cases\n            m: ['jedan minut', 'jedne minute'],\n            mm: ['minut', 'minute', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mesec', 'meseca', 'meseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    return moment.defineLocale('sr', {\n        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],\n        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],\n        weekdays: ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota'],\n        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sre.', 'čet.', 'pet.', 'sub.'],\n        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L: 'DD. MM. YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY LT',\n            LLLL: 'dddd, D. MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[u] [nedelju] [u] LT';\n                case 3:\n                    return '[u] [sredu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedelje] [u] LT',\n                    '[prošlog] [ponedeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'pre %s',\n            s      : 'nekoliko sekundi',\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : swedish (sv)\n// author : Jens Alm : https://github.com/ulmus\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('sv', {\n        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Idag] LT',\n            nextDay: '[Imorgon] LT',\n            lastDay: '[Igår] LT',\n            nextWeek: 'dddd LT',\n            lastWeek: '[Förra] dddd[en] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'för %s sedan',\n            s : 'några sekunder',\n            m : 'en minut',\n            mm : '%d minuter',\n            h : 'en timme',\n            hh : '%d timmar',\n            d : 'en dag',\n            dd : '%d dagar',\n            M : 'en månad',\n            MM : '%d månader',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}(e|a)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'e' :\n                (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                (b === 3) ? 'e' : 'e';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : tamil (ta)\n// author : Arjunkumar Krishnamoorthy : https://github.com/tk120404\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    /*var symbolMap = {\n            '1': '௧',\n            '2': '௨',\n            '3': '௩',\n            '4': '௪',\n            '5': '௫',\n            '6': '௬',\n            '7': '௭',\n            '8': '௮',\n            '9': '௯',\n            '0': '௦'\n        },\n        numberMap = {\n            '௧': '1',\n            '௨': '2',\n            '௩': '3',\n            '௪': '4',\n            '௫': '5',\n            '௬': '6',\n            '௭': '7',\n            '௮': '8',\n            '௯': '9',\n            '௦': '0'\n        }; */\n\n    return moment.defineLocale('ta', {\n        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),\n        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),\n        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[இன்று] LT',\n            nextDay : '[நாளை] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[நேற்று] LT',\n            lastWeek : '[கடந்த வாரம்] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s இல்',\n            past : '%s முன்',\n            s : 'ஒரு சில விநாடிகள்',\n            m : 'ஒரு நிமிடம்',\n            mm : '%d நிமிடங்கள்',\n            h : 'ஒரு மணி நேரம்',\n            hh : '%d மணி நேரம்',\n            d : 'ஒரு நாள்',\n            dd : '%d நாட்கள்',\n            M : 'ஒரு மாதம்',\n            MM : '%d மாதங்கள்',\n            y : 'ஒரு வருடம்',\n            yy : '%d ஆண்டுகள்'\n        },\n/*        preparse: function (string) {\n            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },*/\n        ordinalParse: /\\d{1,2}வது/,\n        ordinal : function (number) {\n            return number + 'வது';\n        },\n\n\n        // refer http://ta.wikipedia.org/s/1er1\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour >= 6 && hour <= 10) {\n                return ' காலை';\n            } else if (hour >= 10 && hour <= 14) {\n                return ' நண்பகல்';\n            } else if (hour >= 14 && hour <= 18) {\n                return ' எற்பாடு';\n            } else if (hour >= 18 && hour <= 20) {\n                return ' மாலை';\n            } else if (hour >= 20 && hour <= 24) {\n                return ' இரவு';\n            } else if (hour >= 0 && hour <= 6) {\n                return ' வைகறை';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : thai (th)\n// author : Kridsada Thanabulpong : https://github.com/sirn\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('th', {\n        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n        monthsShort : 'มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา'.split('_'),\n        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n        longDateFormat : {\n            LT : 'H นาฬิกา m นาที',\n            LTS : 'LT s วินาที',\n            L : 'YYYY/MM/DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY เวลา LT',\n            LLLL : 'วันddddที่ D MMMM YYYY เวลา LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ก่อนเที่ยง';\n            } else {\n                return 'หลังเที่ยง';\n            }\n        },\n        calendar : {\n            sameDay : '[วันนี้ เวลา] LT',\n            nextDay : '[พรุ่งนี้ เวลา] LT',\n            nextWeek : 'dddd[หน้า เวลา] LT',\n            lastDay : '[เมื่อวานนี้ เวลา] LT',\n            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'อีก %s',\n            past : '%sที่แล้ว',\n            s : 'ไม่กี่วินาที',\n            m : '1 นาที',\n            mm : '%d นาที',\n            h : '1 ชั่วโมง',\n            hh : '%d ชั่วโมง',\n            d : '1 วัน',\n            dd : '%d วัน',\n            M : '1 เดือน',\n            MM : '%d เดือน',\n            y : '1 ปี',\n            yy : '%d ปี'\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Tagalog/Filipino (tl-ph)\n// author : Dan Hagman\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('tl-ph', {\n        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'MM/D/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY LT',\n            LLLL : 'dddd, MMMM DD, YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Ngayon sa] LT',\n            nextDay: '[Bukas sa] LT',\n            nextWeek: 'dddd [sa] LT',\n            lastDay: '[Kahapon sa] LT',\n            lastWeek: 'dddd [huling linggo] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'sa loob ng %s',\n            past : '%s ang nakalipas',\n            s : 'ilang segundo',\n            m : 'isang minuto',\n            mm : '%d minuto',\n            h : 'isang oras',\n            hh : '%d oras',\n            d : 'isang araw',\n            dd : '%d araw',\n            M : 'isang buwan',\n            MM : '%d buwan',\n            y : 'isang taon',\n            yy : '%d taon'\n        },\n        ordinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : turkish (tr)\n// authors : Erhan Gundogan : https://github.com/erhangundogan,\n//           Burak Yiğit Kaya: https://github.com/BYK\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var suffixes = {\n        1: '\\'inci',\n        5: '\\'inci',\n        8: '\\'inci',\n        70: '\\'inci',\n        80: '\\'inci',\n\n        2: '\\'nci',\n        7: '\\'nci',\n        20: '\\'nci',\n        50: '\\'nci',\n\n        3: '\\'üncü',\n        4: '\\'üncü',\n        100: '\\'üncü',\n\n        6: '\\'ncı',\n\n        9: '\\'uncu',\n        10: '\\'uncu',\n        30: '\\'uncu',\n\n        60: '\\'ıncı',\n        90: '\\'ıncı'\n    };\n\n    return moment.defineLocale('tr', {\n        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[yarın saat] LT',\n            nextWeek : '[haftaya] dddd [saat] LT',\n            lastDay : '[dün] LT',\n            lastWeek : '[geçen hafta] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s önce',\n            s : 'birkaç saniye',\n            m : 'bir dakika',\n            mm : '%d dakika',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir yıl',\n            yy : '%d yıl'\n        },\n        ordinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n        ordinal : function (number) {\n            if (number === 0) {  // special case for zero\n                return number + '\\'ıncı';\n            }\n            var a = number % 10,\n                b = number % 100 - a,\n                c = number >= 100 ? 100 : null;\n\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)\n// author : Abdel Said : https://github.com/abdelsaid\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('tzm-latn', {\n        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[asdkh g] LT',\n            nextDay: '[aska g] LT',\n            nextWeek: 'dddd [g] LT',\n            lastDay: '[assant g] LT',\n            lastWeek: 'dddd [g] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dadkh s yan %s',\n            past : 'yan %s',\n            s : 'imik',\n            m : 'minuḍ',\n            mm : '%d minuḍ',\n            h : 'saɛa',\n            hh : '%d tassaɛin',\n            d : 'ass',\n            dd : '%d ossan',\n            M : 'ayowr',\n            MM : '%d iyyirn',\n            y : 'asgas',\n            yy : '%d isgasn'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : Morocco Central Atlas Tamaziɣt (tzm)\n// author : Abdel Said : https://github.com/abdelsaid\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('tzm', {\n        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS: 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n            nextWeek: 'dddd [ⴴ] LT',\n            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n            lastWeek: 'dddd [ⴴ] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n            past : 'ⵢⴰⵏ %s',\n            s : 'ⵉⵎⵉⴽ',\n            m : 'ⵎⵉⵏⵓⴺ',\n            mm : '%d ⵎⵉⵏⵓⴺ',\n            h : 'ⵙⴰⵄⴰ',\n            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n            d : 'ⴰⵙⵙ',\n            dd : '%d oⵙⵙⴰⵏ',\n            M : 'ⴰⵢoⵓⵔ',\n            MM : '%d ⵉⵢⵢⵉⵔⵏ',\n            y : 'ⴰⵙⴳⴰⵙ',\n            yy : '%d ⵉⵙⴳⴰⵙⵏ'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : ukrainian (uk)\n// author : zemlanin : https://github.com/zemlanin\n// Author : Menelion Elensúle : https://github.com/Oire\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': 'хвилина_хвилини_хвилин',\n            'hh': 'година_години_годин',\n            'dd': 'день_дні_днів',\n            'MM': 'місяць_місяці_місяців',\n            'yy': 'рік_роки_років'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_'),\n            'accusative': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_')\n        },\n\n        nounCase = (/D[oD]? *MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n        },\n\n        nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n            'accusative' :\n            ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n                'genitive' :\n                'nominative');\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    return moment.defineLocale('uk', {\n        months : monthsCaseReplace,\n        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY р.',\n            LLL : 'D MMMM YYYY р., LT',\n            LLLL : 'dddd, D MMMM YYYY р., LT'\n        },\n        calendar : {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return processHoursFunction('[Минулої] dddd [').call(this);\n                case 1:\n                case 2:\n                case 4:\n                    return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past : '%s тому',\n            s : 'декілька секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'годину',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'місяць',\n            MM : relativeTimeWithPlural,\n            y : 'рік',\n            yy : relativeTimeWithPlural\n        },\n\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : uzbek (uz)\n// author : Sardor Muminov : https://github.com/muminoff\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('uz', {\n        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'D MMMM YYYY, dddd LT'\n        },\n        calendar : {\n            sameDay : '[Бугун соат] LT [да]',\n            nextDay : '[Эртага] LT [да]',\n            nextWeek : 'dddd [куни соат] LT [да]',\n            lastDay : '[Кеча соат] LT [да]',\n            lastWeek : '[Утган] dddd [куни соат] LT [да]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Якин %s ичида',\n            past : 'Бир неча %s олдин',\n            s : 'фурсат',\n            m : 'бир дакика',\n            mm : '%d дакика',\n            h : 'бир соат',\n            hh : '%d соат',\n            d : 'бир кун',\n            dd : '%d кун',\n            M : 'бир ой',\n            MM : '%d ой',\n            y : 'бир йил',\n            yy : '%d йил'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : vietnamese (vi)\n// author : Bang Nguyen : https://github.com/bangnk\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('vi', {\n        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [năm] YYYY',\n            LLL : 'D MMMM [năm] YYYY LT',\n            LLLL : 'dddd, D MMMM [năm] YYYY LT',\n            l : 'DD/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY LT',\n            llll : 'ddd, D MMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Hôm nay lúc] LT',\n            nextDay: '[Ngày mai lúc] LT',\n            nextWeek: 'dddd [tuần tới lúc] LT',\n            lastDay: '[Hôm qua lúc] LT',\n            lastWeek: 'dddd [tuần rồi lúc] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s tới',\n            past : '%s trước',\n            s : 'vài giây',\n            m : 'một phút',\n            mm : '%d phút',\n            h : 'một giờ',\n            hh : '%d giờ',\n            d : 'một ngày',\n            dd : '%d ngày',\n            M : 'một tháng',\n            MM : '%d tháng',\n            y : 'một năm',\n            yy : '%d năm'\n        },\n        ordinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : chinese (zh-cn)\n// author : suupic : https://github.com/suupic\n// author : Zeno Zeng : https://github.com/zenozeng\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('zh-cn', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'Ah点mm',\n            LTS : 'Ah点m分s秒',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY年MMMD日',\n            LLL : 'YYYY年MMMD日LT',\n            LLLL : 'YYYY年MMMD日ddddLT',\n            l : 'YYYY-MM-DD',\n            ll : 'YYYY年MMMD日',\n            lll : 'YYYY年MMMD日LT',\n            llll : 'YYYY年MMMD日ddddLT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : function () {\n                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';\n            },\n            nextDay : function () {\n                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';\n            },\n            lastDay : function () {\n                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';\n            },\n            nextWeek : function () {\n                var startOfWeek, prefix;\n                startOfWeek = moment().startOf('week');\n                prefix = this.unix() - startOfWeek.unix() >= 7 * 24 * 3600 ? '[下]' : '[本]';\n                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';\n            },\n            lastWeek : function () {\n                var startOfWeek, prefix;\n                startOfWeek = moment().startOf('week');\n                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';\n                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';\n            },\n            sameElse : 'LL'\n        },\n        ordinalParse: /\\d{1,2}(日|月|周)/,\n        ordinal : function (number, period) {\n            switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return number + '日';\n            case 'M':\n                return number + '月';\n            case 'w':\n            case 'W':\n                return number + '周';\n            default:\n                return number;\n            }\n        },\n        relativeTime : {\n            future : '%s内',\n            past : '%s前',\n            s : '几秒',\n            m : '1分钟',\n            mm : '%d分钟',\n            h : '1小时',\n            hh : '%d小时',\n            d : '1天',\n            dd : '%d天',\n            M : '1个月',\n            MM : '%d个月',\n            y : '1年',\n            yy : '%d年'\n        },\n        week : {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : traditional chinese (zh-tw)\n// author : Ben : https://github.com/ben-lin\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('zh-tw', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'Ah點mm',\n            LTS : 'Ah點m分s秒',\n            L : 'YYYY年MMMD日',\n            LL : 'YYYY年MMMD日',\n            LLL : 'YYYY年MMMD日LT',\n            LLLL : 'YYYY年MMMD日ddddLT',\n            l : 'YYYY年MMMD日',\n            ll : 'YYYY年MMMD日',\n            lll : 'YYYY年MMMD日LT',\n            llll : 'YYYY年MMMD日ddddLT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        ordinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n            case 'd' :\n            case 'D' :\n            case 'DDD' :\n                return number + '日';\n            case 'M' :\n                return number + '月';\n            case 'w' :\n            case 'W' :\n                return number + '週';\n            default :\n                return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            m : '一分鐘',\n            mm : '%d分鐘',\n            h : '一小時',\n            hh : '%d小時',\n            d : '一天',\n            dd : '%d天',\n            M : '一個月',\n            MM : '%d個月',\n            y : '一年',\n            yy : '%d年'\n        }\n    });\n}));\n","// moment.js locale configuration\n// locale : afrikaans (af)\n// author : Werner Mollentze : https://github.com/wernerm\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('af', {\n        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),\n        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'vm' : 'VM';\n            } else {\n                return isLower ? 'nm' : 'NM';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Vandag om] LT',\n            nextDay : '[Môre om] LT',\n            nextWeek : 'dddd [om] LT',\n            lastDay : '[Gister om] LT',\n            lastWeek : '[Laas] dddd [om] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'oor %s',\n            past : '%s gelede',\n            s : '\\'n paar sekondes',\n            m : '\\'n minuut',\n            mm : '%d minute',\n            h : '\\'n uur',\n            hh : '%d ure',\n            d : '\\'n dag',\n            dd : '%d dae',\n            M : '\\'n maand',\n            MM : '%d maande',\n            y : '\\'n jaar',\n            yy : '%d jaar'\n        },\n        ordinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n        },\n        week : {\n            dow : 1, // Maandag is die eerste dag van die week.\n            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Moroccan Arabic (ar-ma)\n// author : ElFadili Yassine : https://github.com/ElFadiliY\n// author : Abdel Said : https://github.com/abdelsaid\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ar-ma', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Arabic Saudi Arabia (ar-sa)\n// author : Suhail Alkowaileet : https://github.com/xsoh\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    };\n\n    return moment.defineLocale('ar-sa', {\n        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// Locale: Arabic (ar)\n// Author: Abdel Said: https://github.com/abdelsaid\n// Changes in months, weekdays: Ahmed Elkhatib\n// Native plural forms: forabi https://github.com/forabi\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months = [\n        'كانون الثاني يناير',\n        'شباط فبراير',\n        'آذار مارس',\n        'نيسان أبريل',\n        'أيار مايو',\n        'حزيران يونيو',\n        'تموز يوليو',\n        'آب أغسطس',\n        'أيلول سبتمبر',\n        'تشرين الأول أكتوبر',\n        'تشرين الثاني نوفمبر',\n        'كانون الأول ديسمبر'\n    ];\n\n    return moment.defineLocale('ar', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : azerbaijani (az)\n// author : topchiyev : https://github.com/topchiyev\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var suffixes = {\n        1: '-inci',\n        5: '-inci',\n        8: '-inci',\n        70: '-inci',\n        80: '-inci',\n\n        2: '-nci',\n        7: '-nci',\n        20: '-nci',\n        50: '-nci',\n\n        3: '-üncü',\n        4: '-üncü',\n        100: '-üncü',\n\n        6: '-ncı',\n\n        9: '-uncu',\n        10: '-uncu',\n        30: '-uncu',\n\n        60: '-ıncı',\n        90: '-ıncı'\n    };\n    return moment.defineLocale('az', {\n        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[sabah saat] LT',\n            nextWeek : '[gələn həftə] dddd [saat] LT',\n            lastDay : '[dünən] LT',\n            lastWeek : '[keçən həftə] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s əvvəl',\n            s : 'birneçə saniyyə',\n            m : 'bir dəqiqə',\n            mm : '%d dəqiqə',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir il',\n            yy : '%d il'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'gecə';\n            } else if (hour < 12) {\n                return 'səhər';\n            } else if (hour < 17) {\n                return 'gündüz';\n            } else {\n                return 'axşam';\n            }\n        },\n        ordinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n        ordinal : function (number) {\n            if (number === 0) {  // special case for zero\n                return number + '-ıncı';\n            }\n            var a = number % 10,\n                b = number % 100 - a,\n                c = number >= 100 ? 100 : null;\n\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : belarusian (be)\n// author : Dmitry Demidov : https://github.com/demidov91\n// author: Praleska: http://praleska.pro/\n// Author : Menelion Elensúle : https://github.com/Oire\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n            'dd': 'дзень_дні_дзён',\n            'MM': 'месяц_месяцы_месяцаў',\n            'yy': 'год_гады_гадоў'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_'),\n            'accusative': 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n            'accusative': 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_')\n        },\n\n        nounCase = (/\\[ ?[Вв] ?(?:мінулую|наступную)? ?\\] ?dddd/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    return moment.defineLocale('be', {\n        months : monthsCaseReplace,\n        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., LT',\n            LLLL : 'dddd, D MMMM YYYY г., LT'\n        },\n        calendar : {\n            sameDay: '[Сёння ў] LT',\n            nextDay: '[Заўтра ў] LT',\n            lastDay: '[Учора ў] LT',\n            nextWeek: function () {\n                return '[У] dddd [ў] LT';\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return '[У мінулую] dddd [ў] LT';\n                case 1:\n                case 2:\n                case 4:\n                    return '[У мінулы] dddd [ў] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'праз %s',\n            past : '%s таму',\n            s : 'некалькі секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithPlural,\n            hh : relativeTimeWithPlural,\n            d : 'дзень',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночы';\n            } else if (hour < 12) {\n                return 'раніцы';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечара';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}-(і|ы|га)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';\n            case 'D':\n                return number + '-га';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : bulgarian (bg)\n// author : Krasen Borisov : https://github.com/kraz\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('bg', {\n        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Днес в] LT',\n            nextDay : '[Утре в] LT',\n            nextWeek : 'dddd [в] LT',\n            lastDay : '[Вчера в] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[В изминалата] dddd [в] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[В изминалия] dddd [в] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'след %s',\n            past : 'преди %s',\n            s : 'няколко секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дни',\n            M : 'месец',\n            MM : '%d месеца',\n            y : 'година',\n            yy : '%d години'\n        },\n        ordinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Bengali (bn)\n// author : Kaushik Gandhi : https://github.com/kaushikgandhi\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '১',\n        '2': '২',\n        '3': '৩',\n        '4': '৪',\n        '5': '৫',\n        '6': '৬',\n        '7': '৭',\n        '8': '৮',\n        '9': '৯',\n        '0': '০'\n    },\n    numberMap = {\n        '১': '1',\n        '২': '2',\n        '৩': '3',\n        '৪': '4',\n        '৫': '5',\n        '৬': '6',\n        '৭': '7',\n        '৮': '8',\n        '৯': '9',\n        '০': '0'\n    };\n\n    return moment.defineLocale('bn', {\n        months : 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n        monthsShort : 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split('_'),\n        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রুবার_শনিবার'.split('_'),\n        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্রু_শনি'.split('_'),\n        weekdaysMin : 'রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm সময়',\n            LTS : 'A h:mm:ss সময়',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[আজ] LT',\n            nextDay : '[আগামীকাল] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[গতকাল] LT',\n            lastWeek : '[গত] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s পরে',\n            past : '%s আগে',\n            s : 'কএক সেকেন্ড',\n            m : 'এক মিনিট',\n            mm : '%d মিনিট',\n            h : 'এক ঘন্টা',\n            hh : '%d ঘন্টা',\n            d : 'এক দিন',\n            dd : '%d দিন',\n            M : 'এক মাস',\n            MM : '%d মাস',\n            y : 'এক বছর',\n            yy : '%d বছর'\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        //Bengali is a vast language its spoken\n        //in different forms in various parts of the world.\n        //I have just generalized with most common one used\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 10) {\n                return 'শকাল';\n            } else if (hour < 17) {\n                return 'দুপুর';\n            } else if (hour < 20) {\n                return 'বিকেল';\n            } else {\n                return 'রাত';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : tibetan (bo)\n// author : Thupten N. Chakrishar : https://github.com/vajradog\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '༡',\n        '2': '༢',\n        '3': '༣',\n        '4': '༤',\n        '5': '༥',\n        '6': '༦',\n        '7': '༧',\n        '8': '༨',\n        '9': '༩',\n        '0': '༠'\n    },\n    numberMap = {\n        '༡': '1',\n        '༢': '2',\n        '༣': '3',\n        '༤': '4',\n        '༥': '5',\n        '༦': '6',\n        '༧': '7',\n        '༨': '8',\n        '༩': '9',\n        '༠': '0'\n    };\n\n    return moment.defineLocale('bo', {\n        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),\n        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[དི་རིང] LT',\n            nextDay : '[སང་ཉིན] LT',\n            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',\n            lastDay : '[ཁ་སང] LT',\n            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ལ་',\n            past : '%s སྔན་ལ',\n            s : 'ལམ་སང',\n            m : 'སྐར་མ་གཅིག',\n            mm : '%d སྐར་མ',\n            h : 'ཆུ་ཚོད་གཅིག',\n            hh : '%d ཆུ་ཚོད',\n            d : 'ཉིན་གཅིག',\n            dd : '%d ཉིན་',\n            M : 'ཟླ་བ་གཅིག',\n            MM : '%d ཟླ་བ',\n            y : 'ལོ་གཅིག',\n            yy : '%d ལོ'\n        },\n        preparse: function (string) {\n            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'མཚན་མོ';\n            } else if (hour < 10) {\n                return 'ཞོགས་ཀས';\n            } else if (hour < 17) {\n                return 'ཉིན་གུང';\n            } else if (hour < 20) {\n                return 'དགོང་དག';\n            } else {\n                return 'མཚན་མོ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : breton (br)\n// author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\n        var format = {\n            'mm': 'munutenn',\n            'MM': 'miz',\n            'dd': 'devezh'\n        };\n        return number + ' ' + mutation(format[key], number);\n    }\n\n    function specialMutationForYears(number) {\n        switch (lastNumber(number)) {\n        case 1:\n        case 3:\n        case 4:\n        case 5:\n        case 9:\n            return number + ' bloaz';\n        default:\n            return number + ' vloaz';\n        }\n    }\n\n    function lastNumber(number) {\n        if (number > 9) {\n            return lastNumber(number % 10);\n        }\n        return number;\n    }\n\n    function mutation(text, number) {\n        if (number === 2) {\n            return softMutation(text);\n        }\n        return text;\n    }\n\n    function softMutation(text) {\n        var mutationTable = {\n            'm': 'v',\n            'b': 'v',\n            'd': 'z'\n        };\n        if (mutationTable[text.charAt(0)] === undefined) {\n            return text;\n        }\n        return mutationTable[text.charAt(0)] + text.substring(1);\n    }\n\n    return moment.defineLocale('br', {\n        months : 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n        monthsShort : 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n        weekdays : 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\n        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h[e]mm A',\n            LTS : 'h[e]mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [a viz] MMMM YYYY',\n            LLL : 'D [a viz] MMMM YYYY LT',\n            LLLL : 'dddd, D [a viz] MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Hiziv da] LT',\n            nextDay : '[Warc\\'hoazh da] LT',\n            nextWeek : 'dddd [da] LT',\n            lastDay : '[Dec\\'h da] LT',\n            lastWeek : 'dddd [paset da] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'a-benn %s',\n            past : '%s \\'zo',\n            s : 'un nebeud segondennoù',\n            m : 'ur vunutenn',\n            mm : relativeTimeWithMutation,\n            h : 'un eur',\n            hh : '%d eur',\n            d : 'un devezh',\n            dd : relativeTimeWithMutation,\n            M : 'ur miz',\n            MM : relativeTimeWithMutation,\n            y : 'ur bloaz',\n            yy : specialMutationForYears\n        },\n        ordinalParse: /\\d{1,2}(añ|vet)/,\n        ordinal : function (number) {\n            var output = (number === 1) ? 'añ' : 'vet';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : bosnian (bs)\n// author : Nedim Cholich : https://github.com/frontyard\n// based on (hr) translation by Bojan Marković\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n        case 'mm':\n            if (number === 1) {\n                result += 'minuta';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'minute';\n            } else {\n                result += 'minuta';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'jedan sat' : 'jednog sata';\n        case 'hh':\n            if (number === 1) {\n                result += 'sat';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'sata';\n            } else {\n                result += 'sati';\n            }\n            return result;\n        case 'dd':\n            if (number === 1) {\n                result += 'dan';\n            } else {\n                result += 'dana';\n            }\n            return result;\n        case 'MM':\n            if (number === 1) {\n                result += 'mjesec';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'mjeseca';\n            } else {\n                result += 'mjeseci';\n            }\n            return result;\n        case 'yy':\n            if (number === 1) {\n                result += 'godina';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'godine';\n            } else {\n                result += 'godina';\n            }\n            return result;\n        }\n    }\n\n    return moment.defineLocale('bs', {\n        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD. MM. YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                case 0:\n                    return '[u] [nedjelju] [u] LT';\n                case 3:\n                    return '[u] [srijedu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                    return '[prošlu] dddd [u] LT';\n                case 6:\n                    return '[prošle] [subote] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : catalan (ca)\n// author : Juan G. Hurtado : https://github.com/juanghurtado\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ca', {\n        months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n        monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),\n        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextDay : function () {\n                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastDay : function () {\n                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'fa %s',\n            s : 'uns segons',\n            m : 'un minut',\n            mm : '%d minuts',\n            h : 'una hora',\n            hh : '%d hores',\n            d : 'un dia',\n            dd : '%d dies',\n            M : 'un mes',\n            MM : '%d mesos',\n            y : 'un any',\n            yy : '%d anys'\n        },\n        ordinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal : function (number, period) {\n            var output = (number === 1) ? 'r' :\n                (number === 2) ? 'n' :\n                (number === 3) ? 'r' :\n                (number === 4) ? 't' : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : czech (cs)\n// author : petrbela : https://github.com/petrbela\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n\n    function plural(n) {\n        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n        case 's':  // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n        case 'm':  // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'minuty' : 'minut');\n            } else {\n                return result + 'minutami';\n            }\n            break;\n        case 'h':  // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'hodiny' : 'hodin');\n            } else {\n                return result + 'hodinami';\n            }\n            break;\n        case 'd':  // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'dny' : 'dní');\n            } else {\n                return result + 'dny';\n            }\n            break;\n        case 'M':  // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'měsíce' : 'měsíců');\n            } else {\n                return result + 'měsíci';\n            }\n            break;\n        case 'y':  // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'roky' : 'let');\n            } else {\n                return result + 'lety';\n            }\n            break;\n        }\n    }\n\n    return moment.defineLocale('cs', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParse : (function (months, monthsShort) {\n            var i, _monthsParse = [];\n            for (i = 0; i < 12; i++) {\n                // use custom parser to solve problem with July (červenec)\n                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n            }\n            return _monthsParse;\n        }(months, monthsShort)),\n        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[v neděli v] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [v] LT';\n                case 3:\n                    return '[ve středu v] LT';\n                case 4:\n                    return '[ve čtvrtek v] LT';\n                case 5:\n                    return '[v pátek v] LT';\n                case 6:\n                    return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[minulou neděli v] LT';\n                case 1:\n                case 2:\n                    return '[minulé] dddd [v] LT';\n                case 3:\n                    return '[minulou středu v] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [v] LT';\n                case 6:\n                    return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'před %s',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse : /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : chuvash (cv)\n// author : Anatoly Mironov : https://github.com/mirontoli\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('cv', {\n        months : 'кăрлач_нарăс_пуш_ака_май_çĕртме_утă_çурла_авăн_юпа_чӳк_раштав'.split('_'),\n        monthsShort : 'кăр_нар_пуш_ака_май_çĕр_утă_çур_ав_юпа_чӳк_раш'.split('_'),\n        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кĕçнерникун_эрнекун_шăматкун'.split('_'),\n        weekdaysShort : 'выр_тун_ытл_юн_кĕç_эрн_шăм'.split('_'),\n        weekdaysMin : 'вр_тн_ыт_юн_кç_эр_шм'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ]',\n            LLL : 'YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT',\n            LLLL : 'dddd, YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT'\n        },\n        calendar : {\n            sameDay: '[Паян] LT [сехетре]',\n            nextDay: '[Ыран] LT [сехетре]',\n            lastDay: '[Ĕнер] LT [сехетре]',\n            nextWeek: '[Çитес] dddd LT [сехетре]',\n            lastWeek: '[Иртнĕ] dddd LT [сехетре]',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (output) {\n                var affix = /сехет$/i.exec(output) ? 'рен' : /çул$/i.exec(output) ? 'тан' : 'ран';\n                return output + affix;\n            },\n            past : '%s каялла',\n            s : 'пĕр-ик çеккунт',\n            m : 'пĕр минут',\n            mm : '%d минут',\n            h : 'пĕр сехет',\n            hh : '%d сехет',\n            d : 'пĕр кун',\n            dd : '%d кун',\n            M : 'пĕр уйăх',\n            MM : '%d уйăх',\n            y : 'пĕр çул',\n            yy : '%d çул'\n        },\n        ordinalParse: /\\d{1,2}-мĕш/,\n        ordinal : '%d-мĕш',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Welsh (cy)\n// author : Robert Allen\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('cy', {\n        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),\n        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),\n        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),\n        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n        // time formats are the same as en-gb\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS : 'LT:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY LT',\n            LLLL: 'dddd, D MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[Heddiw am] LT',\n            nextDay: '[Yfory am] LT',\n            nextWeek: 'dddd [am] LT',\n            lastDay: '[Ddoe am] LT',\n            lastWeek: 'dddd [diwethaf am] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'mewn %s',\n            past: '%s yn ôl',\n            s: 'ychydig eiliadau',\n            m: 'munud',\n            mm: '%d munud',\n            h: 'awr',\n            hh: '%d awr',\n            d: 'diwrnod',\n            dd: '%d diwrnod',\n            M: 'mis',\n            MM: '%d mis',\n            y: 'blwyddyn',\n            yy: '%d flynedd'\n        },\n        ordinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n        ordinal: function (number) {\n            var b = number,\n                output = '',\n                lookup = [\n                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed\n                ];\n\n            if (b > 20) {\n                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                    output = 'fed'; // not 30ain, 70ain or 90ain\n                } else {\n                    output = 'ain';\n                }\n            } else if (b > 0) {\n                output = lookup[b];\n            }\n\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : danish (da)\n// author : Ulrik Nielsen : https://github.com/mrbase\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('da', {\n        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd [d.] D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[I dag kl.] LT',\n            nextDay : '[I morgen kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[I går kl.] LT',\n            lastWeek : '[sidste] dddd [kl] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'få sekunder',\n            m : 'et minut',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dage',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'et år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : austrian german (de-at)\n// author : lluchs : https://github.com/lluchs\n// author: Menelion Elensúle: https://github.com/Oire\n// author : Martin Groller : https://github.com/MadMG\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    return moment.defineLocale('de-at', {\n        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[Morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[Gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : german (de)\n// author : lluchs : https://github.com/lluchs\n// author: Menelion Elensúle: https://github.com/Oire\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    return moment.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[Morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[Gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : modern greek (el)\n// author : Aggelos Karalias : https://github.com/mehiel\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('el', {\n        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n        months : function (momentToFormat, format) {\n            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM : function (input) {\n            return ((input + '').toLowerCase()[0] === 'μ');\n        },\n        meridiemParse : /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendarEl : {\n            sameDay : '[Σήμερα {}] LT',\n            nextDay : '[Αύριο {}] LT',\n            nextWeek : 'dddd [{}] LT',\n            lastDay : '[Χθες {}] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        calendar : function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n\n            if (typeof output === 'function') {\n                output = output.apply(mom);\n            }\n\n            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));\n        },\n        relativeTime : {\n            future : 'σε %s',\n            past : '%s πριν',\n            s : 'λίγα δευτερόλεπτα',\n            m : 'ένα λεπτό',\n            mm : '%d λεπτά',\n            h : 'μία ώρα',\n            hh : '%d ώρες',\n            d : 'μία μέρα',\n            dd : '%d μέρες',\n            M : 'ένας μήνας',\n            MM : '%d μήνες',\n            y : 'ένας χρόνος',\n            yy : '%d χρόνια'\n        },\n        ordinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : australian english (en-au)\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('en-au', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        ordinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : canadian english (en-ca)\n// author : Jonathan Abourbih : https://github.com/jonbca\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('en-ca', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM, YYYY',\n            LLL : 'D MMMM, YYYY LT',\n            LLLL : 'dddd, D MMMM, YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        ordinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : great britain english (en-gb)\n// author : Chris Gedrim : https://github.com/chrisgedrim\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('en-gb', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        ordinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : esperanto (eo)\n// author : Colin Dean : https://github.com/colindean\n// komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.\n//          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('eo', {\n        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),\n        weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),\n        weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),\n        weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D[-an de] MMMM, YYYY',\n            LLL : 'D[-an de] MMMM, YYYY LT',\n            LLLL : 'dddd, [la] D[-an de] MMMM, YYYY LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'p.t.m.' : 'P.T.M.';\n            } else {\n                return isLower ? 'a.t.m.' : 'A.T.M.';\n            }\n        },\n        calendar : {\n            sameDay : '[Hodiaŭ je] LT',\n            nextDay : '[Morgaŭ je] LT',\n            nextWeek : 'dddd [je] LT',\n            lastDay : '[Hieraŭ je] LT',\n            lastWeek : '[pasinta] dddd [je] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'je %s',\n            past : 'antaŭ %s',\n            s : 'sekundoj',\n            m : 'minuto',\n            mm : '%d minutoj',\n            h : 'horo',\n            hh : '%d horoj',\n            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo\n            dd : '%d tagoj',\n            M : 'monato',\n            MM : '%d monatoj',\n            y : 'jaro',\n            yy : '%d jaroj'\n        },\n        ordinalParse: /\\d{1,2}a/,\n        ordinal : '%da',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : spanish (es)\n// author : Julio Napurí : https://github.com/julionc\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    return moment.defineLocale('es', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'Do_Lu_Ma_Mi_Ju_Vi_Sá'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY LT',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY LT'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        ordinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : estonian (et)\n// author : Henry Kehlmann : https://github.com/madhenry\n// improvements : Illimar Tambek : https://github.com/ragulka\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n            'm' : ['ühe minuti', 'üks minut'],\n            'mm': [number + ' minuti', number + ' minutit'],\n            'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n            'hh': [number + ' tunni', number + ' tundi'],\n            'd' : ['ühe päeva', 'üks päev'],\n            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n            'MM': [number + ' kuu', number + ' kuud'],\n            'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n            'yy': [number + ' aasta', number + ' aastat']\n        };\n        if (withoutSuffix) {\n            return format[key][2] ? format[key][2] : format[key][1];\n        }\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    return moment.defineLocale('et', {\n        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),\n        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),\n        longDateFormat : {\n            LT   : 'H:mm',\n            LTS : 'LT:ss',\n            L    : 'DD.MM.YYYY',\n            LL   : 'D. MMMM YYYY',\n            LLL  : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[Täna,] LT',\n            nextDay  : '[Homme,] LT',\n            nextWeek : '[Järgmine] dddd LT',\n            lastDay  : '[Eile,] LT',\n            lastWeek : '[Eelmine] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s pärast',\n            past   : '%s tagasi',\n            s      : processRelativeTime,\n            m      : processRelativeTime,\n            mm     : processRelativeTime,\n            h      : processRelativeTime,\n            hh     : processRelativeTime,\n            d      : processRelativeTime,\n            dd     : '%d päeva',\n            M      : processRelativeTime,\n            MM     : processRelativeTime,\n            y      : processRelativeTime,\n            yy     : processRelativeTime\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : euskara (eu)\n// author : Eneko Illarramendi : https://github.com/eillarra\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('eu', {\n        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),\n        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),\n        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),\n        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),\n        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY[ko] MMMM[ren] D[a]',\n            LLL : 'YYYY[ko] MMMM[ren] D[a] LT',\n            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] LT',\n            l : 'YYYY-M-D',\n            ll : 'YYYY[ko] MMM D[a]',\n            lll : 'YYYY[ko] MMM D[a] LT',\n            llll : 'ddd, YYYY[ko] MMM D[a] LT'\n        },\n        calendar : {\n            sameDay : '[gaur] LT[etan]',\n            nextDay : '[bihar] LT[etan]',\n            nextWeek : 'dddd LT[etan]',\n            lastDay : '[atzo] LT[etan]',\n            lastWeek : '[aurreko] dddd LT[etan]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s barru',\n            past : 'duela %s',\n            s : 'segundo batzuk',\n            m : 'minutu bat',\n            mm : '%d minutu',\n            h : 'ordu bat',\n            hh : '%d ordu',\n            d : 'egun bat',\n            dd : '%d egun',\n            M : 'hilabete bat',\n            MM : '%d hilabete',\n            y : 'urte bat',\n            yy : '%d urte'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Persian (fa)\n// author : Ebrahim Byagowi : https://github.com/ebraminio\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '۱',\n        '2': '۲',\n        '3': '۳',\n        '4': '۴',\n        '5': '۵',\n        '6': '۶',\n        '7': '۷',\n        '8': '۸',\n        '9': '۹',\n        '0': '۰'\n    }, numberMap = {\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n        '۰': '0'\n    };\n\n    return moment.defineLocale('fa', {\n        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        weekdays : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysShort : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'قبل از ظهر';\n            } else {\n                return 'بعد از ظهر';\n            }\n        },\n        calendar : {\n            sameDay : '[امروز ساعت] LT',\n            nextDay : '[فردا ساعت] LT',\n            nextWeek : 'dddd [ساعت] LT',\n            lastDay : '[دیروز ساعت] LT',\n            lastWeek : 'dddd [پیش] [ساعت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'در %s',\n            past : '%s پیش',\n            s : 'چندین ثانیه',\n            m : 'یک دقیقه',\n            mm : '%d دقیقه',\n            h : 'یک ساعت',\n            hh : '%d ساعت',\n            d : 'یک روز',\n            dd : '%d روز',\n            M : 'یک ماه',\n            MM : '%d ماه',\n            y : 'یک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/[۰-۹]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        ordinalParse: /\\d{1,2}م/,\n        ordinal : '%dم',\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : finnish (fi)\n// author : Tarmo Aidantausta : https://github.com/bleadof\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n        numbersFuture = [\n            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n            numbersPast[7], numbersPast[8], numbersPast[9]\n        ];\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = '';\n        switch (key) {\n        case 's':\n            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n        case 'm':\n            return isFuture ? 'minuutin' : 'minuutti';\n        case 'mm':\n            result = isFuture ? 'minuutin' : 'minuuttia';\n            break;\n        case 'h':\n            return isFuture ? 'tunnin' : 'tunti';\n        case 'hh':\n            result = isFuture ? 'tunnin' : 'tuntia';\n            break;\n        case 'd':\n            return isFuture ? 'päivän' : 'päivä';\n        case 'dd':\n            result = isFuture ? 'päivän' : 'päivää';\n            break;\n        case 'M':\n            return isFuture ? 'kuukauden' : 'kuukausi';\n        case 'MM':\n            result = isFuture ? 'kuukauden' : 'kuukautta';\n            break;\n        case 'y':\n            return isFuture ? 'vuoden' : 'vuosi';\n        case 'yy':\n            result = isFuture ? 'vuoden' : 'vuotta';\n            break;\n        }\n        result = verbalNumber(number, isFuture) + ' ' + result;\n        return result;\n    }\n\n    function verbalNumber(number, isFuture) {\n        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;\n    }\n\n    return moment.defineLocale('fi', {\n        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'Do MMMM[ta] YYYY',\n            LLL : 'Do MMMM[ta] YYYY, [klo] LT',\n            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] LT',\n            l : 'D.M.YYYY',\n            ll : 'Do MMM YYYY',\n            lll : 'Do MMM YYYY, [klo] LT',\n            llll : 'ddd, Do MMM YYYY, [klo] LT'\n        },\n        calendar : {\n            sameDay : '[tänään] [klo] LT',\n            nextDay : '[huomenna] [klo] LT',\n            nextWeek : 'dddd [klo] LT',\n            lastDay : '[eilen] [klo] LT',\n            lastWeek : '[viime] dddd[na] [klo] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s päästä',\n            past : '%s sitten',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : faroese (fo)\n// author : Ragnar Johannesen : https://github.com/ragnar123\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('fo', {\n        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),\n        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D. MMMM, YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Í dag kl.] LT',\n            nextDay : '[Í morgin kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[Í gjár kl.] LT',\n            lastWeek : '[síðstu] dddd [kl] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'um %s',\n            past : '%s síðani',\n            s : 'fá sekund',\n            m : 'ein minutt',\n            mm : '%d minuttir',\n            h : 'ein tími',\n            hh : '%d tímar',\n            d : 'ein dagur',\n            dd : '%d dagar',\n            M : 'ein mánaði',\n            MM : '%d mánaðir',\n            y : 'eitt ár',\n            yy : '%d ár'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : canadian french (fr-ca)\n// author : Jonathan Abourbih : https://github.com/jonbca\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('fr-ca', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Aujourd\\'hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        ordinalParse: /\\d{1,2}(er|)/,\n        ordinal : function (number) {\n            return number + (number === 1 ? 'er' : '');\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : french (fr)\n// author : John Fischer : https://github.com/jfroffice\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('fr', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Aujourd\\'hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        ordinalParse: /\\d{1,2}(er|)/,\n        ordinal : function (number) {\n            return number + (number === 1 ? 'er' : '');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : galician (gl)\n// author : Juan G. Hurtado : https://github.com/juanghurtado\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('gl', {\n        months : 'Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro'.split('_'),\n        monthsShort : 'Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.'.split('_'),\n        weekdays : 'Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado'.split('_'),\n        weekdaysShort : 'Dom._Lun._Mar._Mér._Xov._Ven._Sáb.'.split('_'),\n        weekdaysMin : 'Do_Lu_Ma_Mé_Xo_Ve_Sá'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            lastDay : function () {\n                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';\n            },\n            lastWeek : function () {\n                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (str) {\n                if (str === 'uns segundos') {\n                    return 'nuns segundos';\n                }\n                return 'en ' + str;\n            },\n            past : 'hai %s',\n            s : 'uns segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'unha hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un ano',\n            yy : '%d anos'\n        },\n        ordinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Hebrew (he)\n// author : Tomer Cohen : https://github.com/tomer\n// author : Moshe Simantov : https://github.com/DevelopmentIL\n// author : Tal Ater : https://github.com/TalAter\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('he', {\n        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [ב]MMMM YYYY',\n            LLL : 'D [ב]MMMM YYYY LT',\n            LLLL : 'dddd, D [ב]MMMM YYYY LT',\n            l : 'D/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY LT',\n            llll : 'ddd, D MMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[היום ב־]LT',\n            nextDay : '[מחר ב־]LT',\n            nextWeek : 'dddd [בשעה] LT',\n            lastDay : '[אתמול ב־]LT',\n            lastWeek : '[ביום] dddd [האחרון בשעה] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'בעוד %s',\n            past : 'לפני %s',\n            s : 'מספר שניות',\n            m : 'דקה',\n            mm : '%d דקות',\n            h : 'שעה',\n            hh : function (number) {\n                if (number === 2) {\n                    return 'שעתיים';\n                }\n                return number + ' שעות';\n            },\n            d : 'יום',\n            dd : function (number) {\n                if (number === 2) {\n                    return 'יומיים';\n                }\n                return number + ' ימים';\n            },\n            M : 'חודש',\n            MM : function (number) {\n                if (number === 2) {\n                    return 'חודשיים';\n                }\n                return number + ' חודשים';\n            },\n            y : 'שנה',\n            yy : function (number) {\n                if (number === 2) {\n                    return 'שנתיים';\n                }\n                return number + ' שנים';\n            }\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : hindi (hi)\n// author : Mayank Singhal : https://github.com/mayanksinghal\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    return moment.defineLocale('hi', {\n        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm बजे',\n            LTS : 'A h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[कल] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[कल] LT',\n            lastWeek : '[पिछले] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s में',\n            past : '%s पहले',\n            s : 'कुछ ही क्षण',\n            m : 'एक मिनट',\n            mm : '%d मिनट',\n            h : 'एक घंटा',\n            hh : '%d घंटे',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महीने',\n            MM : '%d महीने',\n            y : 'एक वर्ष',\n            yy : '%d वर्ष'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात';\n            } else if (hour < 10) {\n                return 'सुबह';\n            } else if (hour < 17) {\n                return 'दोपहर';\n            } else if (hour < 20) {\n                return 'शाम';\n            } else {\n                return 'रात';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : hrvatski (hr)\n// author : Bojan Marković : https://github.com/bmarkovic\n\n// based on (sl) translation by Robert Sedovšek\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n        case 'mm':\n            if (number === 1) {\n                result += 'minuta';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'minute';\n            } else {\n                result += 'minuta';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'jedan sat' : 'jednog sata';\n        case 'hh':\n            if (number === 1) {\n                result += 'sat';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'sata';\n            } else {\n                result += 'sati';\n            }\n            return result;\n        case 'dd':\n            if (number === 1) {\n                result += 'dan';\n            } else {\n                result += 'dana';\n            }\n            return result;\n        case 'MM':\n            if (number === 1) {\n                result += 'mjesec';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'mjeseca';\n            } else {\n                result += 'mjeseci';\n            }\n            return result;\n        case 'yy':\n            if (number === 1) {\n                result += 'godina';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'godine';\n            } else {\n                result += 'godina';\n            }\n            return result;\n        }\n    }\n\n    return moment.defineLocale('hr', {\n        months : 'sječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_'),\n        monthsShort : 'sje._vel._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD. MM. YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                case 0:\n                    return '[u] [nedjelju] [u] LT';\n                case 3:\n                    return '[u] [srijedu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                    return '[prošlu] dddd [u] LT';\n                case 6:\n                    return '[prošle] [subote] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : hungarian (hu)\n// author : Adam Brunner : https://github.com/adambrunner\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var num = number,\n            suffix;\n\n        switch (key) {\n        case 's':\n            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n        case 'm':\n            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'mm':\n            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'h':\n            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'hh':\n            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'd':\n            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'dd':\n            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'M':\n            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'MM':\n            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'y':\n            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n        case 'yy':\n            return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n        }\n\n        return '';\n    }\n\n    function week(isFuture) {\n        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';\n    }\n\n    return moment.defineLocale('hu', {\n        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY. MMMM D.',\n            LLL : 'YYYY. MMMM D., LT',\n            LLLL : 'YYYY. MMMM D., dddd LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower === true ? 'de' : 'DE';\n            } else {\n                return isLower === true ? 'du' : 'DU';\n            }\n        },\n        calendar : {\n            sameDay : '[ma] LT[-kor]',\n            nextDay : '[holnap] LT[-kor]',\n            nextWeek : function () {\n                return week.call(this, true);\n            },\n            lastDay : '[tegnap] LT[-kor]',\n            lastWeek : function () {\n                return week.call(this, false);\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s múlva',\n            past : '%s',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Armenian (hy-am)\n// author : Armendarabyan : https://github.com/armendarabyan\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_'),\n            'accusative': 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function monthsShortCaseReplace(m, format) {\n        var monthsShort = 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_');\n\n        return monthsShort[m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_');\n\n        return weekdays[m.day()];\n    }\n\n    return moment.defineLocale('hy-am', {\n        months : monthsCaseReplace,\n        monthsShort : monthsShortCaseReplace,\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY թ.',\n            LLL : 'D MMMM YYYY թ., LT',\n            LLLL : 'dddd, D MMMM YYYY թ., LT'\n        },\n        calendar : {\n            sameDay: '[այսօր] LT',\n            nextDay: '[վաղը] LT',\n            lastDay: '[երեկ] LT',\n            nextWeek: function () {\n                return 'dddd [օրը ժամը] LT';\n            },\n            lastWeek: function () {\n                return '[անցած] dddd [օրը ժամը] LT';\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s հետո',\n            past : '%s առաջ',\n            s : 'մի քանի վայրկյան',\n            m : 'րոպե',\n            mm : '%d րոպե',\n            h : 'ժամ',\n            hh : '%d ժամ',\n            d : 'օր',\n            dd : '%d օր',\n            M : 'ամիս',\n            MM : '%d ամիս',\n            y : 'տարի',\n            yy : '%d տարի'\n        },\n\n        meridiem : function (hour) {\n            if (hour < 4) {\n                return 'գիշերվա';\n            } else if (hour < 12) {\n                return 'առավոտվա';\n            } else if (hour < 17) {\n                return 'ցերեկվա';\n            } else {\n                return 'երեկոյան';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'DDD':\n            case 'w':\n            case 'W':\n            case 'DDDo':\n                if (number === 1) {\n                    return number + '-ին';\n                }\n                return number + '-րդ';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Bahasa Indonesia (id)\n// author : Mohammad Satrio Utomo : https://github.com/tyok\n// reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('id', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'LT.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] LT',\n            LLLL : 'dddd, D MMMM YYYY [pukul] LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Besok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kemarin pukul] LT',\n            lastWeek : 'dddd [lalu pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lalu',\n            s : 'beberapa detik',\n            m : 'semenit',\n            mm : '%d menit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : icelandic (is)\n// author : Hinrik Örn Sigurðsson : https://github.com/hinrik\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function plural(n) {\n        if (n % 100 === 11) {\n            return true;\n        } else if (n % 10 === 1) {\n            return false;\n        }\n        return true;\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n        case 's':\n            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n        case 'm':\n            return withoutSuffix ? 'mínúta' : 'mínútu';\n        case 'mm':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n            } else if (withoutSuffix) {\n                return result + 'mínúta';\n            }\n            return result + 'mínútu';\n        case 'hh':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n            }\n            return result + 'klukkustund';\n        case 'd':\n            if (withoutSuffix) {\n                return 'dagur';\n            }\n            return isFuture ? 'dag' : 'degi';\n        case 'dd':\n            if (plural(number)) {\n                if (withoutSuffix) {\n                    return result + 'dagar';\n                }\n                return result + (isFuture ? 'daga' : 'dögum');\n            } else if (withoutSuffix) {\n                return result + 'dagur';\n            }\n            return result + (isFuture ? 'dag' : 'degi');\n        case 'M':\n            if (withoutSuffix) {\n                return 'mánuður';\n            }\n            return isFuture ? 'mánuð' : 'mánuði';\n        case 'MM':\n            if (plural(number)) {\n                if (withoutSuffix) {\n                    return result + 'mánuðir';\n                }\n                return result + (isFuture ? 'mánuði' : 'mánuðum');\n            } else if (withoutSuffix) {\n                return result + 'mánuður';\n            }\n            return result + (isFuture ? 'mánuð' : 'mánuði');\n        case 'y':\n            return withoutSuffix || isFuture ? 'ár' : 'ári';\n        case 'yy':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n            }\n            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n        }\n    }\n\n    return moment.defineLocale('is', {\n        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),\n        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] LT',\n            LLLL : 'dddd, D. MMMM YYYY [kl.] LT'\n        },\n        calendar : {\n            sameDay : '[í dag kl.] LT',\n            nextDay : '[á morgun kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[í gær kl.] LT',\n            lastWeek : '[síðasta] dddd [kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'eftir %s',\n            past : 'fyrir %s síðan',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : 'klukkustund',\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : italian (it)\n// author : Lorenzo : https://github.com/aliem\n// author: Mattia Larentis: https://github.com/nostalgiaz\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('it', {\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),\n        weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),\n        weekdaysMin : 'D_L_Ma_Me_G_V_S'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past : '%s fa',\n            s : 'alcuni secondi',\n            m : 'un minuto',\n            mm : '%d minuti',\n            h : 'un\\'ora',\n            hh : '%d ore',\n            d : 'un giorno',\n            dd : '%d giorni',\n            M : 'un mese',\n            MM : '%d mesi',\n            y : 'un anno',\n            yy : '%d anni'\n        },\n        ordinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : japanese (ja)\n// author : LI Long : https://github.com/baryon\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ja', {\n        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),\n        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),\n        longDateFormat : {\n            LT : 'Ah時m分',\n            LTS : 'LTs秒',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日LT',\n            LLLL : 'YYYY年M月D日LT dddd'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return '午前';\n            } else {\n                return '午後';\n            }\n        },\n        calendar : {\n            sameDay : '[今日] LT',\n            nextDay : '[明日] LT',\n            nextWeek : '[来週]dddd LT',\n            lastDay : '[昨日] LT',\n            lastWeek : '[前週]dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s後',\n            past : '%s前',\n            s : '数秒',\n            m : '1分',\n            mm : '%d分',\n            h : '1時間',\n            hh : '%d時間',\n            d : '1日',\n            dd : '%d日',\n            M : '1ヶ月',\n            MM : '%dヶ月',\n            y : '1年',\n            yy : '%d年'\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Georgian (ka)\n// author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n            'accusative': 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')\n        },\n\n        nounCase = (/D[oD] *MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n            'accusative': 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_')\n        },\n\n        nounCase = (/(წინა|შემდეგ)/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    return moment.defineLocale('ka', {\n        months : monthsCaseReplace,\n        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[დღეს] LT[-ზე]',\n            nextDay : '[ხვალ] LT[-ზე]',\n            lastDay : '[გუშინ] LT[-ზე]',\n            nextWeek : '[შემდეგ] dddd LT[-ზე]',\n            lastWeek : '[წინა] dddd LT-ზე',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?\n                    s.replace(/ი$/, 'ში') :\n                    s + 'ში';\n            },\n            past : function (s) {\n                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {\n                    return s.replace(/(ი|ე)$/, 'ის წინ');\n                }\n                if ((/წელი/).test(s)) {\n                    return s.replace(/წელი$/, 'წლის წინ');\n                }\n            },\n            s : 'რამდენიმე წამი',\n            m : 'წუთი',\n            mm : '%d წუთი',\n            h : 'საათი',\n            hh : '%d საათი',\n            d : 'დღე',\n            dd : '%d დღე',\n            M : 'თვე',\n            MM : '%d თვე',\n            y : 'წელი',\n            yy : '%d წელი'\n        },\n        ordinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n        ordinal : function (number) {\n            if (number === 0) {\n                return number;\n            }\n\n            if (number === 1) {\n                return number + '-ლი';\n            }\n\n            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {\n                return 'მე-' + number;\n            }\n\n            return number + '-ე';\n        },\n        week : {\n            dow : 1,\n            doy : 7\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : khmer (km)\n// author : Kruy Vanna : https://github.com/kruyvanna\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('km', {\n        months: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n        monthsShort: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS : 'LT:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY LT',\n            LLLL: 'dddd, D MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[ថ្ងៃនៈ ម៉ោង] LT',\n            nextDay: '[ស្អែក ម៉ោង] LT',\n            nextWeek: 'dddd [ម៉ោង] LT',\n            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%sទៀត',\n            past: '%sមុន',\n            s: 'ប៉ុន្មានវិនាទី',\n            m: 'មួយនាទី',\n            mm: '%d នាទី',\n            h: 'មួយម៉ោង',\n            hh: '%d ម៉ោង',\n            d: 'មួយថ្ងៃ',\n            dd: '%d ថ្ងៃ',\n            M: 'មួយខែ',\n            MM: '%d ខែ',\n            y: 'មួយឆ្នាំ',\n            yy: '%d ឆ្នាំ'\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : korean (ko)\n//\n// authors\n//\n// - Kyungwook, Park : https://github.com/kyungw00k\n// - Jeeeyul Lee <jeeeyul@gmail.com>\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ko', {\n        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat : {\n            LT : 'A h시 m분',\n            LTS : 'A h시 m분 s초',\n            L : 'YYYY.MM.DD',\n            LL : 'YYYY년 MMMM D일',\n            LLL : 'YYYY년 MMMM D일 LT',\n            LLLL : 'YYYY년 MMMM D일 dddd LT'\n        },\n        meridiem : function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        },\n        calendar : {\n            sameDay : '오늘 LT',\n            nextDay : '내일 LT',\n            nextWeek : 'dddd LT',\n            lastDay : '어제 LT',\n            lastWeek : '지난주 dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s 후',\n            past : '%s 전',\n            s : '몇초',\n            ss : '%d초',\n            m : '일분',\n            mm : '%d분',\n            h : '한시간',\n            hh : '%d시간',\n            d : '하루',\n            dd : '%d일',\n            M : '한달',\n            MM : '%d달',\n            y : '일년',\n            yy : '%d년'\n        },\n        ordinalParse : /\\d{1,2}일/,\n        ordinal : '%d일',\n        meridiemParse : /(오전|오후)/,\n        isPM : function (token) {\n            return token === '오후';\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Luxembourgish (lb)\n// author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz\n\n// Note: Luxembourgish has a very particular phonological rule ('Eifeler Regel') that causes the\n// deletion of the final 'n' in certain contexts. That's what the 'eifelerRegelAppliesToWeekday'\n// and 'eifelerRegelAppliesToNumber' methods are meant for\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eng Minutt', 'enger Minutt'],\n            'h': ['eng Stonn', 'enger Stonn'],\n            'd': ['een Dag', 'engem Dag'],\n            'M': ['ee Mount', 'engem Mount'],\n            'y': ['ee Joer', 'engem Joer']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    function processFutureTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'a ' + string;\n        }\n        return 'an ' + string;\n    }\n\n    function processPastTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'viru ' + string;\n        }\n        return 'virun ' + string;\n    }\n\n    /**\n     * Returns true if the word before the given number loses the '-n' ending.\n     * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n     *\n     * @param number {integer}\n     * @returns {boolean}\n     */\n    function eifelerRegelAppliesToNumber(number) {\n        number = parseInt(number, 10);\n        if (isNaN(number)) {\n            return false;\n        }\n        if (number < 0) {\n            // Negative Number --> always true\n            return true;\n        } else if (number < 10) {\n            // Only 1 digit\n            if (4 <= number && number <= 7) {\n                return true;\n            }\n            return false;\n        } else if (number < 100) {\n            // 2 digits\n            var lastDigit = number % 10, firstDigit = number / 10;\n            if (lastDigit === 0) {\n                return eifelerRegelAppliesToNumber(firstDigit);\n            }\n            return eifelerRegelAppliesToNumber(lastDigit);\n        } else if (number < 10000) {\n            // 3 or 4 digits --> recursively check first digit\n            while (number >= 10) {\n                number = number / 10;\n            }\n            return eifelerRegelAppliesToNumber(number);\n        } else {\n            // Anything larger than 4 digits: recursively check first n-3 digits\n            number = number / 1000;\n            return eifelerRegelAppliesToNumber(number);\n        }\n    }\n\n    return moment.defineLocale('lb', {\n        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm [Auer]',\n            LTS: 'H:mm:ss [Auer]',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY LT',\n            LLLL: 'dddd, D. MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[Haut um] LT',\n            sameElse: 'L',\n            nextDay: '[Muer um] LT',\n            nextWeek: 'dddd [um] LT',\n            lastDay: '[Gëschter um] LT',\n            lastWeek: function () {\n                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n                switch (this.day()) {\n                    case 2:\n                    case 4:\n                        return '[Leschten] dddd [um] LT';\n                    default:\n                        return '[Leschte] dddd [um] LT';\n                }\n            }\n        },\n        relativeTime : {\n            future : processFutureTime,\n            past : processPastTime,\n            s : 'e puer Sekonnen',\n            m : processRelativeTime,\n            mm : '%d Minutten',\n            h : processRelativeTime,\n            hh : '%d Stonnen',\n            d : processRelativeTime,\n            dd : '%d Deeg',\n            M : processRelativeTime,\n            MM : '%d Méint',\n            y : processRelativeTime,\n            yy : '%d Joer'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Lithuanian (lt)\n// author : Mindaugas Mozūras : https://github.com/mmozuras\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var units = {\n        'm' : 'minutė_minutės_minutę',\n        'mm': 'minutės_minučių_minutes',\n        'h' : 'valanda_valandos_valandą',\n        'hh': 'valandos_valandų_valandas',\n        'd' : 'diena_dienos_dieną',\n        'dd': 'dienos_dienų_dienas',\n        'M' : 'mėnuo_mėnesio_mėnesį',\n        'MM': 'mėnesiai_mėnesių_mėnesius',\n        'y' : 'metai_metų_metus',\n        'yy': 'metai_metų_metus'\n    },\n    weekDays = 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_');\n\n    function translateSeconds(number, withoutSuffix, key, isFuture) {\n        if (withoutSuffix) {\n            return 'kelios sekundės';\n        } else {\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n        }\n    }\n\n    function translateSingular(number, withoutSuffix, key, isFuture) {\n        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n    }\n\n    function special(number) {\n        return number % 10 === 0 || (number > 10 && number < 20);\n    }\n\n    function forms(key) {\n        return units[key].split('_');\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        if (number === 1) {\n            return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n        } else if (withoutSuffix) {\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n        } else {\n            if (isFuture) {\n                return result + forms(key)[1];\n            } else {\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n            }\n        }\n    }\n\n    function relativeWeekDay(moment, format) {\n        var nominative = format.indexOf('dddd HH:mm') === -1,\n            weekDay = weekDays[moment.day()];\n\n        return nominative ? weekDay : weekDay.substring(0, weekDay.length - 2) + 'į';\n    }\n\n    return moment.defineLocale('lt', {\n        months : 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n        weekdays : relativeWeekDay,\n        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY [m.] MMMM D [d.]',\n            LLL : 'YYYY [m.] MMMM D [d.], LT [val.]',\n            LLLL : 'YYYY [m.] MMMM D [d.], dddd, LT [val.]',\n            l : 'YYYY-MM-DD',\n            ll : 'YYYY [m.] MMMM D [d.]',\n            lll : 'YYYY [m.] MMMM D [d.], LT [val.]',\n            llll : 'YYYY [m.] MMMM D [d.], ddd, LT [val.]'\n        },\n        calendar : {\n            sameDay : '[Šiandien] LT',\n            nextDay : '[Rytoj] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[Vakar] LT',\n            lastWeek : '[Praėjusį] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'po %s',\n            past : 'prieš %s',\n            s : translateSeconds,\n            m : translateSingular,\n            mm : translate,\n            h : translateSingular,\n            hh : translate,\n            d : translateSingular,\n            dd : translate,\n            M : translateSingular,\n            MM : translate,\n            y : translateSingular,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}-oji/,\n        ordinal : function (number) {\n            return number + '-oji';\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : latvian (lv)\n// author : Kristaps Karlsons : https://github.com/skakri\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var units = {\n        'mm': 'minūti_minūtes_minūte_minūtes',\n        'hh': 'stundu_stundas_stunda_stundas',\n        'dd': 'dienu_dienas_diena_dienas',\n        'MM': 'mēnesi_mēnešus_mēnesis_mēneši',\n        'yy': 'gadu_gadus_gads_gadi'\n    };\n\n    function format(word, number, withoutSuffix) {\n        var forms = word.split('_');\n        if (withoutSuffix) {\n            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];\n        } else {\n            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];\n        }\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        return number + ' ' + format(units[key], number, withoutSuffix);\n    }\n\n    return moment.defineLocale('lv', {\n        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),\n        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'YYYY. [gada] D. MMMM',\n            LLL : 'YYYY. [gada] D. MMMM, LT',\n            LLLL : 'YYYY. [gada] D. MMMM, dddd, LT'\n        },\n        calendar : {\n            sameDay : '[Šodien pulksten] LT',\n            nextDay : '[Rīt pulksten] LT',\n            nextWeek : 'dddd [pulksten] LT',\n            lastDay : '[Vakar pulksten] LT',\n            lastWeek : '[Pagājušā] dddd [pulksten] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s vēlāk',\n            past : '%s agrāk',\n            s : 'dažas sekundes',\n            m : 'minūti',\n            mm : relativeTimeWithPlural,\n            h : 'stundu',\n            hh : relativeTimeWithPlural,\n            d : 'dienu',\n            dd : relativeTimeWithPlural,\n            M : 'mēnesi',\n            MM : relativeTimeWithPlural,\n            y : 'gadu',\n            yy : relativeTimeWithPlural\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : macedonian (mk)\n// author : Borislav Mickov : https://github.com/B0k0\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('mk', {\n        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Денес во] LT',\n            nextDay : '[Утре во] LT',\n            nextWeek : 'dddd [во] LT',\n            lastDay : '[Вчера во] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[Во изминатата] dddd [во] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[Во изминатиот] dddd [во] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'после %s',\n            past : 'пред %s',\n            s : 'неколку секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дена',\n            M : 'месец',\n            MM : '%d месеци',\n            y : 'година',\n            yy : '%d години'\n        },\n        ordinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : malayalam (ml)\n// author : Floyd Pink : https://github.com/floydpink\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ml', {\n        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),\n        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),\n        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),\n        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm -നു',\n            LTS : 'A h:mm:ss -നു',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[ഇന്ന്] LT',\n            nextDay : '[നാളെ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ഇന്നലെ] LT',\n            lastWeek : '[കഴിഞ്ഞ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s കഴിഞ്ഞ്',\n            past : '%s മുൻപ്',\n            s : 'അൽപ നിമിഷങ്ങൾ',\n            m : 'ഒരു മിനിറ്റ്',\n            mm : '%d മിനിറ്റ്',\n            h : 'ഒരു മണിക്കൂർ',\n            hh : '%d മണിക്കൂർ',\n            d : 'ഒരു ദിവസം',\n            dd : '%d ദിവസം',\n            M : 'ഒരു മാസം',\n            MM : '%d മാസം',\n            y : 'ഒരു വർഷം',\n            yy : '%d വർഷം'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'രാത്രി';\n            } else if (hour < 12) {\n                return 'രാവിലെ';\n            } else if (hour < 17) {\n                return 'ഉച്ച കഴിഞ്ഞ്';\n            } else if (hour < 20) {\n                return 'വൈകുന്നേരം';\n            } else {\n                return 'രാത്രി';\n            }\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Marathi (mr)\n// author : Harshad Kale : https://github.com/kalehv\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    return moment.defineLocale('mr', {\n        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm वाजता',\n            LTS : 'A h:mm:ss वाजता',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[उद्या] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[काल] LT',\n            lastWeek: '[मागील] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s नंतर',\n            past : '%s पूर्वी',\n            s : 'सेकंद',\n            m: 'एक मिनिट',\n            mm: '%d मिनिटे',\n            h : 'एक तास',\n            hh : '%d तास',\n            d : 'एक दिवस',\n            dd : '%d दिवस',\n            M : 'एक महिना',\n            MM : '%d महिने',\n            y : 'एक वर्ष',\n            yy : '%d वर्षे'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiem: function (hour, minute, isLower)\n        {\n            if (hour < 4) {\n                return 'रात्री';\n            } else if (hour < 10) {\n                return 'सकाळी';\n            } else if (hour < 17) {\n                return 'दुपारी';\n            } else if (hour < 20) {\n                return 'सायंकाळी';\n            } else {\n                return 'रात्री';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Bahasa Malaysia (ms-MY)\n// author : Weldan Jamili : https://github.com/weldan\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('ms-my', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'LT.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] LT',\n            LLLL : 'dddd, D MMMM YYYY [pukul] LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Burmese (my)\n// author : Squar team, mysquar.com\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '၁',\n        '2': '၂',\n        '3': '၃',\n        '4': '၄',\n        '5': '၅',\n        '6': '၆',\n        '7': '၇',\n        '8': '၈',\n        '9': '၉',\n        '0': '၀'\n    }, numberMap = {\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        '၀': '0'\n    };\n    return moment.defineLocale('my', {\n        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),\n        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),\n        weekdaysShort: 'နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        weekdaysMin: 'နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY LT',\n            LLLL: 'dddd D MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[ယနေ.] LT [မှာ]',\n            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n            nextWeek: 'dddd LT [မှာ]',\n            lastDay: '[မနေ.က] LT [မှာ]',\n            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'လာမည့် %s မှာ',\n            past: 'လွန်ခဲ့သော %s က',\n            s: 'စက္ကန်.အနည်းငယ်',\n            m: 'တစ်မိနစ်',\n            mm: '%d မိနစ်',\n            h: 'တစ်နာရီ',\n            hh: '%d နာရီ',\n            d: 'တစ်ရက်',\n            dd: '%d ရက်',\n            M: 'တစ်လ',\n            MM: '%d လ',\n            y: 'တစ်နှစ်',\n            yy: '%d နှစ်'\n        },\n        preparse: function (string) {\n            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : norwegian bokmål (nb)\n// authors : Espen Hovlandsdal : https://github.com/rexxars\n//           Sigurd Gartmann : https://github.com/sigurdga\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('nb', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'søn_man_tirs_ons_tors_fre_lør'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'H.mm',\n            LTS : 'LT.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] LT',\n            LLLL : 'dddd D. MMMM YYYY [kl.] LT'\n        },\n        calendar : {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[forrige] dddd [kl.] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'for %s siden',\n            s : 'noen sekunder',\n            m : 'ett minutt',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dager',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : nepali/nepalese\n// author : suvash : https://github.com/suvash\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    return moment.defineLocale('ne', {\n        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),\n        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),\n        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),\n        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n        weekdaysMin : 'आइ._सो._मङ्_बु._बि._शु._श.'.split('_'),\n        longDateFormat : {\n            LT : 'Aको h:mm बजे',\n            LTS : 'Aको h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 3) {\n                return 'राती';\n            } else if (hour < 10) {\n                return 'बिहान';\n            } else if (hour < 15) {\n                return 'दिउँसो';\n            } else if (hour < 18) {\n                return 'बेलुका';\n            } else if (hour < 20) {\n                return 'साँझ';\n            } else {\n                return 'राती';\n            }\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[भोली] LT',\n            nextWeek : '[आउँदो] dddd[,] LT',\n            lastDay : '[हिजो] LT',\n            lastWeek : '[गएको] dddd[,] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sमा',\n            past : '%s अगाडी',\n            s : 'केही समय',\n            m : 'एक मिनेट',\n            mm : '%d मिनेट',\n            h : 'एक घण्टा',\n            hh : '%d घण्टा',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महिना',\n            MM : '%d महिना',\n            y : 'एक बर्ष',\n            yy : '%d बर्ष'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : dutch (nl)\n// author : Joris Röling : https://github.com/jjupiter\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    return moment.defineLocale('nl', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        ordinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : norwegian nynorsk (nn)\n// author : https://github.com/mechuwind\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('nn', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),\n        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[I dag klokka] LT',\n            nextDay: '[I morgon klokka] LT',\n            nextWeek: 'dddd [klokka] LT',\n            lastDay: '[I går klokka] LT',\n            lastWeek: '[Føregåande] dddd [klokka] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'for %s sidan',\n            s : 'nokre sekund',\n            m : 'eit minutt',\n            mm : '%d minutt',\n            h : 'ein time',\n            hh : '%d timar',\n            d : 'ein dag',\n            dd : '%d dagar',\n            M : 'ein månad',\n            MM : '%d månader',\n            y : 'eit år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : polish (pl)\n// author : Rafal Hirsz : https://github.com/evoL\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),\n        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n\n    function plural(n) {\n        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n    }\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'minuta' : 'minutę';\n        case 'mm':\n            return result + (plural(number) ? 'minuty' : 'minut');\n        case 'h':\n            return withoutSuffix  ? 'godzina'  : 'godzinę';\n        case 'hh':\n            return result + (plural(number) ? 'godziny' : 'godzin');\n        case 'MM':\n            return result + (plural(number) ? 'miesiące' : 'miesięcy');\n        case 'yy':\n            return result + (plural(number) ? 'lata' : 'lat');\n        }\n    }\n\n    return moment.defineLocale('pl', {\n        months : function (momentToFormat, format) {\n            if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n        weekdaysShort : 'nie_pon_wt_śr_czw_pt_sb'.split('_'),\n        weekdaysMin : 'N_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: '[W] dddd [o] LT',\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[W zeszłą niedzielę o] LT';\n                case 3:\n                    return '[W zeszłą środę o] LT';\n                case 6:\n                    return '[W zeszłą sobotę o] LT';\n                default:\n                    return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : '%s temu',\n            s : 'kilka sekund',\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : '1 dzień',\n            dd : '%d dni',\n            M : 'miesiąc',\n            MM : translate,\n            y : 'rok',\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : brazilian portuguese (pt-br)\n// author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('pt-br', {\n        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays : 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split('_'),\n        weekdaysShort : 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),\n        weekdaysMin : 'dom_2ª_3ª_4ª_5ª_6ª_sáb'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY [às] LT',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] LT'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : '%s atrás',\n            s : 'segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        ordinalParse: /\\d{1,2}º/,\n        ordinal : '%dº'\n    });\n}));\n\n// moment.js locale configuration\n// locale : portuguese (pt)\n// author : Jefferson : https://github.com/jalex79\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('pt', {\n        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays : 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split('_'),\n        weekdaysShort : 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),\n        weekdaysMin : 'dom_2ª_3ª_4ª_5ª_6ª_sáb'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY LT',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        ordinalParse: /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : romanian (ro)\n// author : Vlad Gurdiga : https://github.com/gurdiga\n// author : Valentin Agachi : https://github.com/avaly\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n                'mm': 'minute',\n                'hh': 'ore',\n                'dd': 'zile',\n                'MM': 'luni',\n                'yy': 'ani'\n            },\n            separator = ' ';\n        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n            separator = ' de ';\n        }\n\n        return number + separator + format[key];\n    }\n\n    return moment.defineLocale('ro', {\n        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[azi la] LT',\n            nextDay: '[mâine la] LT',\n            nextWeek: 'dddd [la] LT',\n            lastDay: '[ieri la] LT',\n            lastWeek: '[fosta] dddd [la] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'peste %s',\n            past : '%s în urmă',\n            s : 'câteva secunde',\n            m : 'un minut',\n            mm : relativeTimeWithPlural,\n            h : 'o oră',\n            hh : relativeTimeWithPlural,\n            d : 'o zi',\n            dd : relativeTimeWithPlural,\n            M : 'o lună',\n            MM : relativeTimeWithPlural,\n            y : 'un an',\n            yy : relativeTimeWithPlural\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : russian (ru)\n// author : Viktorminator : https://github.com/Viktorminator\n// Author : Menelion Elensúle : https://github.com/Oire\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function monthsShortCaseReplace(m, format) {\n        var monthsShort = {\n            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return monthsShort[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')\n        },\n\n        nounCase = (/\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    return moment.defineLocale('ru', {\n        months : monthsCaseReplace,\n        monthsShort : monthsShortCaseReplace,\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., LT',\n            LLLL : 'dddd, D MMMM YYYY г., LT'\n        },\n        calendar : {\n            sameDay: '[Сегодня в] LT',\n            nextDay: '[Завтра в] LT',\n            lastDay: '[Вчера в] LT',\n            nextWeek: function () {\n                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                    case 0:\n                        return '[В прошлое] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd [в] LT';\n                    } else {\n                        return '[В] dddd [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'час',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            case 'w':\n            case 'W':\n                return number + '-я';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : slovak (sk)\n// author : Martin Minka : https://github.com/k2s\n// based on work of petrbela : https://github.com/petrbela\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),\n        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n\n    function plural(n) {\n        return (n > 1) && (n < 5);\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n        case 's':  // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n        case 'm':  // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'minúty' : 'minút');\n            } else {\n                return result + 'minútami';\n            }\n            break;\n        case 'h':  // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'hodiny' : 'hodín');\n            } else {\n                return result + 'hodinami';\n            }\n            break;\n        case 'd':  // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'dni' : 'dní');\n            } else {\n                return result + 'dňami';\n            }\n            break;\n        case 'M':  // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'mesiace' : 'mesiacov');\n            } else {\n                return result + 'mesiacmi';\n            }\n            break;\n        case 'y':  // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'roky' : 'rokov');\n            } else {\n                return result + 'rokmi';\n            }\n            break;\n        }\n    }\n\n    return moment.defineLocale('sk', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParse : (function (months, monthsShort) {\n            var i, _monthsParse = [];\n            for (i = 0; i < 12; i++) {\n                // use custom parser to solve problem with July (červenec)\n                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n            }\n            return _monthsParse;\n        }(months, monthsShort)),\n        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),\n        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[dnes o] LT',\n            nextDay: '[zajtra o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[v nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [o] LT';\n                case 3:\n                    return '[v stredu o] LT';\n                case 4:\n                    return '[vo štvrtok o] LT';\n                case 5:\n                    return '[v piatok o] LT';\n                case 6:\n                    return '[v sobotu o] LT';\n                }\n            },\n            lastDay: '[včera o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[minulú nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[minulý] dddd [o] LT';\n                case 3:\n                    return '[minulú stredu o] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [o] LT';\n                case 6:\n                    return '[minulú sobotu o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'pred %s',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : slovenian (sl)\n// author : Robert Sedovšek : https://github.com/sedovsek\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'ena minuta' : 'eno minuto';\n        case 'mm':\n            if (number === 1) {\n                result += 'minuta';\n            } else if (number === 2) {\n                result += 'minuti';\n            } else if (number === 3 || number === 4) {\n                result += 'minute';\n            } else {\n                result += 'minut';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'ena ura' : 'eno uro';\n        case 'hh':\n            if (number === 1) {\n                result += 'ura';\n            } else if (number === 2) {\n                result += 'uri';\n            } else if (number === 3 || number === 4) {\n                result += 'ure';\n            } else {\n                result += 'ur';\n            }\n            return result;\n        case 'dd':\n            if (number === 1) {\n                result += 'dan';\n            } else {\n                result += 'dni';\n            }\n            return result;\n        case 'MM':\n            if (number === 1) {\n                result += 'mesec';\n            } else if (number === 2) {\n                result += 'meseca';\n            } else if (number === 3 || number === 4) {\n                result += 'mesece';\n            } else {\n                result += 'mesecev';\n            }\n            return result;\n        case 'yy':\n            if (number === 1) {\n                result += 'leto';\n            } else if (number === 2) {\n                result += 'leti';\n            } else if (number === 3 || number === 4) {\n                result += 'leta';\n            } else {\n                result += 'let';\n            }\n            return result;\n        }\n    }\n\n    return moment.defineLocale('sl', {\n        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD. MM. YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[danes ob] LT',\n            nextDay  : '[jutri ob] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                case 0:\n                    return '[v] [nedeljo] [ob] LT';\n                case 3:\n                    return '[v] [sredo] [ob] LT';\n                case 6:\n                    return '[v] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[v] dddd [ob] LT';\n                }\n            },\n            lastDay  : '[včeraj ob] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[prejšnja] dddd [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prejšnji] dddd [ob] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'čez %s',\n            past   : '%s nazaj',\n            s      : 'nekaj sekund',\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'en dan',\n            dd     : translate,\n            M      : 'en mesec',\n            MM     : translate,\n            y      : 'eno leto',\n            yy     : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Albanian (sq)\n// author : Flakërim Ismani : https://github.com/flakerimi\n// author: Menelion Elensúle: https://github.com/Oire (tests)\n// author : Oerd Cukalla : https://github.com/oerd (fixes)\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('sq', {\n        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            return hours < 12 ? 'PD' : 'MD';\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Sot në] LT',\n            nextDay : '[Nesër në] LT',\n            nextWeek : 'dddd [në] LT',\n            lastDay : '[Dje në] LT',\n            lastWeek : 'dddd [e kaluar në] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'në %s',\n            past : '%s më parë',\n            s : 'disa sekonda',\n            m : 'një minutë',\n            mm : '%d minuta',\n            h : 'një orë',\n            hh : '%d orë',\n            d : 'një ditë',\n            dd : '%d ditë',\n            M : 'një muaj',\n            MM : '%d muaj',\n            y : 'një vit',\n            yy : '%d vite'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Serbian-cyrillic (sr-cyrl)\n// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var translator = {\n        words: { //Different grammatical cases\n            m: ['један минут', 'једне минуте'],\n            mm: ['минут', 'минуте', 'минута'],\n            h: ['један сат', 'једног сата'],\n            hh: ['сат', 'сата', 'сати'],\n            dd: ['дан', 'дана', 'дана'],\n            MM: ['месец', 'месеца', 'месеци'],\n            yy: ['година', 'године', 'година']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    return moment.defineLocale('sr-cyrl', {\n        months: ['јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'],\n        monthsShort: ['јан.', 'феб.', 'мар.', 'апр.', 'мај', 'јун', 'јул', 'авг.', 'сеп.', 'окт.', 'нов.', 'дец.'],\n        weekdays: ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],\n        weekdaysShort: ['нед.', 'пон.', 'уто.', 'сре.', 'чет.', 'пет.', 'суб.'],\n        weekdaysMin: ['не', 'по', 'ут', 'ср', 'че', 'пе', 'су'],\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L: 'DD. MM. YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY LT',\n            LLLL: 'dddd, D. MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[данас у] LT',\n            nextDay: '[сутра у] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[у] [недељу] [у] LT';\n                case 3:\n                    return '[у] [среду] [у] LT';\n                case 6:\n                    return '[у] [суботу] [у] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[у] dddd [у] LT';\n                }\n            },\n            lastDay  : '[јуче у] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[прошле] [недеље] [у] LT',\n                    '[прошлог] [понедељка] [у] LT',\n                    '[прошлог] [уторка] [у] LT',\n                    '[прошле] [среде] [у] LT',\n                    '[прошлог] [четвртка] [у] LT',\n                    '[прошлог] [петка] [у] LT',\n                    '[прошле] [суботе] [у] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past   : 'пре %s',\n            s      : 'неколико секунди',\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'дан',\n            dd     : translator.translate,\n            M      : 'месец',\n            MM     : translator.translate,\n            y      : 'годину',\n            yy     : translator.translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Serbian-latin (sr)\n// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var translator = {\n        words: { //Different grammatical cases\n            m: ['jedan minut', 'jedne minute'],\n            mm: ['minut', 'minute', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mesec', 'meseca', 'meseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    return moment.defineLocale('sr', {\n        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],\n        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],\n        weekdays: ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota'],\n        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sre.', 'čet.', 'pet.', 'sub.'],\n        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L: 'DD. MM. YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY LT',\n            LLLL: 'dddd, D. MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[u] [nedelju] [u] LT';\n                case 3:\n                    return '[u] [sredu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedelje] [u] LT',\n                    '[prošlog] [ponedeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'pre %s',\n            s      : 'nekoliko sekundi',\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : swedish (sv)\n// author : Jens Alm : https://github.com/ulmus\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('sv', {\n        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Idag] LT',\n            nextDay: '[Imorgon] LT',\n            lastDay: '[Igår] LT',\n            nextWeek: 'dddd LT',\n            lastWeek: '[Förra] dddd[en] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'för %s sedan',\n            s : 'några sekunder',\n            m : 'en minut',\n            mm : '%d minuter',\n            h : 'en timme',\n            hh : '%d timmar',\n            d : 'en dag',\n            dd : '%d dagar',\n            M : 'en månad',\n            MM : '%d månader',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}(e|a)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'e' :\n                (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                (b === 3) ? 'e' : 'e';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : tamil (ta)\n// author : Arjunkumar Krishnamoorthy : https://github.com/tk120404\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    /*var symbolMap = {\n            '1': '௧',\n            '2': '௨',\n            '3': '௩',\n            '4': '௪',\n            '5': '௫',\n            '6': '௬',\n            '7': '௭',\n            '8': '௮',\n            '9': '௯',\n            '0': '௦'\n        },\n        numberMap = {\n            '௧': '1',\n            '௨': '2',\n            '௩': '3',\n            '௪': '4',\n            '௫': '5',\n            '௬': '6',\n            '௭': '7',\n            '௮': '8',\n            '௯': '9',\n            '௦': '0'\n        }; */\n\n    return moment.defineLocale('ta', {\n        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),\n        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),\n        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[இன்று] LT',\n            nextDay : '[நாளை] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[நேற்று] LT',\n            lastWeek : '[கடந்த வாரம்] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s இல்',\n            past : '%s முன்',\n            s : 'ஒரு சில விநாடிகள்',\n            m : 'ஒரு நிமிடம்',\n            mm : '%d நிமிடங்கள்',\n            h : 'ஒரு மணி நேரம்',\n            hh : '%d மணி நேரம்',\n            d : 'ஒரு நாள்',\n            dd : '%d நாட்கள்',\n            M : 'ஒரு மாதம்',\n            MM : '%d மாதங்கள்',\n            y : 'ஒரு வருடம்',\n            yy : '%d ஆண்டுகள்'\n        },\n/*        preparse: function (string) {\n            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },*/\n        ordinalParse: /\\d{1,2}வது/,\n        ordinal : function (number) {\n            return number + 'வது';\n        },\n\n\n        // refer http://ta.wikipedia.org/s/1er1\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour >= 6 && hour <= 10) {\n                return ' காலை';\n            } else if (hour >= 10 && hour <= 14) {\n                return ' நண்பகல்';\n            } else if (hour >= 14 && hour <= 18) {\n                return ' எற்பாடு';\n            } else if (hour >= 18 && hour <= 20) {\n                return ' மாலை';\n            } else if (hour >= 20 && hour <= 24) {\n                return ' இரவு';\n            } else if (hour >= 0 && hour <= 6) {\n                return ' வைகறை';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : thai (th)\n// author : Kridsada Thanabulpong : https://github.com/sirn\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('th', {\n        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n        monthsShort : 'มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา'.split('_'),\n        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n        longDateFormat : {\n            LT : 'H นาฬิกา m นาที',\n            LTS : 'LT s วินาที',\n            L : 'YYYY/MM/DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY เวลา LT',\n            LLLL : 'วันddddที่ D MMMM YYYY เวลา LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ก่อนเที่ยง';\n            } else {\n                return 'หลังเที่ยง';\n            }\n        },\n        calendar : {\n            sameDay : '[วันนี้ เวลา] LT',\n            nextDay : '[พรุ่งนี้ เวลา] LT',\n            nextWeek : 'dddd[หน้า เวลา] LT',\n            lastDay : '[เมื่อวานนี้ เวลา] LT',\n            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'อีก %s',\n            past : '%sที่แล้ว',\n            s : 'ไม่กี่วินาที',\n            m : '1 นาที',\n            mm : '%d นาที',\n            h : '1 ชั่วโมง',\n            hh : '%d ชั่วโมง',\n            d : '1 วัน',\n            dd : '%d วัน',\n            M : '1 เดือน',\n            MM : '%d เดือน',\n            y : '1 ปี',\n            yy : '%d ปี'\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Tagalog/Filipino (tl-ph)\n// author : Dan Hagman\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('tl-ph', {\n        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'MM/D/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY LT',\n            LLLL : 'dddd, MMMM DD, YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Ngayon sa] LT',\n            nextDay: '[Bukas sa] LT',\n            nextWeek: 'dddd [sa] LT',\n            lastDay: '[Kahapon sa] LT',\n            lastWeek: 'dddd [huling linggo] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'sa loob ng %s',\n            past : '%s ang nakalipas',\n            s : 'ilang segundo',\n            m : 'isang minuto',\n            mm : '%d minuto',\n            h : 'isang oras',\n            hh : '%d oras',\n            d : 'isang araw',\n            dd : '%d araw',\n            M : 'isang buwan',\n            MM : '%d buwan',\n            y : 'isang taon',\n            yy : '%d taon'\n        },\n        ordinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : turkish (tr)\n// authors : Erhan Gundogan : https://github.com/erhangundogan,\n//           Burak Yiğit Kaya: https://github.com/BYK\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    var suffixes = {\n        1: '\\'inci',\n        5: '\\'inci',\n        8: '\\'inci',\n        70: '\\'inci',\n        80: '\\'inci',\n\n        2: '\\'nci',\n        7: '\\'nci',\n        20: '\\'nci',\n        50: '\\'nci',\n\n        3: '\\'üncü',\n        4: '\\'üncü',\n        100: '\\'üncü',\n\n        6: '\\'ncı',\n\n        9: '\\'uncu',\n        10: '\\'uncu',\n        30: '\\'uncu',\n\n        60: '\\'ıncı',\n        90: '\\'ıncı'\n    };\n\n    return moment.defineLocale('tr', {\n        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[yarın saat] LT',\n            nextWeek : '[haftaya] dddd [saat] LT',\n            lastDay : '[dün] LT',\n            lastWeek : '[geçen hafta] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s önce',\n            s : 'birkaç saniye',\n            m : 'bir dakika',\n            mm : '%d dakika',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir yıl',\n            yy : '%d yıl'\n        },\n        ordinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n        ordinal : function (number) {\n            if (number === 0) {  // special case for zero\n                return number + '\\'ıncı';\n            }\n            var a = number % 10,\n                b = number % 100 - a,\n                c = number >= 100 ? 100 : null;\n\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)\n// author : Abdel Said : https://github.com/abdelsaid\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('tzm-latn', {\n        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[asdkh g] LT',\n            nextDay: '[aska g] LT',\n            nextWeek: 'dddd [g] LT',\n            lastDay: '[assant g] LT',\n            lastWeek: 'dddd [g] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dadkh s yan %s',\n            past : 'yan %s',\n            s : 'imik',\n            m : 'minuḍ',\n            mm : '%d minuḍ',\n            h : 'saɛa',\n            hh : '%d tassaɛin',\n            d : 'ass',\n            dd : '%d ossan',\n            M : 'ayowr',\n            MM : '%d iyyirn',\n            y : 'asgas',\n            yy : '%d isgasn'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : Morocco Central Atlas Tamaziɣt (tzm)\n// author : Abdel Said : https://github.com/abdelsaid\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('tzm', {\n        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS: 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n            nextWeek: 'dddd [ⴴ] LT',\n            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n            lastWeek: 'dddd [ⴴ] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n            past : 'ⵢⴰⵏ %s',\n            s : 'ⵉⵎⵉⴽ',\n            m : 'ⵎⵉⵏⵓⴺ',\n            mm : '%d ⵎⵉⵏⵓⴺ',\n            h : 'ⵙⴰⵄⴰ',\n            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n            d : 'ⴰⵙⵙ',\n            dd : '%d oⵙⵙⴰⵏ',\n            M : 'ⴰⵢoⵓⵔ',\n            MM : '%d ⵉⵢⵢⵉⵔⵏ',\n            y : 'ⴰⵙⴳⴰⵙ',\n            yy : '%d ⵉⵙⴳⴰⵙⵏ'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : ukrainian (uk)\n// author : zemlanin : https://github.com/zemlanin\n// Author : Menelion Elensúle : https://github.com/Oire\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': 'хвилина_хвилини_хвилин',\n            'hh': 'година_години_годин',\n            'dd': 'день_дні_днів',\n            'MM': 'місяць_місяці_місяців',\n            'yy': 'рік_роки_років'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_'),\n            'accusative': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_')\n        },\n\n        nounCase = (/D[oD]? *MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n        },\n\n        nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n            'accusative' :\n            ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n                'genitive' :\n                'nominative');\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    return moment.defineLocale('uk', {\n        months : monthsCaseReplace,\n        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY р.',\n            LLL : 'D MMMM YYYY р., LT',\n            LLLL : 'dddd, D MMMM YYYY р., LT'\n        },\n        calendar : {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return processHoursFunction('[Минулої] dddd [').call(this);\n                case 1:\n                case 2:\n                case 4:\n                    return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past : '%s тому',\n            s : 'декілька секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'годину',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'місяць',\n            MM : relativeTimeWithPlural,\n            y : 'рік',\n            yy : relativeTimeWithPlural\n        },\n\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : uzbek (uz)\n// author : Sardor Muminov : https://github.com/muminoff\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('uz', {\n        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'D MMMM YYYY, dddd LT'\n        },\n        calendar : {\n            sameDay : '[Бугун соат] LT [да]',\n            nextDay : '[Эртага] LT [да]',\n            nextWeek : 'dddd [куни соат] LT [да]',\n            lastDay : '[Кеча соат] LT [да]',\n            lastWeek : '[Утган] dddd [куни соат] LT [да]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Якин %s ичида',\n            past : 'Бир неча %s олдин',\n            s : 'фурсат',\n            m : 'бир дакика',\n            mm : '%d дакика',\n            h : 'бир соат',\n            hh : '%d соат',\n            d : 'бир кун',\n            dd : '%d кун',\n            M : 'бир ой',\n            MM : '%d ой',\n            y : 'бир йил',\n            yy : '%d йил'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : vietnamese (vi)\n// author : Bang Nguyen : https://github.com/bangnk\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('vi', {\n        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [năm] YYYY',\n            LLL : 'D MMMM [năm] YYYY LT',\n            LLLL : 'dddd, D MMMM [năm] YYYY LT',\n            l : 'DD/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY LT',\n            llll : 'ddd, D MMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Hôm nay lúc] LT',\n            nextDay: '[Ngày mai lúc] LT',\n            nextWeek: 'dddd [tuần tới lúc] LT',\n            lastDay: '[Hôm qua lúc] LT',\n            lastWeek: 'dddd [tuần rồi lúc] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s tới',\n            past : '%s trước',\n            s : 'vài giây',\n            m : 'một phút',\n            mm : '%d phút',\n            h : 'một giờ',\n            hh : '%d giờ',\n            d : 'một ngày',\n            dd : '%d ngày',\n            M : 'một tháng',\n            MM : '%d tháng',\n            y : 'một năm',\n            yy : '%d năm'\n        },\n        ordinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : chinese (zh-cn)\n// author : suupic : https://github.com/suupic\n// author : Zeno Zeng : https://github.com/zenozeng\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('zh-cn', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'Ah点mm',\n            LTS : 'Ah点m分s秒',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY年MMMD日',\n            LLL : 'YYYY年MMMD日LT',\n            LLLL : 'YYYY年MMMD日ddddLT',\n            l : 'YYYY-MM-DD',\n            ll : 'YYYY年MMMD日',\n            lll : 'YYYY年MMMD日LT',\n            llll : 'YYYY年MMMD日ddddLT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : function () {\n                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';\n            },\n            nextDay : function () {\n                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';\n            },\n            lastDay : function () {\n                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';\n            },\n            nextWeek : function () {\n                var startOfWeek, prefix;\n                startOfWeek = moment().startOf('week');\n                prefix = this.unix() - startOfWeek.unix() >= 7 * 24 * 3600 ? '[下]' : '[本]';\n                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';\n            },\n            lastWeek : function () {\n                var startOfWeek, prefix;\n                startOfWeek = moment().startOf('week');\n                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';\n                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';\n            },\n            sameElse : 'LL'\n        },\n        ordinalParse: /\\d{1,2}(日|月|周)/,\n        ordinal : function (number, period) {\n            switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return number + '日';\n            case 'M':\n                return number + '月';\n            case 'w':\n            case 'W':\n                return number + '周';\n            default:\n                return number;\n            }\n        },\n        relativeTime : {\n            future : '%s内',\n            past : '%s前',\n            s : '几秒',\n            m : '1分钟',\n            mm : '%d分钟',\n            h : '1小时',\n            hh : '%d小时',\n            d : '1天',\n            dd : '%d天',\n            M : '1个月',\n            MM : '%d个月',\n            y : '1年',\n            yy : '%d年'\n        },\n        week : {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n\n// moment.js locale configuration\n// locale : traditional chinese (zh-tw)\n// author : Ben : https://github.com/ben-lin\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['moment'], factory); // AMD\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('../moment')); // Node\n    } else {\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\n    }\n}(function (moment) {\n    return moment.defineLocale('zh-tw', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'Ah點mm',\n            LTS : 'Ah點m分s秒',\n            L : 'YYYY年MMMD日',\n            LL : 'YYYY年MMMD日',\n            LLL : 'YYYY年MMMD日LT',\n            LLLL : 'YYYY年MMMD日ddddLT',\n            l : 'YYYY年MMMD日',\n            ll : 'YYYY年MMMD日',\n            lll : 'YYYY年MMMD日LT',\n            llll : 'YYYY年MMMD日ddddLT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        ordinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n            case 'd' :\n            case 'D' :\n            case 'DDD' :\n                return number + '日';\n            case 'M' :\n                return number + '月';\n            case 'w' :\n            case 'W' :\n                return number + '週';\n            default :\n                return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            m : '一分鐘',\n            mm : '%d分鐘',\n            h : '一小時',\n            hh : '%d小時',\n            d : '一天',\n            dd : '%d天',\n            M : '一個月',\n            MM : '%d個月',\n            y : '一年',\n            yy : '%d年'\n        }\n    });\n}));\n","//! moment.js\n//! version : 2.8.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (undefined) {\n    /************************************\n        Constants\n    ************************************/\n\n    var moment,\n        VERSION = '2.8.4',\n        // the global-scope this is NOT the global object in Node.js\n        globalScope = typeof global !== 'undefined' ? global : this,\n        oldGlobalMoment,\n        round = Math.round,\n        hasOwnProperty = Object.prototype.hasOwnProperty,\n        i,\n\n        YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n\n        // internal storage for locale config files\n        locales = {},\n\n        // extra moment internal properties (plugins register props here)\n        momentProperties = [],\n\n        // check for nodeJS\n        hasModule = (typeof module !== 'undefined' && module && module.exports),\n\n        // ASP.NET json date format regex\n        aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n        aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\n        // format tokens\n        formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n\n        // parsing token regexes\n        parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n        parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n        parseTokenOneToFourDigits = /\\d{1,4}/, // 0 - 9999\n        parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n        parseTokenDigits = /\\d+/, // nonzero number of digits\n        parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.\n        parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        parseTokenT = /T/i, // T (ISO separator)\n        parseTokenOffsetMs = /[\\+\\-]?\\d+/, // 1234567890123\n        parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n\n        //strict parsing regexes\n        parseTokenOneDigit = /\\d/, // 0 - 9\n        parseTokenTwoDigits = /\\d\\d/, // 00 - 99\n        parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n        parseTokenFourDigits = /\\d{4}/, // 0000 - 9999\n        parseTokenSixDigits = /[+-]?\\d{6}/, // -999,999 - 999,999\n        parseTokenSignedNumber = /[+-]?\\d+/, // -inf - inf\n\n        // iso 8601 regex\n        // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n        isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\n        isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',\n\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n            ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/]\n        ],\n\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n            ['HH', /(T| )\\d\\d/]\n        ],\n\n        // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-15', '30']\n        parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\n        // getter and setter names\n        proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),\n        unitMillisecondFactors = {\n            'Milliseconds' : 1,\n            'Seconds' : 1e3,\n            'Minutes' : 6e4,\n            'Hours' : 36e5,\n            'Days' : 864e5,\n            'Months' : 2592e6,\n            'Years' : 31536e6\n        },\n\n        unitAliases = {\n            ms : 'millisecond',\n            s : 'second',\n            m : 'minute',\n            h : 'hour',\n            d : 'day',\n            D : 'date',\n            w : 'week',\n            W : 'isoWeek',\n            M : 'month',\n            Q : 'quarter',\n            y : 'year',\n            DDD : 'dayOfYear',\n            e : 'weekday',\n            E : 'isoWeekday',\n            gg: 'weekYear',\n            GG: 'isoWeekYear'\n        },\n\n        camelFunctions = {\n            dayofyear : 'dayOfYear',\n            isoweekday : 'isoWeekday',\n            isoweek : 'isoWeek',\n            weekyear : 'weekYear',\n            isoweekyear : 'isoWeekYear'\n        },\n\n        // format function strings\n        formatFunctions = {},\n\n        // default relative time thresholds\n        relativeTimeThresholds = {\n            s: 45,  // seconds to minute\n            m: 45,  // minutes to hour\n            h: 22,  // hours to day\n            d: 26,  // days to month\n            M: 11   // months to year\n        },\n\n        // tokens to ordinalize and pad\n        ordinalizeTokens = 'DDD w W M D d'.split(' '),\n        paddedTokens = 'M D H h m s w W'.split(' '),\n\n        formatTokenFunctions = {\n            M    : function () {\n                return this.month() + 1;\n            },\n            MMM  : function (format) {\n                return this.localeData().monthsShort(this, format);\n            },\n            MMMM : function (format) {\n                return this.localeData().months(this, format);\n            },\n            D    : function () {\n                return this.date();\n            },\n            DDD  : function () {\n                return this.dayOfYear();\n            },\n            d    : function () {\n                return this.day();\n            },\n            dd   : function (format) {\n                return this.localeData().weekdaysMin(this, format);\n            },\n            ddd  : function (format) {\n                return this.localeData().weekdaysShort(this, format);\n            },\n            dddd : function (format) {\n                return this.localeData().weekdays(this, format);\n            },\n            w    : function () {\n                return this.week();\n            },\n            W    : function () {\n                return this.isoWeek();\n            },\n            YY   : function () {\n                return leftZeroFill(this.year() % 100, 2);\n            },\n            YYYY : function () {\n                return leftZeroFill(this.year(), 4);\n            },\n            YYYYY : function () {\n                return leftZeroFill(this.year(), 5);\n            },\n            YYYYYY : function () {\n                var y = this.year(), sign = y >= 0 ? '+' : '-';\n                return sign + leftZeroFill(Math.abs(y), 6);\n            },\n            gg   : function () {\n                return leftZeroFill(this.weekYear() % 100, 2);\n            },\n            gggg : function () {\n                return leftZeroFill(this.weekYear(), 4);\n            },\n            ggggg : function () {\n                return leftZeroFill(this.weekYear(), 5);\n            },\n            GG   : function () {\n                return leftZeroFill(this.isoWeekYear() % 100, 2);\n            },\n            GGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 4);\n            },\n            GGGGG : function () {\n                return leftZeroFill(this.isoWeekYear(), 5);\n            },\n            e : function () {\n                return this.weekday();\n            },\n            E : function () {\n                return this.isoWeekday();\n            },\n            a    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), true);\n            },\n            A    : function () {\n                return this.localeData().meridiem(this.hours(), this.minutes(), false);\n            },\n            H    : function () {\n                return this.hours();\n            },\n            h    : function () {\n                return this.hours() % 12 || 12;\n            },\n            m    : function () {\n                return this.minutes();\n            },\n            s    : function () {\n                return this.seconds();\n            },\n            S    : function () {\n                return toInt(this.milliseconds() / 100);\n            },\n            SS   : function () {\n                return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n            },\n            SSS  : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            SSSS : function () {\n                return leftZeroFill(this.milliseconds(), 3);\n            },\n            Z    : function () {\n                var a = -this.zone(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);\n            },\n            ZZ   : function () {\n                var a = -this.zone(),\n                    b = '+';\n                if (a < 0) {\n                    a = -a;\n                    b = '-';\n                }\n                return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n            },\n            z : function () {\n                return this.zoneAbbr();\n            },\n            zz : function () {\n                return this.zoneName();\n            },\n            x    : function () {\n                return this.valueOf();\n            },\n            X    : function () {\n                return this.unix();\n            },\n            Q : function () {\n                return this.quarter();\n            }\n        },\n\n        deprecations = {},\n\n        lists = ['months', 'monthsShort', 'weekdays', 'weekdaysShort', 'weekdaysMin'];\n\n    // Pick the first defined of two or three arguments. dfl comes from\n    // default.\n    function dfl(a, b, c) {\n        switch (arguments.length) {\n            case 2: return a != null ? a : b;\n            case 3: return a != null ? a : b != null ? b : c;\n            default: throw new Error('Implement me');\n        }\n    }\n\n    function hasOwnProp(a, b) {\n        return hasOwnProperty.call(a, b);\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object, and es5 standard is not very\n        // helpful.\n        return {\n            empty : false,\n            unusedTokens : [],\n            unusedInput : [],\n            overflow : -2,\n            charsLeftOver : 0,\n            nullInput : false,\n            invalidMonth : null,\n            invalidFormat : false,\n            userInvalidated : false,\n            iso: false\n        };\n    }\n\n    function printMsg(msg) {\n        if (moment.suppressDeprecationWarnings === false &&\n                typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n        return extend(function () {\n            if (firstTime) {\n                printMsg(msg);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            printMsg(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    function padToken(func, count) {\n        return function (a) {\n            return leftZeroFill(func.call(this, a), count);\n        };\n    }\n    function ordinalizeToken(func, period) {\n        return function (a) {\n            return this.localeData().ordinal(func.call(this, a), period);\n        };\n    }\n\n    while (ordinalizeTokens.length) {\n        i = ordinalizeTokens.pop();\n        formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);\n    }\n    while (paddedTokens.length) {\n        i = paddedTokens.pop();\n        formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n    }\n    formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    function Locale() {\n    }\n\n    // Moment prototype object\n    function Moment(config, skipOverflow) {\n        if (skipOverflow !== false) {\n            checkOverflow(config);\n        }\n        copyConfig(this, config);\n        this._d = new Date(+config._d);\n    }\n\n    // Duration Constructor\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = moment.localeData();\n\n        this._bubble();\n    }\n\n    /************************************\n        Helpers\n    ************************************/\n\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = from._pf;\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    // left zero fill a number\n    // see http://jsperf.com/left-zero-filling for performance comparison\n    function leftZeroFill(number, targetLength, forceSign) {\n        var output = '' + Math.abs(number),\n            sign = number >= 0;\n\n        while (output.length < targetLength) {\n            output = '0' + output;\n        }\n        return (sign ? (forceSign ? '+' : '') : '-') + output;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = makeAs(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = moment.duration(val, period);\n            addOrSubtractDurationFromMoment(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            moment.updateOffset(mom, days || months);\n        }\n    }\n\n    // check if is an array\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return Object.prototype.toString.call(input) === '[object Date]' ||\n            input instanceof Date;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function normalizeUnits(units) {\n        if (units) {\n            var lowered = units.toLowerCase().replace(/(.)s$/, '$1');\n            units = unitAliases[units] || camelFunctions[lowered] || lowered;\n        }\n        return units;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeList(field) {\n        var count, setter;\n\n        if (field.indexOf('week') === 0) {\n            count = 7;\n            setter = 'day';\n        }\n        else if (field.indexOf('month') === 0) {\n            count = 12;\n            setter = 'month';\n        }\n        else {\n            return;\n        }\n\n        moment[field] = function (format, index) {\n            var i, getter,\n                method = moment._locale[field],\n                results = [];\n\n            if (typeof format === 'number') {\n                index = format;\n                format = undefined;\n            }\n\n            getter = function (i) {\n                var m = moment().utc().set(setter, i);\n                return method.call(moment._locale, m, format || '');\n            };\n\n            if (index != null) {\n                return getter(index);\n            }\n            else {\n                for (i = 0; i < count; i++) {\n                    results.push(getter(i));\n                }\n                return results;\n            }\n        };\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function checkOverflow(m) {\n        var overflow;\n        if (m._a && m._pf.overflow === -2) {\n            overflow =\n                m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :\n                m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :\n                m._a[HOUR] < 0 || m._a[HOUR] > 24 ||\n                    (m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 ||\n                                           m._a[SECOND] !== 0 ||\n                                           m._a[MILLISECOND] !== 0)) ? HOUR :\n                m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :\n                m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :\n                m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            m._pf.overflow = overflow;\n        }\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            m._isValid = !isNaN(m._d.getTime()) &&\n                m._pf.overflow < 0 &&\n                !m._pf.empty &&\n                !m._pf.invalidMonth &&\n                !m._pf.nullInput &&\n                !m._pf.invalidFormat &&\n                !m._pf.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    m._pf.charsLeftOver === 0 &&\n                    m._pf.unusedTokens.length === 0 &&\n                    m._pf.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        if (!locales[name] && hasModule) {\n            try {\n                oldLocale = moment.locale();\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales\n                moment.locale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function makeAs(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (moment.isMoment(input) || isDate(input) ?\n                    +input : +moment(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            moment.updateOffset(res, false);\n            return res;\n        } else {\n            return moment(input).local();\n        }\n    }\n\n    /************************************\n        Locale\n    ************************************/\n\n\n    extend(Locale.prototype, {\n\n        set : function (config) {\n            var prop, i;\n            for (i in config) {\n                prop = config[i];\n                if (typeof prop === 'function') {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n            // Lenient ordinal parsing accepts just a number in addition to\n            // number + (possibly) stuff coming from _ordinalParseLenient.\n            this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\\d{1,2}/.source);\n        },\n\n        _months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        months : function (m) {\n            return this._months[m.month()];\n        },\n\n        _monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        monthsShort : function (m) {\n            return this._monthsShort[m.month()];\n        },\n\n        monthsParse : function (monthName, format, strict) {\n            var i, mom, regex;\n\n            if (!this._monthsParse) {\n                this._monthsParse = [];\n                this._longMonthsParse = [];\n                this._shortMonthsParse = [];\n            }\n\n            for (i = 0; i < 12; i++) {\n                // make the regex if we don't have it already\n                mom = moment.utc([2000, i]);\n                if (strict && !this._longMonthsParse[i]) {\n                    this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                    this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n                }\n                if (!strict && !this._monthsParse[i]) {\n                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                    return i;\n                } else if (!strict && this._monthsParse[i].test(monthName)) {\n                    return i;\n                }\n            }\n        },\n\n        _weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdays : function (m) {\n            return this._weekdays[m.day()];\n        },\n\n        _weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysShort : function (m) {\n            return this._weekdaysShort[m.day()];\n        },\n\n        _weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        weekdaysMin : function (m) {\n            return this._weekdaysMin[m.day()];\n        },\n\n        weekdaysParse : function (weekdayName) {\n            var i, mom, regex;\n\n            if (!this._weekdaysParse) {\n                this._weekdaysParse = [];\n            }\n\n            for (i = 0; i < 7; i++) {\n                // make the regex if we don't have it already\n                if (!this._weekdaysParse[i]) {\n                    mom = moment([2000, 1]).day(i);\n                    regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                    this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (this._weekdaysParse[i].test(weekdayName)) {\n                    return i;\n                }\n            }\n        },\n\n        _longDateFormat : {\n            LTS : 'h:mm:ss A',\n            LT : 'h:mm A',\n            L : 'MM/DD/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY LT',\n            LLLL : 'dddd, MMMM D, YYYY LT'\n        },\n        longDateFormat : function (key) {\n            var output = this._longDateFormat[key];\n            if (!output && this._longDateFormat[key.toUpperCase()]) {\n                output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                    return val.slice(1);\n                });\n                this._longDateFormat[key] = output;\n            }\n            return output;\n        },\n\n        isPM : function (input) {\n            // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n            // Using charAt should be more compatible.\n            return ((input + '').toLowerCase().charAt(0) === 'p');\n        },\n\n        _meridiemParse : /[ap]\\.?m?\\.?/i,\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'pm' : 'PM';\n            } else {\n                return isLower ? 'am' : 'AM';\n            }\n        },\n\n        _calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        calendar : function (key, mom, now) {\n            var output = this._calendar[key];\n            return typeof output === 'function' ? output.apply(mom, [now]) : output;\n        },\n\n        _relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n\n        relativeTime : function (number, withoutSuffix, string, isFuture) {\n            var output = this._relativeTime[string];\n            return (typeof output === 'function') ?\n                output(number, withoutSuffix, string, isFuture) :\n                output.replace(/%d/i, number);\n        },\n\n        pastFuture : function (diff, output) {\n            var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n            return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n        },\n\n        ordinal : function (number) {\n            return this._ordinal.replace('%d', number);\n        },\n        _ordinal : '%d',\n        _ordinalParse : /\\d{1,2}/,\n\n        preparse : function (string) {\n            return string;\n        },\n\n        postformat : function (string) {\n            return string;\n        },\n\n        week : function (mom) {\n            return weekOfYear(mom, this._week.dow, this._week.doy).week;\n        },\n\n        _week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        },\n\n        _invalidDate: 'Invalid date',\n        invalidDate: function () {\n            return this._invalidDate;\n        }\n    });\n\n    /************************************\n        Formatting\n    ************************************/\n\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n\n        if (!formatFunctions[format]) {\n            formatFunctions[format] = makeFormatFunction(format);\n        }\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n\n    /************************************\n        Parsing\n    ************************************/\n\n\n    // get the regex to find the next token\n    function getParseRegexForToken(token, config) {\n        var a, strict = config._strict;\n        switch (token) {\n        case 'Q':\n            return parseTokenOneDigit;\n        case 'DDDD':\n            return parseTokenThreeDigits;\n        case 'YYYY':\n        case 'GGGG':\n        case 'gggg':\n            return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n        case 'Y':\n        case 'G':\n        case 'g':\n            return parseTokenSignedNumber;\n        case 'YYYYYY':\n        case 'YYYYY':\n        case 'GGGGG':\n        case 'ggggg':\n            return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n        case 'S':\n            if (strict) {\n                return parseTokenOneDigit;\n            }\n            /* falls through */\n        case 'SS':\n            if (strict) {\n                return parseTokenTwoDigits;\n            }\n            /* falls through */\n        case 'SSS':\n            if (strict) {\n                return parseTokenThreeDigits;\n            }\n            /* falls through */\n        case 'DDD':\n            return parseTokenOneToThreeDigits;\n        case 'MMM':\n        case 'MMMM':\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            return parseTokenWord;\n        case 'a':\n        case 'A':\n            return config._locale._meridiemParse;\n        case 'x':\n            return parseTokenOffsetMs;\n        case 'X':\n            return parseTokenTimestampMs;\n        case 'Z':\n        case 'ZZ':\n            return parseTokenTimezone;\n        case 'T':\n            return parseTokenT;\n        case 'SSSS':\n            return parseTokenDigits;\n        case 'MM':\n        case 'DD':\n        case 'YY':\n        case 'GG':\n        case 'gg':\n        case 'HH':\n        case 'hh':\n        case 'mm':\n        case 'ss':\n        case 'ww':\n        case 'WW':\n            return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n        case 'M':\n        case 'D':\n        case 'd':\n        case 'H':\n        case 'h':\n        case 'm':\n        case 's':\n        case 'w':\n        case 'W':\n        case 'e':\n        case 'E':\n            return parseTokenOneOrTwoDigits;\n        case 'Do':\n            return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;\n        default :\n            a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\\\', '')), 'i'));\n            return a;\n        }\n    }\n\n    function timezoneMinutesFromString(string) {\n        string = string || '';\n        var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n            minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? -minutes : minutes;\n    }\n\n    // function to convert string input to date\n    function addTimeToArrayFromToken(token, input, config) {\n        var a, datePartArray = config._a;\n\n        switch (token) {\n        // QUARTER\n        case 'Q':\n            if (input != null) {\n                datePartArray[MONTH] = (toInt(input) - 1) * 3;\n            }\n            break;\n        // MONTH\n        case 'M' : // fall through to MM\n        case 'MM' :\n            if (input != null) {\n                datePartArray[MONTH] = toInt(input) - 1;\n            }\n            break;\n        case 'MMM' : // fall through to MMMM\n        case 'MMMM' :\n            a = config._locale.monthsParse(input, token, config._strict);\n            // if we didn't find a month name, mark the date as invalid.\n            if (a != null) {\n                datePartArray[MONTH] = a;\n            } else {\n                config._pf.invalidMonth = input;\n            }\n            break;\n        // DAY OF MONTH\n        case 'D' : // fall through to DD\n        case 'DD' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(input);\n            }\n            break;\n        case 'Do' :\n            if (input != null) {\n                datePartArray[DATE] = toInt(parseInt(\n                            input.match(/\\d{1,2}/)[0], 10));\n            }\n            break;\n        // DAY OF YEAR\n        case 'DDD' : // fall through to DDDD\n        case 'DDDD' :\n            if (input != null) {\n                config._dayOfYear = toInt(input);\n            }\n\n            break;\n        // YEAR\n        case 'YY' :\n            datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n            break;\n        case 'YYYY' :\n        case 'YYYYY' :\n        case 'YYYYYY' :\n            datePartArray[YEAR] = toInt(input);\n            break;\n        // AM / PM\n        case 'a' : // fall through to A\n        case 'A' :\n            config._isPm = config._locale.isPM(input);\n            break;\n        // HOUR\n        case 'h' : // fall through to hh\n        case 'hh' :\n            config._pf.bigHour = true;\n            /* falls through */\n        case 'H' : // fall through to HH\n        case 'HH' :\n            datePartArray[HOUR] = toInt(input);\n            break;\n        // MINUTE\n        case 'm' : // fall through to mm\n        case 'mm' :\n            datePartArray[MINUTE] = toInt(input);\n            break;\n        // SECOND\n        case 's' : // fall through to ss\n        case 'ss' :\n            datePartArray[SECOND] = toInt(input);\n            break;\n        // MILLISECOND\n        case 'S' :\n        case 'SS' :\n        case 'SSS' :\n        case 'SSSS' :\n            datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);\n            break;\n        // UNIX OFFSET (MILLISECONDS)\n        case 'x':\n            config._d = new Date(toInt(input));\n            break;\n        // UNIX TIMESTAMP WITH MS\n        case 'X':\n            config._d = new Date(parseFloat(input) * 1000);\n            break;\n        // TIMEZONE\n        case 'Z' : // fall through to ZZ\n        case 'ZZ' :\n            config._useUTC = true;\n            config._tzm = timezoneMinutesFromString(input);\n            break;\n        // WEEKDAY - human\n        case 'dd':\n        case 'ddd':\n        case 'dddd':\n            a = config._locale.weekdaysParse(input);\n            // if we didn't get a weekday name, mark the date as invalid\n            if (a != null) {\n                config._w = config._w || {};\n                config._w['d'] = a;\n            } else {\n                config._pf.invalidWeekday = input;\n            }\n            break;\n        // WEEK, WEEK DAY - numeric\n        case 'w':\n        case 'ww':\n        case 'W':\n        case 'WW':\n        case 'd':\n        case 'e':\n        case 'E':\n            token = token.substr(0, 1);\n            /* falls through */\n        case 'gggg':\n        case 'GGGG':\n        case 'GGGGG':\n            token = token.substr(0, 2);\n            if (input) {\n                config._w = config._w || {};\n                config._w[token] = toInt(input);\n            }\n            break;\n        case 'gg':\n        case 'GG':\n            config._w = config._w || {};\n            config._w[token] = moment.parseTwoDigitYear(input);\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n            week = dfl(w.W, 1);\n            weekday = dfl(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n            week = dfl(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function dateFromConfig(config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                config._pf._overflowDayOfYear = true;\n            }\n\n            date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n        // Apply timezone offset from input. The actual zone can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() + config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dateFromObject(config) {\n        var normalizedInput;\n\n        if (config._d) {\n            return;\n        }\n\n        normalizedInput = normalizeObjectUnits(config._i);\n        config._a = [\n            normalizedInput.year,\n            normalizedInput.month,\n            normalizedInput.day || normalizedInput.date,\n            normalizedInput.hour,\n            normalizedInput.minute,\n            normalizedInput.second,\n            normalizedInput.millisecond\n        ];\n\n        dateFromConfig(config);\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [\n                now.getUTCFullYear(),\n                now.getUTCMonth(),\n                now.getUTCDate()\n            ];\n        } else {\n            return [now.getFullYear(), now.getMonth(), now.getDate()];\n        }\n    }\n\n    // date from string and format string\n    function makeDateFromStringAndFormat(config) {\n        if (config._f === moment.ISO_8601) {\n            parseISO(config);\n            return;\n        }\n\n        config._a = [];\n        config._pf.empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    config._pf.unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    config._pf.empty = false;\n                }\n                else {\n                    config._pf.unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                config._pf.unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            config._pf.unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {\n            config._pf.bigHour = undefined;\n        }\n        // handle am pm\n        if (config._isPm && config._a[HOUR] < 12) {\n            config._a[HOUR] += 12;\n        }\n        // if is 12 am, change hours to 0\n        if (config._isPm === false && config._a[HOUR] === 12) {\n            config._a[HOUR] = 0;\n        }\n        dateFromConfig(config);\n        checkOverflow(config);\n    }\n\n    function unescapeFormat(s) {\n        return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        });\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function regexpEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    // date from string and array of format strings\n    function makeDateFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            config._pf.invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._pf = defaultParsingFlags();\n            tempConfig._f = config._f[i];\n            makeDateFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += tempConfig._pf.charsLeftOver;\n\n            //or tokens\n            currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n            tempConfig._pf.score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    // date from iso format\n    function parseISO(config) {\n        var i, l,\n            string = config._i,\n            match = isoRegex.exec(string);\n\n        if (match) {\n            config._pf.iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    // match[5] should be 'T' or undefined\n                    config._f = isoDates[i][0] + (match[6] || ' ');\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    config._f += isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(parseTokenTimezone)) {\n                config._f += 'Z';\n            }\n            makeDateFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function makeDateFromString(config) {\n        parseISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function makeDateFromInput(config) {\n        var input = config._i, matched;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {\n            config._d = new Date(+matched[1]);\n        } else if (typeof input === 'string') {\n            makeDateFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            dateFromConfig(config);\n        } else if (typeof(input) === 'object') {\n            dateFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            moment.createFromInputFallback(config);\n        }\n    }\n\n    function makeDate(y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function makeUTCDate(y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    function parseWeekday(input, locale) {\n        if (typeof input === 'string') {\n            if (!isNaN(input)) {\n                input = parseInt(input, 10);\n            }\n            else {\n                input = locale.weekdaysParse(input);\n                if (typeof input !== 'number') {\n                    return null;\n                }\n            }\n        }\n        return input;\n    }\n\n    /************************************\n        Relative Time\n    ************************************/\n\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime(posNegDuration, withoutSuffix, locale) {\n        var duration = moment.duration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            years = round(duration.as('y')),\n\n            args = seconds < relativeTimeThresholds.s && ['s', seconds] ||\n                minutes === 1 && ['m'] ||\n                minutes < relativeTimeThresholds.m && ['mm', minutes] ||\n                hours === 1 && ['h'] ||\n                hours < relativeTimeThresholds.h && ['hh', hours] ||\n                days === 1 && ['d'] ||\n                days < relativeTimeThresholds.d && ['dd', days] ||\n                months === 1 && ['M'] ||\n                months < relativeTimeThresholds.M && ['MM', months] ||\n                years === 1 && ['y'] || ['yy', years];\n\n        args[2] = withoutSuffix;\n        args[3] = +posNegDuration > 0;\n        args[4] = locale;\n        return substituteTimeAgo.apply({}, args);\n    }\n\n\n    /************************************\n        Week of Year\n    ************************************/\n\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;\n\n        d = d === 0 ? 7 : d;\n        weekday = weekday != null ? weekday : firstDayOfWeek;\n        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n        return {\n            year: dayOfYear > 0 ? year : year - 1,\n            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    /************************************\n        Top Level Functions\n    ************************************/\n\n    function makeMoment(config) {\n        var input = config._i,\n            format = config._f,\n            res;\n\n        config._locale = config._locale || moment.localeData(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return moment.invalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (moment.isMoment(input)) {\n            return new Moment(input, true);\n        } else if (format) {\n            if (isArray(format)) {\n                makeDateFromStringAndArray(config);\n            } else {\n                makeDateFromStringAndFormat(config);\n            }\n        } else {\n            makeDateFromInput(config);\n        }\n\n        res = new Moment(config);\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    moment = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._i = input;\n        c._f = format;\n        c._l = locale;\n        c._strict = strict;\n        c._isUTC = false;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c);\n    };\n\n    moment.suppressDeprecationWarnings = false;\n\n    moment.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return moment();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    moment.min = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    };\n\n    moment.max = function () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    };\n\n    // creating with utc\n    moment.utc = function (input, format, locale, strict) {\n        var c;\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c = {};\n        c._isAMomentObject = true;\n        c._useUTC = true;\n        c._isUTC = true;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n        c._pf = defaultParsingFlags();\n\n        return makeMoment(c).utc();\n    };\n\n    // creating with unix timestamp (in seconds)\n    moment.unix = function (input) {\n        return moment(input * 1000);\n    };\n\n    // duration\n    moment.duration = function (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            parseIso,\n            diffRes;\n\n        if (moment.isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = isoDurationRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            parseIso = function (inp) {\n                // We'd normally use ~~inp for this, but unfortunately it also\n                // converts floats to ints.\n                // inp may be undefined, so careful calling replace on it.\n                var res = inp && parseFloat(inp.replace(',', '.'));\n                // apply sign while we're at it\n                return (isNaN(res) ? 0 : res) * sign;\n            };\n            duration = {\n                y: parseIso(match[2]),\n                M: parseIso(match[3]),\n                d: parseIso(match[4]),\n                h: parseIso(match[5]),\n                m: parseIso(match[6]),\n                s: parseIso(match[7]),\n                w: parseIso(match[8])\n            };\n        } else if (typeof duration === 'object' &&\n                ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(moment(duration.from), moment(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    };\n\n    // version number\n    moment.version = VERSION;\n\n    // default format\n    moment.defaultFormat = isoFormat;\n\n    // constant that refers to the ISO standard\n    moment.ISO_8601 = function () {};\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    moment.momentProperties = momentProperties;\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    moment.updateOffset = function () {};\n\n    // This function allows you to set a threshold for relative time strings\n    moment.relativeTimeThreshold = function (threshold, limit) {\n        if (relativeTimeThresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return relativeTimeThresholds[threshold];\n        }\n        relativeTimeThresholds[threshold] = limit;\n        return true;\n    };\n\n    moment.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        function (key, value) {\n            return moment.locale(key, value);\n        }\n    );\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    moment.locale = function (key, values) {\n        var data;\n        if (key) {\n            if (typeof(values) !== 'undefined') {\n                data = moment.defineLocale(key, values);\n            }\n            else {\n                data = moment.localeData(key);\n            }\n\n            if (data) {\n                moment.duration._locale = moment._locale = data;\n            }\n        }\n\n        return moment._locale._abbr;\n    };\n\n    moment.defineLocale = function (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            if (!locales[name]) {\n                locales[name] = new Locale();\n            }\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            moment.locale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    };\n\n    moment.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        function (key) {\n            return moment.localeData(key);\n        }\n    );\n\n    // returns locale data\n    moment.localeData = function (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return moment._locale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    };\n\n    // compare moment object\n    moment.isMoment = function (obj) {\n        return obj instanceof Moment ||\n            (obj != null && hasOwnProp(obj, '_isAMomentObject'));\n    };\n\n    // for typechecking Duration objects\n    moment.isDuration = function (obj) {\n        return obj instanceof Duration;\n    };\n\n    for (i = lists.length - 1; i >= 0; --i) {\n        makeList(lists[i]);\n    }\n\n    moment.normalizeUnits = function (units) {\n        return normalizeUnits(units);\n    };\n\n    moment.invalid = function (flags) {\n        var m = moment.utc(NaN);\n        if (flags != null) {\n            extend(m._pf, flags);\n        }\n        else {\n            m._pf.userInvalidated = true;\n        }\n\n        return m;\n    };\n\n    moment.parseZone = function () {\n        return moment.apply(null, arguments).parseZone();\n    };\n\n    moment.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    /************************************\n        Moment Prototype\n    ************************************/\n\n\n    extend(moment.fn = Moment.prototype, {\n\n        clone : function () {\n            return moment(this);\n        },\n\n        valueOf : function () {\n            return +this._d + ((this._offset || 0) * 60000);\n        },\n\n        unix : function () {\n            return Math.floor(+this / 1000);\n        },\n\n        toString : function () {\n            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n        },\n\n        toDate : function () {\n            return this._offset ? new Date(+this) : this._d;\n        },\n\n        toISOString : function () {\n            var m = moment(this).utc();\n            if (0 < m.year() && m.year() <= 9999) {\n                if ('function' === typeof Date.prototype.toISOString) {\n                    // native implementation is ~50x faster, use it when we can\n                    return this.toDate().toISOString();\n                } else {\n                    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n                }\n            } else {\n                return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        },\n\n        toArray : function () {\n            var m = this;\n            return [\n                m.year(),\n                m.month(),\n                m.date(),\n                m.hours(),\n                m.minutes(),\n                m.seconds(),\n                m.milliseconds()\n            ];\n        },\n\n        isValid : function () {\n            return isValid(this);\n        },\n\n        isDSTShifted : function () {\n            if (this._a) {\n                return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n            }\n\n            return false;\n        },\n\n        parsingFlags : function () {\n            return extend({}, this._pf);\n        },\n\n        invalidAt: function () {\n            return this._pf.overflow;\n        },\n\n        utc : function (keepLocalTime) {\n            return this.zone(0, keepLocalTime);\n        },\n\n        local : function (keepLocalTime) {\n            if (this._isUTC) {\n                this.zone(0, keepLocalTime);\n                this._isUTC = false;\n\n                if (keepLocalTime) {\n                    this.add(this._dateTzOffset(), 'm');\n                }\n            }\n            return this;\n        },\n\n        format : function (inputString) {\n            var output = formatMoment(this, inputString || moment.defaultFormat);\n            return this.localeData().postformat(output);\n        },\n\n        add : createAdder(1, 'add'),\n\n        subtract : createAdder(-1, 'subtract'),\n\n        diff : function (input, units, asFloat) {\n            var that = makeAs(input, this),\n                zoneDiff = (this.zone() - that.zone()) * 6e4,\n                diff, output, daysAdjust;\n\n            units = normalizeUnits(units);\n\n            if (units === 'year' || units === 'month') {\n                // average number of days in the months in the given dates\n                diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2\n                // difference in months\n                output = ((this.year() - that.year()) * 12) + (this.month() - that.month());\n                // adjust by taking difference in days, average number of days\n                // and dst in the given months.\n                daysAdjust = (this - moment(this).startOf('month')) -\n                    (that - moment(that).startOf('month'));\n                // same as above but with zones, to negate all dst\n                daysAdjust -= ((this.zone() - moment(this).startOf('month').zone()) -\n                        (that.zone() - moment(that).startOf('month').zone())) * 6e4;\n                output += daysAdjust / diff;\n                if (units === 'year') {\n                    output = output / 12;\n                }\n            } else {\n                diff = (this - that);\n                output = units === 'second' ? diff / 1e3 : // 1000\n                    units === 'minute' ? diff / 6e4 : // 1000 * 60\n                    units === 'hour' ? diff / 36e5 : // 1000 * 60 * 60\n                    units === 'day' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                    units === 'week' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                    diff;\n            }\n            return asFloat ? output : absRound(output);\n        },\n\n        from : function (time, withoutSuffix) {\n            return moment.duration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        },\n\n        fromNow : function (withoutSuffix) {\n            return this.from(moment(), withoutSuffix);\n        },\n\n        calendar : function (time) {\n            // We want to compare the start of today, vs this.\n            // Getting start-of-today depends on whether we're zone'd or not.\n            var now = time || moment(),\n                sod = makeAs(now, this).startOf('day'),\n                diff = this.diff(sod, 'days', true),\n                format = diff < -6 ? 'sameElse' :\n                    diff < -1 ? 'lastWeek' :\n                    diff < 0 ? 'lastDay' :\n                    diff < 1 ? 'sameDay' :\n                    diff < 2 ? 'nextDay' :\n                    diff < 7 ? 'nextWeek' : 'sameElse';\n            return this.format(this.localeData().calendar(format, this, moment(now)));\n        },\n\n        isLeapYear : function () {\n            return isLeapYear(this.year());\n        },\n\n        isDST : function () {\n            return (this.zone() < this.clone().month(0).zone() ||\n                this.zone() < this.clone().month(5).zone());\n        },\n\n        day : function (input) {\n            var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n            if (input != null) {\n                input = parseWeekday(input, this.localeData());\n                return this.add(input - day, 'd');\n            } else {\n                return day;\n            }\n        },\n\n        month : makeAccessor('Month', true),\n\n        startOf : function (units) {\n            units = normalizeUnits(units);\n            // the following switch intentionally omits break keywords\n            // to utilize falling through the cases.\n            switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n                /* falls through */\n            }\n\n            // weeks are a special case\n            if (units === 'week') {\n                this.weekday(0);\n            } else if (units === 'isoWeek') {\n                this.isoWeekday(1);\n            }\n\n            // quarters are also special\n            if (units === 'quarter') {\n                this.month(Math.floor(this.month() / 3) * 3);\n            }\n\n            return this;\n        },\n\n        endOf: function (units) {\n            units = normalizeUnits(units);\n            if (units === undefined || units === 'millisecond') {\n                return this;\n            }\n            return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n        },\n\n        isAfter: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this > +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return inputMs < +this.clone().startOf(units);\n            }\n        },\n\n        isBefore: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this < +input;\n            } else {\n                inputMs = moment.isMoment(input) ? +input : +moment(input);\n                return +this.clone().endOf(units) < inputMs;\n            }\n        },\n\n        isSame: function (input, units) {\n            var inputMs;\n            units = normalizeUnits(units || 'millisecond');\n            if (units === 'millisecond') {\n                input = moment.isMoment(input) ? input : moment(input);\n                return +this === +input;\n            } else {\n                inputMs = +moment(input);\n                return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n            }\n        },\n\n        min: deprecate(\n                 'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n                 function (other) {\n                     other = moment.apply(null, arguments);\n                     return other < this ? this : other;\n                 }\n         ),\n\n        max: deprecate(\n                'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n                function (other) {\n                    other = moment.apply(null, arguments);\n                    return other > this ? this : other;\n                }\n        ),\n\n        // keepLocalTime = true means only change the timezone, without\n        // affecting the local hour. So 5:31:26 +0300 --[zone(2, true)]-->\n        // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist int zone\n        // +0200, so we adjust the time as needed, to be valid.\n        //\n        // Keeping the time actually adds/subtracts (one hour)\n        // from the actual represented time. That is why we call updateOffset\n        // a second time. In case it wants us to change the offset again\n        // _changeInProgress == true case, then we have to adjust, because\n        // there is no such time in the given timezone.\n        zone : function (input, keepLocalTime) {\n            var offset = this._offset || 0,\n                localAdjust;\n            if (input != null) {\n                if (typeof input === 'string') {\n                    input = timezoneMinutesFromString(input);\n                }\n                if (Math.abs(input) < 16) {\n                    input = input * 60;\n                }\n                if (!this._isUTC && keepLocalTime) {\n                    localAdjust = this._dateTzOffset();\n                }\n                this._offset = input;\n                this._isUTC = true;\n                if (localAdjust != null) {\n                    this.subtract(localAdjust, 'm');\n                }\n                if (offset !== input) {\n                    if (!keepLocalTime || this._changeInProgress) {\n                        addOrSubtractDurationFromMoment(this,\n                                moment.duration(offset - input, 'm'), 1, false);\n                    } else if (!this._changeInProgress) {\n                        this._changeInProgress = true;\n                        moment.updateOffset(this, true);\n                        this._changeInProgress = null;\n                    }\n                }\n            } else {\n                return this._isUTC ? offset : this._dateTzOffset();\n            }\n            return this;\n        },\n\n        zoneAbbr : function () {\n            return this._isUTC ? 'UTC' : '';\n        },\n\n        zoneName : function () {\n            return this._isUTC ? 'Coordinated Universal Time' : '';\n        },\n\n        parseZone : function () {\n            if (this._tzm) {\n                this.zone(this._tzm);\n            } else if (typeof this._i === 'string') {\n                this.zone(this._i);\n            }\n            return this;\n        },\n\n        hasAlignedHourOffset : function (input) {\n            if (!input) {\n                input = 0;\n            }\n            else {\n                input = moment(input).zone();\n            }\n\n            return (this.zone() - input) % 60 === 0;\n        },\n\n        daysInMonth : function () {\n            return daysInMonth(this.year(), this.month());\n        },\n\n        dayOfYear : function (input) {\n            var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;\n            return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n        },\n\n        quarter : function (input) {\n            return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n        },\n\n        weekYear : function (input) {\n            var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        isoWeekYear : function (input) {\n            var year = weekOfYear(this, 1, 4).year;\n            return input == null ? year : this.add((input - year), 'y');\n        },\n\n        week : function (input) {\n            var week = this.localeData().week(this);\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        isoWeek : function (input) {\n            var week = weekOfYear(this, 1, 4).week;\n            return input == null ? week : this.add((input - week) * 7, 'd');\n        },\n\n        weekday : function (input) {\n            var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n            return input == null ? weekday : this.add(input - weekday, 'd');\n        },\n\n        isoWeekday : function (input) {\n            // behaves the same as moment#day except\n            // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n            // as a setter, sunday should belong to the previous week.\n            return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n        },\n\n        isoWeeksInYear : function () {\n            return weeksInYear(this.year(), 1, 4);\n        },\n\n        weeksInYear : function () {\n            var weekInfo = this.localeData()._week;\n            return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units]();\n        },\n\n        set : function (units, value) {\n            units = normalizeUnits(units);\n            if (typeof this[units] === 'function') {\n                this[units](value);\n            }\n            return this;\n        },\n\n        // If passed a locale key, it will set the locale for this\n        // instance.  Otherwise, it will return the locale configuration\n        // variables for this instance.\n        locale : function (key) {\n            var newLocaleData;\n\n            if (key === undefined) {\n                return this._locale._abbr;\n            } else {\n                newLocaleData = moment.localeData(key);\n                if (newLocaleData != null) {\n                    this._locale = newLocaleData;\n                }\n                return this;\n            }\n        },\n\n        lang : deprecate(\n            'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n            function (key) {\n                if (key === undefined) {\n                    return this.localeData();\n                } else {\n                    return this.locale(key);\n                }\n            }\n        ),\n\n        localeData : function () {\n            return this._locale;\n        },\n\n        _dateTzOffset : function () {\n            // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n            // https://github.com/moment/moment/pull/1871\n            return Math.round(this._d.getTimezoneOffset() / 15) * 15;\n        }\n    });\n\n    function rawMonthSetter(mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(),\n                daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function rawGetter(mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function rawSetter(mom, unit, value) {\n        if (unit === 'Month') {\n            return rawMonthSetter(mom, value);\n        } else {\n            return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n\n    function makeAccessor(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                rawSetter(this, unit, value);\n                moment.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return rawGetter(this, unit);\n            }\n        };\n    }\n\n    moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);\n    moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);\n    moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);\n    // moment.fn.month is defined separately\n    moment.fn.date = makeAccessor('Date', true);\n    moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));\n    moment.fn.year = makeAccessor('FullYear', true);\n    moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));\n\n    // add plural methods\n    moment.fn.days = moment.fn.day;\n    moment.fn.months = moment.fn.month;\n    moment.fn.weeks = moment.fn.week;\n    moment.fn.isoWeeks = moment.fn.isoWeek;\n    moment.fn.quarters = moment.fn.quarter;\n\n    // add aliased format methods\n    moment.fn.toJSON = moment.fn.toISOString;\n\n    /************************************\n        Duration Prototype\n    ************************************/\n\n\n    function daysToYears (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        return days * 400 / 146097;\n    }\n\n    function yearsToDays (years) {\n        // years * 365 + absRound(years / 4) -\n        //     absRound(years / 100) + absRound(years / 400);\n        return years * 146097 / 400;\n    }\n\n    extend(moment.duration.fn = Duration.prototype, {\n\n        _bubble : function () {\n            var milliseconds = this._milliseconds,\n                days = this._days,\n                months = this._months,\n                data = this._data,\n                seconds, minutes, hours, years = 0;\n\n            // The following code bubbles up values, see the tests for\n            // examples of what that means.\n            data.milliseconds = milliseconds % 1000;\n\n            seconds = absRound(milliseconds / 1000);\n            data.seconds = seconds % 60;\n\n            minutes = absRound(seconds / 60);\n            data.minutes = minutes % 60;\n\n            hours = absRound(minutes / 60);\n            data.hours = hours % 24;\n\n            days += absRound(hours / 24);\n\n            // Accurately convert days to years, assume start from year 0.\n            years = absRound(daysToYears(days));\n            days -= absRound(yearsToDays(years));\n\n            // 30 days to a month\n            // TODO (iskren): Use anchor date (like 1st Jan) to compute this.\n            months += absRound(days / 30);\n            days %= 30;\n\n            // 12 months -> 1 year\n            years += absRound(months / 12);\n            months %= 12;\n\n            data.days = days;\n            data.months = months;\n            data.years = years;\n        },\n\n        abs : function () {\n            this._milliseconds = Math.abs(this._milliseconds);\n            this._days = Math.abs(this._days);\n            this._months = Math.abs(this._months);\n\n            this._data.milliseconds = Math.abs(this._data.milliseconds);\n            this._data.seconds = Math.abs(this._data.seconds);\n            this._data.minutes = Math.abs(this._data.minutes);\n            this._data.hours = Math.abs(this._data.hours);\n            this._data.months = Math.abs(this._data.months);\n            this._data.years = Math.abs(this._data.years);\n\n            return this;\n        },\n\n        weeks : function () {\n            return absRound(this.days() / 7);\n        },\n\n        valueOf : function () {\n            return this._milliseconds +\n              this._days * 864e5 +\n              (this._months % 12) * 2592e6 +\n              toInt(this._months / 12) * 31536e6;\n        },\n\n        humanize : function (withSuffix) {\n            var output = relativeTime(this, !withSuffix, this.localeData());\n\n            if (withSuffix) {\n                output = this.localeData().pastFuture(+this, output);\n            }\n\n            return this.localeData().postformat(output);\n        },\n\n        add : function (input, val) {\n            // supports only 2.0-style add(1, 's') or add(moment)\n            var dur = moment.duration(input, val);\n\n            this._milliseconds += dur._milliseconds;\n            this._days += dur._days;\n            this._months += dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        subtract : function (input, val) {\n            var dur = moment.duration(input, val);\n\n            this._milliseconds -= dur._milliseconds;\n            this._days -= dur._days;\n            this._months -= dur._months;\n\n            this._bubble();\n\n            return this;\n        },\n\n        get : function (units) {\n            units = normalizeUnits(units);\n            return this[units.toLowerCase() + 's']();\n        },\n\n        as : function (units) {\n            var days, months;\n            units = normalizeUnits(units);\n\n            if (units === 'month' || units === 'year') {\n                days = this._days + this._milliseconds / 864e5;\n                months = this._months + daysToYears(days) * 12;\n                return units === 'month' ? months : months / 12;\n            } else {\n                // handle milliseconds separately because of floating point math errors (issue #1867)\n                days = this._days + Math.round(yearsToDays(this._months / 12));\n                switch (units) {\n                    case 'week': return days / 7 + this._milliseconds / 6048e5;\n                    case 'day': return days + this._milliseconds / 864e5;\n                    case 'hour': return days * 24 + this._milliseconds / 36e5;\n                    case 'minute': return days * 24 * 60 + this._milliseconds / 6e4;\n                    case 'second': return days * 24 * 60 * 60 + this._milliseconds / 1000;\n                    // Math.floor prevents floating point math errors here\n                    case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;\n                    default: throw new Error('Unknown unit ' + units);\n                }\n            }\n        },\n\n        lang : moment.fn.lang,\n        locale : moment.fn.locale,\n\n        toIsoString : deprecate(\n            'toIsoString() is deprecated. Please use toISOString() instead ' +\n            '(notice the capitals)',\n            function () {\n                return this.toISOString();\n            }\n        ),\n\n        toISOString : function () {\n            // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n            var years = Math.abs(this.years()),\n                months = Math.abs(this.months()),\n                days = Math.abs(this.days()),\n                hours = Math.abs(this.hours()),\n                minutes = Math.abs(this.minutes()),\n                seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\n            if (!this.asSeconds()) {\n                // this is the same as C#'s (Noda) and python (isodate)...\n                // but not other JS (goog.date)\n                return 'P0D';\n            }\n\n            return (this.asSeconds() < 0 ? '-' : '') +\n                'P' +\n                (years ? years + 'Y' : '') +\n                (months ? months + 'M' : '') +\n                (days ? days + 'D' : '') +\n                ((hours || minutes || seconds) ? 'T' : '') +\n                (hours ? hours + 'H' : '') +\n                (minutes ? minutes + 'M' : '') +\n                (seconds ? seconds + 'S' : '');\n        },\n\n        localeData : function () {\n            return this._locale;\n        }\n    });\n\n    moment.duration.fn.toString = moment.duration.fn.toISOString;\n\n    function makeDurationGetter(name) {\n        moment.duration.fn[name] = function () {\n            return this._data[name];\n        };\n    }\n\n    for (i in unitMillisecondFactors) {\n        if (hasOwnProp(unitMillisecondFactors, i)) {\n            makeDurationGetter(i.toLowerCase());\n        }\n    }\n\n    moment.duration.fn.asMilliseconds = function () {\n        return this.as('ms');\n    };\n    moment.duration.fn.asSeconds = function () {\n        return this.as('s');\n    };\n    moment.duration.fn.asMinutes = function () {\n        return this.as('m');\n    };\n    moment.duration.fn.asHours = function () {\n        return this.as('h');\n    };\n    moment.duration.fn.asDays = function () {\n        return this.as('d');\n    };\n    moment.duration.fn.asWeeks = function () {\n        return this.as('weeks');\n    };\n    moment.duration.fn.asMonths = function () {\n        return this.as('M');\n    };\n    moment.duration.fn.asYears = function () {\n        return this.as('y');\n    };\n\n    /************************************\n        Default Locale\n    ************************************/\n\n\n    // Set default locale, other locale will inherit from English.\n    moment.locale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // moment.js locale configuration\n// locale : afrikaans (af)\n// author : Werner Mollentze : https://github.com/wernerm\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('af', {\n        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),\n        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'vm' : 'VM';\n            } else {\n                return isLower ? 'nm' : 'NM';\n            }\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Vandag om] LT',\n            nextDay : '[Môre om] LT',\n            nextWeek : 'dddd [om] LT',\n            lastDay : '[Gister om] LT',\n            lastWeek : '[Laas] dddd [om] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'oor %s',\n            past : '%s gelede',\n            s : '\\'n paar sekondes',\n            m : '\\'n minuut',\n            mm : '%d minute',\n            h : '\\'n uur',\n            hh : '%d ure',\n            d : '\\'n dag',\n            dd : '%d dae',\n            M : '\\'n maand',\n            MM : '%d maande',\n            y : '\\'n jaar',\n            yy : '%d jaar'\n        },\n        ordinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n        },\n        week : {\n            dow : 1, // Maandag is die eerste dag van die week.\n            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Moroccan Arabic (ar-ma)\n// author : ElFadili Yassine : https://github.com/ElFadiliY\n// author : Abdel Said : https://github.com/abdelsaid\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('ar-ma', {\n        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Arabic Saudi Arabia (ar-sa)\n// author : Suhail Alkowaileet : https://github.com/xsoh\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    };\n\n    return moment.defineLocale('ar-sa', {\n        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'في %s',\n            past : 'منذ %s',\n            s : 'ثوان',\n            m : 'دقيقة',\n            mm : '%d دقائق',\n            h : 'ساعة',\n            hh : '%d ساعات',\n            d : 'يوم',\n            dd : '%d أيام',\n            M : 'شهر',\n            MM : '%d أشهر',\n            y : 'سنة',\n            yy : '%d سنوات'\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// Locale: Arabic (ar)\n// Author: Abdel Said: https://github.com/abdelsaid\n// Changes in months, weekdays: Ahmed Elkhatib\n// Native plural forms: forabi https://github.com/forabi\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var symbolMap = {\n        '1': '١',\n        '2': '٢',\n        '3': '٣',\n        '4': '٤',\n        '5': '٥',\n        '6': '٦',\n        '7': '٧',\n        '8': '٨',\n        '9': '٩',\n        '0': '٠'\n    }, numberMap = {\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n        '٠': '0'\n    }, pluralForm = function (n) {\n        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n    }, plurals = {\n        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n    }, pluralize = function (u) {\n        return function (number, withoutSuffix, string, isFuture) {\n            var f = pluralForm(number),\n                str = plurals[u][pluralForm(number)];\n            if (f === 2) {\n                str = str[withoutSuffix ? 0 : 1];\n            }\n            return str.replace(/%d/i, number);\n        };\n    }, months = [\n        'كانون الثاني يناير',\n        'شباط فبراير',\n        'آذار مارس',\n        'نيسان أبريل',\n        'أيار مايو',\n        'حزيران يونيو',\n        'تموز يوليو',\n        'آب أغسطس',\n        'أيلول سبتمبر',\n        'تشرين الأول أكتوبر',\n        'تشرين الثاني نوفمبر',\n        'كانون الأول ديسمبر'\n    ];\n\n    return moment.defineLocale('ar', {\n        months : months,\n        monthsShort : months,\n        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar : {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'بعد %s',\n            past : 'منذ %s',\n            s : pluralize('s'),\n            m : pluralize('m'),\n            mm : pluralize('m'),\n            h : pluralize('h'),\n            hh : pluralize('h'),\n            d : pluralize('d'),\n            dd : pluralize('d'),\n            M : pluralize('M'),\n            MM : pluralize('M'),\n            y : pluralize('y'),\n            yy : pluralize('y')\n        },\n        preparse: function (string) {\n            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : azerbaijani (az)\n// author : topchiyev : https://github.com/topchiyev\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var suffixes = {\n        1: '-inci',\n        5: '-inci',\n        8: '-inci',\n        70: '-inci',\n        80: '-inci',\n\n        2: '-nci',\n        7: '-nci',\n        20: '-nci',\n        50: '-nci',\n\n        3: '-üncü',\n        4: '-üncü',\n        100: '-üncü',\n\n        6: '-ncı',\n\n        9: '-uncu',\n        10: '-uncu',\n        30: '-uncu',\n\n        60: '-ıncı',\n        90: '-ıncı'\n    };\n    return moment.defineLocale('az', {\n        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[sabah saat] LT',\n            nextWeek : '[gələn həftə] dddd [saat] LT',\n            lastDay : '[dünən] LT',\n            lastWeek : '[keçən həftə] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s əvvəl',\n            s : 'birneçə saniyyə',\n            m : 'bir dəqiqə',\n            mm : '%d dəqiqə',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir il',\n            yy : '%d il'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'gecə';\n            } else if (hour < 12) {\n                return 'səhər';\n            } else if (hour < 17) {\n                return 'gündüz';\n            } else {\n                return 'axşam';\n            }\n        },\n        ordinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n        ordinal : function (number) {\n            if (number === 0) {  // special case for zero\n                return number + '-ıncı';\n            }\n            var a = number % 10,\n                b = number % 100 - a,\n                c = number >= 100 ? 100 : null;\n\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : belarusian (be)\n// author : Dmitry Demidov : https://github.com/demidov91\n// author: Praleska: http://praleska.pro/\n// Author : Menelion Elensúle : https://github.com/Oire\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n            'dd': 'дзень_дні_дзён',\n            'MM': 'месяц_месяцы_месяцаў',\n            'yy': 'год_гады_гадоў'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_'),\n            'accusative': 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n            'accusative': 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_')\n        },\n\n        nounCase = (/\\[ ?[Вв] ?(?:мінулую|наступную)? ?\\] ?dddd/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    return moment.defineLocale('be', {\n        months : monthsCaseReplace,\n        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., LT',\n            LLLL : 'dddd, D MMMM YYYY г., LT'\n        },\n        calendar : {\n            sameDay: '[Сёння ў] LT',\n            nextDay: '[Заўтра ў] LT',\n            lastDay: '[Учора ў] LT',\n            nextWeek: function () {\n                return '[У] dddd [ў] LT';\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return '[У мінулую] dddd [ў] LT';\n                case 1:\n                case 2:\n                case 4:\n                    return '[У мінулы] dddd [ў] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'праз %s',\n            past : '%s таму',\n            s : 'некалькі секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : relativeTimeWithPlural,\n            hh : relativeTimeWithPlural,\n            d : 'дзень',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночы';\n            } else if (hour < 12) {\n                return 'раніцы';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечара';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}-(і|ы|га)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';\n            case 'D':\n                return number + '-га';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : bulgarian (bg)\n// author : Krasen Borisov : https://github.com/kraz\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('bg', {\n        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Днес в] LT',\n            nextDay : '[Утре в] LT',\n            nextWeek : 'dddd [в] LT',\n            lastDay : '[Вчера в] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[В изминалата] dddd [в] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[В изминалия] dddd [в] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'след %s',\n            past : 'преди %s',\n            s : 'няколко секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дни',\n            M : 'месец',\n            MM : '%d месеца',\n            y : 'година',\n            yy : '%d години'\n        },\n        ordinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Bengali (bn)\n// author : Kaushik Gandhi : https://github.com/kaushikgandhi\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var symbolMap = {\n        '1': '১',\n        '2': '২',\n        '3': '৩',\n        '4': '৪',\n        '5': '৫',\n        '6': '৬',\n        '7': '৭',\n        '8': '৮',\n        '9': '৯',\n        '0': '০'\n    },\n    numberMap = {\n        '১': '1',\n        '২': '2',\n        '৩': '3',\n        '৪': '4',\n        '৫': '5',\n        '৬': '6',\n        '৭': '7',\n        '৮': '8',\n        '৯': '9',\n        '০': '0'\n    };\n\n    return moment.defineLocale('bn', {\n        months : 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n        monthsShort : 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split('_'),\n        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রুবার_শনিবার'.split('_'),\n        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্রু_শনি'.split('_'),\n        weekdaysMin : 'রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm সময়',\n            LTS : 'A h:mm:ss সময়',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[আজ] LT',\n            nextDay : '[আগামীকাল] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[গতকাল] LT',\n            lastWeek : '[গত] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s পরে',\n            past : '%s আগে',\n            s : 'কএক সেকেন্ড',\n            m : 'এক মিনিট',\n            mm : '%d মিনিট',\n            h : 'এক ঘন্টা',\n            hh : '%d ঘন্টা',\n            d : 'এক দিন',\n            dd : '%d দিন',\n            M : 'এক মাস',\n            MM : '%d মাস',\n            y : 'এক বছর',\n            yy : '%d বছর'\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        //Bengali is a vast language its spoken\n        //in different forms in various parts of the world.\n        //I have just generalized with most common one used\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 10) {\n                return 'শকাল';\n            } else if (hour < 17) {\n                return 'দুপুর';\n            } else if (hour < 20) {\n                return 'বিকেল';\n            } else {\n                return 'রাত';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : tibetan (bo)\n// author : Thupten N. Chakrishar : https://github.com/vajradog\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var symbolMap = {\n        '1': '༡',\n        '2': '༢',\n        '3': '༣',\n        '4': '༤',\n        '5': '༥',\n        '6': '༦',\n        '7': '༧',\n        '8': '༨',\n        '9': '༩',\n        '0': '༠'\n    },\n    numberMap = {\n        '༡': '1',\n        '༢': '2',\n        '༣': '3',\n        '༤': '4',\n        '༥': '5',\n        '༦': '6',\n        '༧': '7',\n        '༨': '8',\n        '༩': '9',\n        '༠': '0'\n    };\n\n    return moment.defineLocale('bo', {\n        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),\n        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[དི་རིང] LT',\n            nextDay : '[སང་ཉིན] LT',\n            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',\n            lastDay : '[ཁ་སང] LT',\n            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s ལ་',\n            past : '%s སྔན་ལ',\n            s : 'ལམ་སང',\n            m : 'སྐར་མ་གཅིག',\n            mm : '%d སྐར་མ',\n            h : 'ཆུ་ཚོད་གཅིག',\n            hh : '%d ཆུ་ཚོད',\n            d : 'ཉིན་གཅིག',\n            dd : '%d ཉིན་',\n            M : 'ཟླ་བ་གཅིག',\n            MM : '%d ཟླ་བ',\n            y : 'ལོ་གཅིག',\n            yy : '%d ལོ'\n        },\n        preparse: function (string) {\n            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'མཚན་མོ';\n            } else if (hour < 10) {\n                return 'ཞོགས་ཀས';\n            } else if (hour < 17) {\n                return 'ཉིན་གུང';\n            } else if (hour < 20) {\n                return 'དགོང་དག';\n            } else {\n                return 'མཚན་མོ';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : breton (br)\n// author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\n        var format = {\n            'mm': 'munutenn',\n            'MM': 'miz',\n            'dd': 'devezh'\n        };\n        return number + ' ' + mutation(format[key], number);\n    }\n\n    function specialMutationForYears(number) {\n        switch (lastNumber(number)) {\n        case 1:\n        case 3:\n        case 4:\n        case 5:\n        case 9:\n            return number + ' bloaz';\n        default:\n            return number + ' vloaz';\n        }\n    }\n\n    function lastNumber(number) {\n        if (number > 9) {\n            return lastNumber(number % 10);\n        }\n        return number;\n    }\n\n    function mutation(text, number) {\n        if (number === 2) {\n            return softMutation(text);\n        }\n        return text;\n    }\n\n    function softMutation(text) {\n        var mutationTable = {\n            'm': 'v',\n            'b': 'v',\n            'd': 'z'\n        };\n        if (mutationTable[text.charAt(0)] === undefined) {\n            return text;\n        }\n        return mutationTable[text.charAt(0)] + text.substring(1);\n    }\n\n    return moment.defineLocale('br', {\n        months : 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n        monthsShort : 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n        weekdays : 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\n        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h[e]mm A',\n            LTS : 'h[e]mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D [a viz] MMMM YYYY',\n            LLL : 'D [a viz] MMMM YYYY LT',\n            LLLL : 'dddd, D [a viz] MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Hiziv da] LT',\n            nextDay : '[Warc\\'hoazh da] LT',\n            nextWeek : 'dddd [da] LT',\n            lastDay : '[Dec\\'h da] LT',\n            lastWeek : 'dddd [paset da] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'a-benn %s',\n            past : '%s \\'zo',\n            s : 'un nebeud segondennoù',\n            m : 'ur vunutenn',\n            mm : relativeTimeWithMutation,\n            h : 'un eur',\n            hh : '%d eur',\n            d : 'un devezh',\n            dd : relativeTimeWithMutation,\n            M : 'ur miz',\n            MM : relativeTimeWithMutation,\n            y : 'ur bloaz',\n            yy : specialMutationForYears\n        },\n        ordinalParse: /\\d{1,2}(añ|vet)/,\n        ordinal : function (number) {\n            var output = (number === 1) ? 'añ' : 'vet';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : bosnian (bs)\n// author : Nedim Cholich : https://github.com/frontyard\n// based on (hr) translation by Bojan Marković\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n        case 'mm':\n            if (number === 1) {\n                result += 'minuta';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'minute';\n            } else {\n                result += 'minuta';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'jedan sat' : 'jednog sata';\n        case 'hh':\n            if (number === 1) {\n                result += 'sat';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'sata';\n            } else {\n                result += 'sati';\n            }\n            return result;\n        case 'dd':\n            if (number === 1) {\n                result += 'dan';\n            } else {\n                result += 'dana';\n            }\n            return result;\n        case 'MM':\n            if (number === 1) {\n                result += 'mjesec';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'mjeseca';\n            } else {\n                result += 'mjeseci';\n            }\n            return result;\n        case 'yy':\n            if (number === 1) {\n                result += 'godina';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'godine';\n            } else {\n                result += 'godina';\n            }\n            return result;\n        }\n    }\n\n    return moment.defineLocale('bs', {\n        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD. MM. YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                case 0:\n                    return '[u] [nedjelju] [u] LT';\n                case 3:\n                    return '[u] [srijedu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                    return '[prošlu] dddd [u] LT';\n                case 6:\n                    return '[prošle] [subote] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : catalan (ca)\n// author : Juan G. Hurtado : https://github.com/juanghurtado\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('ca', {\n        months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n        monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),\n        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextDay : function () {\n                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastDay : function () {\n                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'fa %s',\n            s : 'uns segons',\n            m : 'un minut',\n            mm : '%d minuts',\n            h : 'una hora',\n            hh : '%d hores',\n            d : 'un dia',\n            dd : '%d dies',\n            M : 'un mes',\n            MM : '%d mesos',\n            y : 'un any',\n            yy : '%d anys'\n        },\n        ordinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal : function (number, period) {\n            var output = (number === 1) ? 'r' :\n                (number === 2) ? 'n' :\n                (number === 3) ? 'r' :\n                (number === 4) ? 't' : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : czech (cs)\n// author : petrbela : https://github.com/petrbela\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n\n    function plural(n) {\n        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n        case 's':  // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n        case 'm':  // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'minuty' : 'minut');\n            } else {\n                return result + 'minutami';\n            }\n            break;\n        case 'h':  // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'hodiny' : 'hodin');\n            } else {\n                return result + 'hodinami';\n            }\n            break;\n        case 'd':  // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'dny' : 'dní');\n            } else {\n                return result + 'dny';\n            }\n            break;\n        case 'M':  // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'měsíce' : 'měsíců');\n            } else {\n                return result + 'měsíci';\n            }\n            break;\n        case 'y':  // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'roky' : 'let');\n            } else {\n                return result + 'lety';\n            }\n            break;\n        }\n    }\n\n    return moment.defineLocale('cs', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParse : (function (months, monthsShort) {\n            var i, _monthsParse = [];\n            for (i = 0; i < 12; i++) {\n                // use custom parser to solve problem with July (červenec)\n                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n            }\n            return _monthsParse;\n        }(months, monthsShort)),\n        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[v neděli v] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [v] LT';\n                case 3:\n                    return '[ve středu v] LT';\n                case 4:\n                    return '[ve čtvrtek v] LT';\n                case 5:\n                    return '[v pátek v] LT';\n                case 6:\n                    return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[minulou neděli v] LT';\n                case 1:\n                case 2:\n                    return '[minulé] dddd [v] LT';\n                case 3:\n                    return '[minulou středu v] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [v] LT';\n                case 6:\n                    return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'před %s',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse : /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : chuvash (cv)\n// author : Anatoly Mironov : https://github.com/mirontoli\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('cv', {\n        months : 'кăрлач_нарăс_пуш_ака_май_çĕртме_утă_çурла_авăн_юпа_чӳк_раштав'.split('_'),\n        monthsShort : 'кăр_нар_пуш_ака_май_çĕр_утă_çур_ав_юпа_чӳк_раш'.split('_'),\n        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кĕçнерникун_эрнекун_шăматкун'.split('_'),\n        weekdaysShort : 'выр_тун_ытл_юн_кĕç_эрн_шăм'.split('_'),\n        weekdaysMin : 'вр_тн_ыт_юн_кç_эр_шм'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ]',\n            LLL : 'YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT',\n            LLLL : 'dddd, YYYY [çулхи] MMMM [уйăхĕн] D[-мĕшĕ], LT'\n        },\n        calendar : {\n            sameDay: '[Паян] LT [сехетре]',\n            nextDay: '[Ыран] LT [сехетре]',\n            lastDay: '[Ĕнер] LT [сехетре]',\n            nextWeek: '[Çитес] dddd LT [сехетре]',\n            lastWeek: '[Иртнĕ] dddd LT [сехетре]',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (output) {\n                var affix = /сехет$/i.exec(output) ? 'рен' : /çул$/i.exec(output) ? 'тан' : 'ран';\n                return output + affix;\n            },\n            past : '%s каялла',\n            s : 'пĕр-ик çеккунт',\n            m : 'пĕр минут',\n            mm : '%d минут',\n            h : 'пĕр сехет',\n            hh : '%d сехет',\n            d : 'пĕр кун',\n            dd : '%d кун',\n            M : 'пĕр уйăх',\n            MM : '%d уйăх',\n            y : 'пĕр çул',\n            yy : '%d çул'\n        },\n        ordinalParse: /\\d{1,2}-мĕш/,\n        ordinal : '%d-мĕш',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Welsh (cy)\n// author : Robert Allen\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('cy', {\n        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),\n        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),\n        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),\n        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n        // time formats are the same as en-gb\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS : 'LT:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY LT',\n            LLLL: 'dddd, D MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[Heddiw am] LT',\n            nextDay: '[Yfory am] LT',\n            nextWeek: 'dddd [am] LT',\n            lastDay: '[Ddoe am] LT',\n            lastWeek: 'dddd [diwethaf am] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'mewn %s',\n            past: '%s yn ôl',\n            s: 'ychydig eiliadau',\n            m: 'munud',\n            mm: '%d munud',\n            h: 'awr',\n            hh: '%d awr',\n            d: 'diwrnod',\n            dd: '%d diwrnod',\n            M: 'mis',\n            MM: '%d mis',\n            y: 'blwyddyn',\n            yy: '%d flynedd'\n        },\n        ordinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n        ordinal: function (number) {\n            var b = number,\n                output = '',\n                lookup = [\n                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed\n                ];\n\n            if (b > 20) {\n                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                    output = 'fed'; // not 30ain, 70ain or 90ain\n                } else {\n                    output = 'ain';\n                }\n            } else if (b > 0) {\n                output = lookup[b];\n            }\n\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : danish (da)\n// author : Ulrik Nielsen : https://github.com/mrbase\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('da', {\n        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd [d.] D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[I dag kl.] LT',\n            nextDay : '[I morgen kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[I går kl.] LT',\n            lastWeek : '[sidste] dddd [kl] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : '%s siden',\n            s : 'få sekunder',\n            m : 'et minut',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dage',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'et år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : austrian german (de-at)\n// author : lluchs : https://github.com/lluchs\n// author: Menelion Elensúle: https://github.com/Oire\n// author : Martin Groller : https://github.com/MadMG\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    return moment.defineLocale('de-at', {\n        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[Morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[Gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : german (de)\n// author : lluchs : https://github.com/lluchs\n// author: Menelion Elensúle: https://github.com/Oire\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eine Minute', 'einer Minute'],\n            'h': ['eine Stunde', 'einer Stunde'],\n            'd': ['ein Tag', 'einem Tag'],\n            'dd': [number + ' Tage', number + ' Tagen'],\n            'M': ['ein Monat', 'einem Monat'],\n            'MM': [number + ' Monate', number + ' Monaten'],\n            'y': ['ein Jahr', 'einem Jahr'],\n            'yy': [number + ' Jahre', number + ' Jahren']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    return moment.defineLocale('de', {\n        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[Morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[Gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : 'vor %s',\n            s : 'ein paar Sekunden',\n            m : processRelativeTime,\n            mm : '%d Minuten',\n            h : processRelativeTime,\n            hh : '%d Stunden',\n            d : processRelativeTime,\n            dd : processRelativeTime,\n            M : processRelativeTime,\n            MM : processRelativeTime,\n            y : processRelativeTime,\n            yy : processRelativeTime\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : modern greek (el)\n// author : Aggelos Karalias : https://github.com/mehiel\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('el', {\n        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n        months : function (momentToFormat, format) {\n            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM : function (input) {\n            return ((input + '').toLowerCase()[0] === 'μ');\n        },\n        meridiemParse : /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendarEl : {\n            sameDay : '[Σήμερα {}] LT',\n            nextDay : '[Αύριο {}] LT',\n            nextWeek : 'dddd [{}] LT',\n            lastDay : '[Χθες {}] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        calendar : function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n\n            if (typeof output === 'function') {\n                output = output.apply(mom);\n            }\n\n            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));\n        },\n        relativeTime : {\n            future : 'σε %s',\n            past : '%s πριν',\n            s : 'λίγα δευτερόλεπτα',\n            m : 'ένα λεπτό',\n            mm : '%d λεπτά',\n            h : 'μία ώρα',\n            hh : '%d ώρες',\n            d : 'μία μέρα',\n            dd : '%d μέρες',\n            M : 'ένας μήνας',\n            MM : '%d μήνες',\n            y : 'ένας χρόνος',\n            yy : '%d χρόνια'\n        },\n        ordinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : australian english (en-au)\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('en-au', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        ordinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : canadian english (en-ca)\n// author : Jonathan Abourbih : https://github.com/jonbca\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('en-ca', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM, YYYY',\n            LLL : 'D MMMM, YYYY LT',\n            LLLL : 'dddd, D MMMM, YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        ordinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : great britain english (en-gb)\n// author : Chris Gedrim : https://github.com/chrisgedrim\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('en-gb', {\n        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'HH:mm:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Today at] LT',\n            nextDay : '[Tomorrow at] LT',\n            nextWeek : 'dddd [at] LT',\n            lastDay : '[Yesterday at] LT',\n            lastWeek : '[Last] dddd [at] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'in %s',\n            past : '%s ago',\n            s : 'a few seconds',\n            m : 'a minute',\n            mm : '%d minutes',\n            h : 'an hour',\n            hh : '%d hours',\n            d : 'a day',\n            dd : '%d days',\n            M : 'a month',\n            MM : '%d months',\n            y : 'a year',\n            yy : '%d years'\n        },\n        ordinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : esperanto (eo)\n// author : Colin Dean : https://github.com/colindean\n// komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.\n//          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('eo', {\n        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),\n        weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),\n        weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),\n        weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D[-an de] MMMM, YYYY',\n            LLL : 'D[-an de] MMMM, YYYY LT',\n            LLLL : 'dddd, [la] D[-an de] MMMM, YYYY LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'p.t.m.' : 'P.T.M.';\n            } else {\n                return isLower ? 'a.t.m.' : 'A.T.M.';\n            }\n        },\n        calendar : {\n            sameDay : '[Hodiaŭ je] LT',\n            nextDay : '[Morgaŭ je] LT',\n            nextWeek : 'dddd [je] LT',\n            lastDay : '[Hieraŭ je] LT',\n            lastWeek : '[pasinta] dddd [je] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'je %s',\n            past : 'antaŭ %s',\n            s : 'sekundoj',\n            m : 'minuto',\n            mm : '%d minutoj',\n            h : 'horo',\n            hh : '%d horoj',\n            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo\n            dd : '%d tagoj',\n            M : 'monato',\n            MM : '%d monatoj',\n            y : 'jaro',\n            yy : '%d jaroj'\n        },\n        ordinalParse: /\\d{1,2}a/,\n        ordinal : '%da',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : spanish (es)\n// author : Julio Napurí : https://github.com/julionc\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\n    return moment.defineLocale('es', {\n        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n        monthsShort : function (m, format) {\n            if (/-MMM-/.test(format)) {\n                return monthsShort[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin : 'Do_Lu_Ma_Mi_Ju_Vi_Sá'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY LT',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY LT'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastDay : function () {\n                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            lastWeek : function () {\n                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'en %s',\n            past : 'hace %s',\n            s : 'unos segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'una hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un año',\n            yy : '%d años'\n        },\n        ordinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : estonian (et)\n// author : Henry Kehlmann : https://github.com/madhenry\n// improvements : Illimar Tambek : https://github.com/ragulka\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n            'm' : ['ühe minuti', 'üks minut'],\n            'mm': [number + ' minuti', number + ' minutit'],\n            'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n            'hh': [number + ' tunni', number + ' tundi'],\n            'd' : ['ühe päeva', 'üks päev'],\n            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n            'MM': [number + ' kuu', number + ' kuud'],\n            'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n            'yy': [number + ' aasta', number + ' aastat']\n        };\n        if (withoutSuffix) {\n            return format[key][2] ? format[key][2] : format[key][1];\n        }\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    return moment.defineLocale('et', {\n        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),\n        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),\n        longDateFormat : {\n            LT   : 'H:mm',\n            LTS : 'LT:ss',\n            L    : 'DD.MM.YYYY',\n            LL   : 'D. MMMM YYYY',\n            LLL  : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[Täna,] LT',\n            nextDay  : '[Homme,] LT',\n            nextWeek : '[Järgmine] dddd LT',\n            lastDay  : '[Eile,] LT',\n            lastWeek : '[Eelmine] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s pärast',\n            past   : '%s tagasi',\n            s      : processRelativeTime,\n            m      : processRelativeTime,\n            mm     : processRelativeTime,\n            h      : processRelativeTime,\n            hh     : processRelativeTime,\n            d      : processRelativeTime,\n            dd     : '%d päeva',\n            M      : processRelativeTime,\n            MM     : processRelativeTime,\n            y      : processRelativeTime,\n            yy     : processRelativeTime\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : euskara (eu)\n// author : Eneko Illarramendi : https://github.com/eillarra\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('eu', {\n        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),\n        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),\n        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),\n        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),\n        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY[ko] MMMM[ren] D[a]',\n            LLL : 'YYYY[ko] MMMM[ren] D[a] LT',\n            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] LT',\n            l : 'YYYY-M-D',\n            ll : 'YYYY[ko] MMM D[a]',\n            lll : 'YYYY[ko] MMM D[a] LT',\n            llll : 'ddd, YYYY[ko] MMM D[a] LT'\n        },\n        calendar : {\n            sameDay : '[gaur] LT[etan]',\n            nextDay : '[bihar] LT[etan]',\n            nextWeek : 'dddd LT[etan]',\n            lastDay : '[atzo] LT[etan]',\n            lastWeek : '[aurreko] dddd LT[etan]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s barru',\n            past : 'duela %s',\n            s : 'segundo batzuk',\n            m : 'minutu bat',\n            mm : '%d minutu',\n            h : 'ordu bat',\n            hh : '%d ordu',\n            d : 'egun bat',\n            dd : '%d egun',\n            M : 'hilabete bat',\n            MM : '%d hilabete',\n            y : 'urte bat',\n            yy : '%d urte'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Persian (fa)\n// author : Ebrahim Byagowi : https://github.com/ebraminio\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var symbolMap = {\n        '1': '۱',\n        '2': '۲',\n        '3': '۳',\n        '4': '۴',\n        '5': '۵',\n        '6': '۶',\n        '7': '۷',\n        '8': '۸',\n        '9': '۹',\n        '0': '۰'\n    }, numberMap = {\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n        '۰': '0'\n    };\n\n    return moment.defineLocale('fa', {\n        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n        weekdays : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysShort : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'قبل از ظهر';\n            } else {\n                return 'بعد از ظهر';\n            }\n        },\n        calendar : {\n            sameDay : '[امروز ساعت] LT',\n            nextDay : '[فردا ساعت] LT',\n            nextWeek : 'dddd [ساعت] LT',\n            lastDay : '[دیروز ساعت] LT',\n            lastWeek : 'dddd [پیش] [ساعت] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'در %s',\n            past : '%s پیش',\n            s : 'چندین ثانیه',\n            m : 'یک دقیقه',\n            mm : '%d دقیقه',\n            h : 'یک ساعت',\n            hh : '%d ساعت',\n            d : 'یک روز',\n            dd : '%d روز',\n            M : 'یک ماه',\n            MM : '%d ماه',\n            y : 'یک سال',\n            yy : '%d سال'\n        },\n        preparse: function (string) {\n            return string.replace(/[۰-۹]/g, function (match) {\n                return numberMap[match];\n            }).replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            }).replace(/,/g, '،');\n        },\n        ordinalParse: /\\d{1,2}م/,\n        ordinal : '%dم',\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : finnish (fi)\n// author : Tarmo Aidantausta : https://github.com/bleadof\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),\n        numbersFuture = [\n            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n            numbersPast[7], numbersPast[8], numbersPast[9]\n        ];\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = '';\n        switch (key) {\n        case 's':\n            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n        case 'm':\n            return isFuture ? 'minuutin' : 'minuutti';\n        case 'mm':\n            result = isFuture ? 'minuutin' : 'minuuttia';\n            break;\n        case 'h':\n            return isFuture ? 'tunnin' : 'tunti';\n        case 'hh':\n            result = isFuture ? 'tunnin' : 'tuntia';\n            break;\n        case 'd':\n            return isFuture ? 'päivän' : 'päivä';\n        case 'dd':\n            result = isFuture ? 'päivän' : 'päivää';\n            break;\n        case 'M':\n            return isFuture ? 'kuukauden' : 'kuukausi';\n        case 'MM':\n            result = isFuture ? 'kuukauden' : 'kuukautta';\n            break;\n        case 'y':\n            return isFuture ? 'vuoden' : 'vuosi';\n        case 'yy':\n            result = isFuture ? 'vuoden' : 'vuotta';\n            break;\n        }\n        result = verbalNumber(number, isFuture) + ' ' + result;\n        return result;\n    }\n\n    function verbalNumber(number, isFuture) {\n        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;\n    }\n\n    return moment.defineLocale('fi', {\n        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'HH.mm.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'Do MMMM[ta] YYYY',\n            LLL : 'Do MMMM[ta] YYYY, [klo] LT',\n            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] LT',\n            l : 'D.M.YYYY',\n            ll : 'Do MMM YYYY',\n            lll : 'Do MMM YYYY, [klo] LT',\n            llll : 'ddd, Do MMM YYYY, [klo] LT'\n        },\n        calendar : {\n            sameDay : '[tänään] [klo] LT',\n            nextDay : '[huomenna] [klo] LT',\n            nextWeek : 'dddd [klo] LT',\n            lastDay : '[eilen] [klo] LT',\n            lastWeek : '[viime] dddd[na] [klo] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s päästä',\n            past : '%s sitten',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : faroese (fo)\n// author : Ragnar Johannesen : https://github.com/ragnar123\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('fo', {\n        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),\n        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D. MMMM, YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Í dag kl.] LT',\n            nextDay : '[Í morgin kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[Í gjár kl.] LT',\n            lastWeek : '[síðstu] dddd [kl] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'um %s',\n            past : '%s síðani',\n            s : 'fá sekund',\n            m : 'ein minutt',\n            mm : '%d minuttir',\n            h : 'ein tími',\n            hh : '%d tímar',\n            d : 'ein dagur',\n            dd : '%d dagar',\n            M : 'ein mánaði',\n            MM : '%d mánaðir',\n            y : 'eitt ár',\n            yy : '%d ár'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : canadian french (fr-ca)\n// author : Jonathan Abourbih : https://github.com/jonbca\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('fr-ca', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Aujourd\\'hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        ordinalParse: /\\d{1,2}(er|)/,\n        ordinal : function (number) {\n            return number + (number === 1 ? 'er' : '');\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : french (fr)\n// author : John Fischer : https://github.com/jfroffice\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('fr', {\n        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Aujourd\\'hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dans %s',\n            past : 'il y a %s',\n            s : 'quelques secondes',\n            m : 'une minute',\n            mm : '%d minutes',\n            h : 'une heure',\n            hh : '%d heures',\n            d : 'un jour',\n            dd : '%d jours',\n            M : 'un mois',\n            MM : '%d mois',\n            y : 'un an',\n            yy : '%d ans'\n        },\n        ordinalParse: /\\d{1,2}(er|)/,\n        ordinal : function (number) {\n            return number + (number === 1 ? 'er' : '');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : galician (gl)\n// author : Juan G. Hurtado : https://github.com/juanghurtado\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('gl', {\n        months : 'Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro'.split('_'),\n        monthsShort : 'Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.'.split('_'),\n        weekdays : 'Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado'.split('_'),\n        weekdaysShort : 'Dom._Lun._Mar._Mér._Xov._Ven._Sáb.'.split('_'),\n        weekdaysMin : 'Do_Lu_Ma_Mé_Xo_Ve_Sá'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : function () {\n                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextDay : function () {\n                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n            },\n            nextWeek : function () {\n                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            lastDay : function () {\n                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';\n            },\n            lastWeek : function () {\n                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (str) {\n                if (str === 'uns segundos') {\n                    return 'nuns segundos';\n                }\n                return 'en ' + str;\n            },\n            past : 'hai %s',\n            s : 'uns segundos',\n            m : 'un minuto',\n            mm : '%d minutos',\n            h : 'unha hora',\n            hh : '%d horas',\n            d : 'un día',\n            dd : '%d días',\n            M : 'un mes',\n            MM : '%d meses',\n            y : 'un ano',\n            yy : '%d anos'\n        },\n        ordinalParse : /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Hebrew (he)\n// author : Tomer Cohen : https://github.com/tomer\n// author : Moshe Simantov : https://github.com/DevelopmentIL\n// author : Tal Ater : https://github.com/TalAter\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('he', {\n        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [ב]MMMM YYYY',\n            LLL : 'D [ב]MMMM YYYY LT',\n            LLLL : 'dddd, D [ב]MMMM YYYY LT',\n            l : 'D/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY LT',\n            llll : 'ddd, D MMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[היום ב־]LT',\n            nextDay : '[מחר ב־]LT',\n            nextWeek : 'dddd [בשעה] LT',\n            lastDay : '[אתמול ב־]LT',\n            lastWeek : '[ביום] dddd [האחרון בשעה] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'בעוד %s',\n            past : 'לפני %s',\n            s : 'מספר שניות',\n            m : 'דקה',\n            mm : '%d דקות',\n            h : 'שעה',\n            hh : function (number) {\n                if (number === 2) {\n                    return 'שעתיים';\n                }\n                return number + ' שעות';\n            },\n            d : 'יום',\n            dd : function (number) {\n                if (number === 2) {\n                    return 'יומיים';\n                }\n                return number + ' ימים';\n            },\n            M : 'חודש',\n            MM : function (number) {\n                if (number === 2) {\n                    return 'חודשיים';\n                }\n                return number + ' חודשים';\n            },\n            y : 'שנה',\n            yy : function (number) {\n                if (number === 2) {\n                    return 'שנתיים';\n                }\n                return number + ' שנים';\n            }\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : hindi (hi)\n// author : Mayank Singhal : https://github.com/mayanksinghal\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    return moment.defineLocale('hi', {\n        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm बजे',\n            LTS : 'A h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[कल] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[कल] LT',\n            lastWeek : '[पिछले] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s में',\n            past : '%s पहले',\n            s : 'कुछ ही क्षण',\n            m : 'एक मिनट',\n            mm : '%d मिनट',\n            h : 'एक घंटा',\n            hh : '%d घंटे',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महीने',\n            MM : '%d महीने',\n            y : 'एक वर्ष',\n            yy : '%d वर्ष'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात';\n            } else if (hour < 10) {\n                return 'सुबह';\n            } else if (hour < 17) {\n                return 'दोपहर';\n            } else if (hour < 20) {\n                return 'शाम';\n            } else {\n                return 'रात';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : hrvatski (hr)\n// author : Bojan Marković : https://github.com/bmarkovic\n\n// based on (sl) translation by Robert Sedovšek\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n        case 'mm':\n            if (number === 1) {\n                result += 'minuta';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'minute';\n            } else {\n                result += 'minuta';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'jedan sat' : 'jednog sata';\n        case 'hh':\n            if (number === 1) {\n                result += 'sat';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'sata';\n            } else {\n                result += 'sati';\n            }\n            return result;\n        case 'dd':\n            if (number === 1) {\n                result += 'dan';\n            } else {\n                result += 'dana';\n            }\n            return result;\n        case 'MM':\n            if (number === 1) {\n                result += 'mjesec';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'mjeseca';\n            } else {\n                result += 'mjeseci';\n            }\n            return result;\n        case 'yy':\n            if (number === 1) {\n                result += 'godina';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'godine';\n            } else {\n                result += 'godina';\n            }\n            return result;\n        }\n    }\n\n    return moment.defineLocale('hr', {\n        months : 'sječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_'),\n        monthsShort : 'sje._vel._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),\n        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD. MM. YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[danas u] LT',\n            nextDay  : '[sutra u] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                case 0:\n                    return '[u] [nedjelju] [u] LT';\n                case 3:\n                    return '[u] [srijedu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[jučer u] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                    return '[prošlu] dddd [u] LT';\n                case 6:\n                    return '[prošle] [subote] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'prije %s',\n            s      : 'par sekundi',\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'dan',\n            dd     : translate,\n            M      : 'mjesec',\n            MM     : translate,\n            y      : 'godinu',\n            yy     : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : hungarian (hu)\n// author : Adam Brunner : https://github.com/adambrunner\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var num = number,\n            suffix;\n\n        switch (key) {\n        case 's':\n            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n        case 'm':\n            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'mm':\n            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'h':\n            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'hh':\n            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'd':\n            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'dd':\n            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'M':\n            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'MM':\n            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'y':\n            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n        case 'yy':\n            return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n        }\n\n        return '';\n    }\n\n    function week(isFuture) {\n        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';\n    }\n\n    return moment.defineLocale('hu', {\n        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY.MM.DD.',\n            LL : 'YYYY. MMMM D.',\n            LLL : 'YYYY. MMMM D., LT',\n            LLLL : 'YYYY. MMMM D., dddd LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower === true ? 'de' : 'DE';\n            } else {\n                return isLower === true ? 'du' : 'DU';\n            }\n        },\n        calendar : {\n            sameDay : '[ma] LT[-kor]',\n            nextDay : '[holnap] LT[-kor]',\n            nextWeek : function () {\n                return week.call(this, true);\n            },\n            lastDay : '[tegnap] LT[-kor]',\n            lastWeek : function () {\n                return week.call(this, false);\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s múlva',\n            past : '%s',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Armenian (hy-am)\n// author : Armendarabyan : https://github.com/armendarabyan\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_'),\n            'accusative': 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function monthsShortCaseReplace(m, format) {\n        var monthsShort = 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_');\n\n        return monthsShort[m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_');\n\n        return weekdays[m.day()];\n    }\n\n    return moment.defineLocale('hy-am', {\n        months : monthsCaseReplace,\n        monthsShort : monthsShortCaseReplace,\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY թ.',\n            LLL : 'D MMMM YYYY թ., LT',\n            LLLL : 'dddd, D MMMM YYYY թ., LT'\n        },\n        calendar : {\n            sameDay: '[այսօր] LT',\n            nextDay: '[վաղը] LT',\n            lastDay: '[երեկ] LT',\n            nextWeek: function () {\n                return 'dddd [օրը ժամը] LT';\n            },\n            lastWeek: function () {\n                return '[անցած] dddd [օրը ժամը] LT';\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s հետո',\n            past : '%s առաջ',\n            s : 'մի քանի վայրկյան',\n            m : 'րոպե',\n            mm : '%d րոպե',\n            h : 'ժամ',\n            hh : '%d ժամ',\n            d : 'օր',\n            dd : '%d օր',\n            M : 'ամիս',\n            MM : '%d ամիս',\n            y : 'տարի',\n            yy : '%d տարի'\n        },\n\n        meridiem : function (hour) {\n            if (hour < 4) {\n                return 'գիշերվա';\n            } else if (hour < 12) {\n                return 'առավոտվա';\n            } else if (hour < 17) {\n                return 'ցերեկվա';\n            } else {\n                return 'երեկոյան';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'DDD':\n            case 'w':\n            case 'W':\n            case 'DDDo':\n                if (number === 1) {\n                    return number + '-ին';\n                }\n                return number + '-րդ';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Bahasa Indonesia (id)\n// author : Mohammad Satrio Utomo : https://github.com/tyok\n// reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('id', {\n        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'LT.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] LT',\n            LLLL : 'dddd, D MMMM YYYY [pukul] LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Besok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kemarin pukul] LT',\n            lastWeek : 'dddd [lalu pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lalu',\n            s : 'beberapa detik',\n            m : 'semenit',\n            mm : '%d menit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : icelandic (is)\n// author : Hinrik Örn Sigurðsson : https://github.com/hinrik\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function plural(n) {\n        if (n % 100 === 11) {\n            return true;\n        } else if (n % 10 === 1) {\n            return false;\n        }\n        return true;\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n        case 's':\n            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n        case 'm':\n            return withoutSuffix ? 'mínúta' : 'mínútu';\n        case 'mm':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n            } else if (withoutSuffix) {\n                return result + 'mínúta';\n            }\n            return result + 'mínútu';\n        case 'hh':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n            }\n            return result + 'klukkustund';\n        case 'd':\n            if (withoutSuffix) {\n                return 'dagur';\n            }\n            return isFuture ? 'dag' : 'degi';\n        case 'dd':\n            if (plural(number)) {\n                if (withoutSuffix) {\n                    return result + 'dagar';\n                }\n                return result + (isFuture ? 'daga' : 'dögum');\n            } else if (withoutSuffix) {\n                return result + 'dagur';\n            }\n            return result + (isFuture ? 'dag' : 'degi');\n        case 'M':\n            if (withoutSuffix) {\n                return 'mánuður';\n            }\n            return isFuture ? 'mánuð' : 'mánuði';\n        case 'MM':\n            if (plural(number)) {\n                if (withoutSuffix) {\n                    return result + 'mánuðir';\n                }\n                return result + (isFuture ? 'mánuði' : 'mánuðum');\n            } else if (withoutSuffix) {\n                return result + 'mánuður';\n            }\n            return result + (isFuture ? 'mánuð' : 'mánuði');\n        case 'y':\n            return withoutSuffix || isFuture ? 'ár' : 'ári';\n        case 'yy':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n            }\n            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n        }\n    }\n\n    return moment.defineLocale('is', {\n        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),\n        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] LT',\n            LLLL : 'dddd, D. MMMM YYYY [kl.] LT'\n        },\n        calendar : {\n            sameDay : '[í dag kl.] LT',\n            nextDay : '[á morgun kl.] LT',\n            nextWeek : 'dddd [kl.] LT',\n            lastDay : '[í gær kl.] LT',\n            lastWeek : '[síðasta] dddd [kl.] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'eftir %s',\n            past : 'fyrir %s síðan',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : 'klukkustund',\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : italian (it)\n// author : Lorenzo : https://github.com/aliem\n// author: Mattia Larentis: https://github.com/nostalgiaz\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('it', {\n        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),\n        weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),\n        weekdaysMin : 'D_L_Ma_Me_G_V_S'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past : '%s fa',\n            s : 'alcuni secondi',\n            m : 'un minuto',\n            mm : '%d minuti',\n            h : 'un\\'ora',\n            hh : '%d ore',\n            d : 'un giorno',\n            dd : '%d giorni',\n            M : 'un mese',\n            MM : '%d mesi',\n            y : 'un anno',\n            yy : '%d anni'\n        },\n        ordinalParse : /\\d{1,2}º/,\n        ordinal: '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : japanese (ja)\n// author : LI Long : https://github.com/baryon\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('ja', {\n        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),\n        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),\n        longDateFormat : {\n            LT : 'Ah時m分',\n            LTS : 'LTs秒',\n            L : 'YYYY/MM/DD',\n            LL : 'YYYY年M月D日',\n            LLL : 'YYYY年M月D日LT',\n            LLLL : 'YYYY年M月D日LT dddd'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return '午前';\n            } else {\n                return '午後';\n            }\n        },\n        calendar : {\n            sameDay : '[今日] LT',\n            nextDay : '[明日] LT',\n            nextWeek : '[来週]dddd LT',\n            lastDay : '[昨日] LT',\n            lastWeek : '[前週]dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s後',\n            past : '%s前',\n            s : '数秒',\n            m : '1分',\n            mm : '%d分',\n            h : '1時間',\n            hh : '%d時間',\n            d : '1日',\n            dd : '%d日',\n            M : '1ヶ月',\n            MM : '%dヶ月',\n            y : '1年',\n            yy : '%d年'\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Georgian (ka)\n// author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n            'accusative': 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')\n        },\n\n        nounCase = (/D[oD] *MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n            'accusative': 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_')\n        },\n\n        nounCase = (/(წინა|შემდეგ)/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    return moment.defineLocale('ka', {\n        months : monthsCaseReplace,\n        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n        longDateFormat : {\n            LT : 'h:mm A',\n            LTS : 'h:mm:ss A',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[დღეს] LT[-ზე]',\n            nextDay : '[ხვალ] LT[-ზე]',\n            lastDay : '[გუშინ] LT[-ზე]',\n            nextWeek : '[შემდეგ] dddd LT[-ზე]',\n            lastWeek : '[წინა] dddd LT-ზე',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : function (s) {\n                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?\n                    s.replace(/ი$/, 'ში') :\n                    s + 'ში';\n            },\n            past : function (s) {\n                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {\n                    return s.replace(/(ი|ე)$/, 'ის წინ');\n                }\n                if ((/წელი/).test(s)) {\n                    return s.replace(/წელი$/, 'წლის წინ');\n                }\n            },\n            s : 'რამდენიმე წამი',\n            m : 'წუთი',\n            mm : '%d წუთი',\n            h : 'საათი',\n            hh : '%d საათი',\n            d : 'დღე',\n            dd : '%d დღე',\n            M : 'თვე',\n            MM : '%d თვე',\n            y : 'წელი',\n            yy : '%d წელი'\n        },\n        ordinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n        ordinal : function (number) {\n            if (number === 0) {\n                return number;\n            }\n\n            if (number === 1) {\n                return number + '-ლი';\n            }\n\n            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {\n                return 'მე-' + number;\n            }\n\n            return number + '-ე';\n        },\n        week : {\n            dow : 1,\n            doy : 7\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : khmer (km)\n// author : Kruy Vanna : https://github.com/kruyvanna\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('km', {\n        months: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n        monthsShort: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS : 'LT:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY LT',\n            LLLL: 'dddd, D MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[ថ្ងៃនៈ ម៉ោង] LT',\n            nextDay: '[ស្អែក ម៉ោង] LT',\n            nextWeek: 'dddd [ម៉ោង] LT',\n            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: '%sទៀត',\n            past: '%sមុន',\n            s: 'ប៉ុន្មានវិនាទី',\n            m: 'មួយនាទី',\n            mm: '%d នាទី',\n            h: 'មួយម៉ោង',\n            hh: '%d ម៉ោង',\n            d: 'មួយថ្ងៃ',\n            dd: '%d ថ្ងៃ',\n            M: 'មួយខែ',\n            MM: '%d ខែ',\n            y: 'មួយឆ្នាំ',\n            yy: '%d ឆ្នាំ'\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : korean (ko)\n//\n// authors\n//\n// - Kyungwook, Park : https://github.com/kyungw00k\n// - Jeeeyul Lee <jeeeyul@gmail.com>\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('ko', {\n        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat : {\n            LT : 'A h시 m분',\n            LTS : 'A h시 m분 s초',\n            L : 'YYYY.MM.DD',\n            LL : 'YYYY년 MMMM D일',\n            LLL : 'YYYY년 MMMM D일 LT',\n            LLLL : 'YYYY년 MMMM D일 dddd LT'\n        },\n        meridiem : function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        },\n        calendar : {\n            sameDay : '오늘 LT',\n            nextDay : '내일 LT',\n            nextWeek : 'dddd LT',\n            lastDay : '어제 LT',\n            lastWeek : '지난주 dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s 후',\n            past : '%s 전',\n            s : '몇초',\n            ss : '%d초',\n            m : '일분',\n            mm : '%d분',\n            h : '한시간',\n            hh : '%d시간',\n            d : '하루',\n            dd : '%d일',\n            M : '한달',\n            MM : '%d달',\n            y : '일년',\n            yy : '%d년'\n        },\n        ordinalParse : /\\d{1,2}일/,\n        ordinal : '%d일',\n        meridiemParse : /(오전|오후)/,\n        isPM : function (token) {\n            return token === '오후';\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Luxembourgish (lb)\n// author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz\n\n// Note: Luxembourgish has a very particular phonological rule ('Eifeler Regel') that causes the\n// deletion of the final 'n' in certain contexts. That's what the 'eifelerRegelAppliesToWeekday'\n// and 'eifelerRegelAppliesToNumber' methods are meant for\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            'm': ['eng Minutt', 'enger Minutt'],\n            'h': ['eng Stonn', 'enger Stonn'],\n            'd': ['een Dag', 'engem Dag'],\n            'M': ['ee Mount', 'engem Mount'],\n            'y': ['ee Joer', 'engem Joer']\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    function processFutureTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'a ' + string;\n        }\n        return 'an ' + string;\n    }\n\n    function processPastTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'viru ' + string;\n        }\n        return 'virun ' + string;\n    }\n\n    /**\n     * Returns true if the word before the given number loses the '-n' ending.\n     * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n     *\n     * @param number {integer}\n     * @returns {boolean}\n     */\n    function eifelerRegelAppliesToNumber(number) {\n        number = parseInt(number, 10);\n        if (isNaN(number)) {\n            return false;\n        }\n        if (number < 0) {\n            // Negative Number --> always true\n            return true;\n        } else if (number < 10) {\n            // Only 1 digit\n            if (4 <= number && number <= 7) {\n                return true;\n            }\n            return false;\n        } else if (number < 100) {\n            // 2 digits\n            var lastDigit = number % 10, firstDigit = number / 10;\n            if (lastDigit === 0) {\n                return eifelerRegelAppliesToNumber(firstDigit);\n            }\n            return eifelerRegelAppliesToNumber(lastDigit);\n        } else if (number < 10000) {\n            // 3 or 4 digits --> recursively check first digit\n            while (number >= 10) {\n                number = number / 10;\n            }\n            return eifelerRegelAppliesToNumber(number);\n        } else {\n            // Anything larger than 4 digits: recursively check first n-3 digits\n            number = number / 1000;\n            return eifelerRegelAppliesToNumber(number);\n        }\n    }\n\n    return moment.defineLocale('lb', {\n        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm [Auer]',\n            LTS: 'H:mm:ss [Auer]',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY LT',\n            LLLL: 'dddd, D. MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[Haut um] LT',\n            sameElse: 'L',\n            nextDay: '[Muer um] LT',\n            nextWeek: 'dddd [um] LT',\n            lastDay: '[Gëschter um] LT',\n            lastWeek: function () {\n                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n                switch (this.day()) {\n                    case 2:\n                    case 4:\n                        return '[Leschten] dddd [um] LT';\n                    default:\n                        return '[Leschte] dddd [um] LT';\n                }\n            }\n        },\n        relativeTime : {\n            future : processFutureTime,\n            past : processPastTime,\n            s : 'e puer Sekonnen',\n            m : processRelativeTime,\n            mm : '%d Minutten',\n            h : processRelativeTime,\n            hh : '%d Stonnen',\n            d : processRelativeTime,\n            dd : '%d Deeg',\n            M : processRelativeTime,\n            MM : '%d Méint',\n            y : processRelativeTime,\n            yy : '%d Joer'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Lithuanian (lt)\n// author : Mindaugas Mozūras : https://github.com/mmozuras\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var units = {\n        'm' : 'minutė_minutės_minutę',\n        'mm': 'minutės_minučių_minutes',\n        'h' : 'valanda_valandos_valandą',\n        'hh': 'valandos_valandų_valandas',\n        'd' : 'diena_dienos_dieną',\n        'dd': 'dienos_dienų_dienas',\n        'M' : 'mėnuo_mėnesio_mėnesį',\n        'MM': 'mėnesiai_mėnesių_mėnesius',\n        'y' : 'metai_metų_metus',\n        'yy': 'metai_metų_metus'\n    },\n    weekDays = 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_');\n\n    function translateSeconds(number, withoutSuffix, key, isFuture) {\n        if (withoutSuffix) {\n            return 'kelios sekundės';\n        } else {\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n        }\n    }\n\n    function translateSingular(number, withoutSuffix, key, isFuture) {\n        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n    }\n\n    function special(number) {\n        return number % 10 === 0 || (number > 10 && number < 20);\n    }\n\n    function forms(key) {\n        return units[key].split('_');\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        if (number === 1) {\n            return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n        } else if (withoutSuffix) {\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n        } else {\n            if (isFuture) {\n                return result + forms(key)[1];\n            } else {\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n            }\n        }\n    }\n\n    function relativeWeekDay(moment, format) {\n        var nominative = format.indexOf('dddd HH:mm') === -1,\n            weekDay = weekDays[moment.day()];\n\n        return nominative ? weekDay : weekDay.substring(0, weekDay.length - 2) + 'į';\n    }\n\n    return moment.defineLocale('lt', {\n        months : 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n        weekdays : relativeWeekDay,\n        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY [m.] MMMM D [d.]',\n            LLL : 'YYYY [m.] MMMM D [d.], LT [val.]',\n            LLLL : 'YYYY [m.] MMMM D [d.], dddd, LT [val.]',\n            l : 'YYYY-MM-DD',\n            ll : 'YYYY [m.] MMMM D [d.]',\n            lll : 'YYYY [m.] MMMM D [d.], LT [val.]',\n            llll : 'YYYY [m.] MMMM D [d.], ddd, LT [val.]'\n        },\n        calendar : {\n            sameDay : '[Šiandien] LT',\n            nextDay : '[Rytoj] LT',\n            nextWeek : 'dddd LT',\n            lastDay : '[Vakar] LT',\n            lastWeek : '[Praėjusį] dddd LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'po %s',\n            past : 'prieš %s',\n            s : translateSeconds,\n            m : translateSingular,\n            mm : translate,\n            h : translateSingular,\n            hh : translate,\n            d : translateSingular,\n            dd : translate,\n            M : translateSingular,\n            MM : translate,\n            y : translateSingular,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}-oji/,\n        ordinal : function (number) {\n            return number + '-oji';\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : latvian (lv)\n// author : Kristaps Karlsons : https://github.com/skakri\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var units = {\n        'mm': 'minūti_minūtes_minūte_minūtes',\n        'hh': 'stundu_stundas_stunda_stundas',\n        'dd': 'dienu_dienas_diena_dienas',\n        'MM': 'mēnesi_mēnešus_mēnesis_mēneši',\n        'yy': 'gadu_gadus_gads_gadi'\n    };\n\n    function format(word, number, withoutSuffix) {\n        var forms = word.split('_');\n        if (withoutSuffix) {\n            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];\n        } else {\n            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];\n        }\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        return number + ' ' + format(units[key], number, withoutSuffix);\n    }\n\n    return moment.defineLocale('lv', {\n        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),\n        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'YYYY. [gada] D. MMMM',\n            LLL : 'YYYY. [gada] D. MMMM, LT',\n            LLLL : 'YYYY. [gada] D. MMMM, dddd, LT'\n        },\n        calendar : {\n            sameDay : '[Šodien pulksten] LT',\n            nextDay : '[Rīt pulksten] LT',\n            nextWeek : 'dddd [pulksten] LT',\n            lastDay : '[Vakar pulksten] LT',\n            lastWeek : '[Pagājušā] dddd [pulksten] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s vēlāk',\n            past : '%s agrāk',\n            s : 'dažas sekundes',\n            m : 'minūti',\n            mm : relativeTimeWithPlural,\n            h : 'stundu',\n            hh : relativeTimeWithPlural,\n            d : 'dienu',\n            dd : relativeTimeWithPlural,\n            M : 'mēnesi',\n            MM : relativeTimeWithPlural,\n            y : 'gadu',\n            yy : relativeTimeWithPlural\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : macedonian (mk)\n// author : Borislav Mickov : https://github.com/B0k0\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('mk', {\n        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),\n        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),\n        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'D.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Денес во] LT',\n            nextDay : '[Утре во] LT',\n            nextWeek : 'dddd [во] LT',\n            lastDay : '[Вчера во] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[Во изминатата] dddd [во] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[Во изминатиот] dddd [во] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'после %s',\n            past : 'пред %s',\n            s : 'неколку секунди',\n            m : 'минута',\n            mm : '%d минути',\n            h : 'час',\n            hh : '%d часа',\n            d : 'ден',\n            dd : '%d дена',\n            M : 'месец',\n            MM : '%d месеци',\n            y : 'година',\n            yy : '%d години'\n        },\n        ordinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal : function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : malayalam (ml)\n// author : Floyd Pink : https://github.com/floydpink\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('ml', {\n        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),\n        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),\n        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),\n        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm -നു',\n            LTS : 'A h:mm:ss -നു',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[ഇന്ന്] LT',\n            nextDay : '[നാളെ] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[ഇന്നലെ] LT',\n            lastWeek : '[കഴിഞ്ഞ] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s കഴിഞ്ഞ്',\n            past : '%s മുൻപ്',\n            s : 'അൽപ നിമിഷങ്ങൾ',\n            m : 'ഒരു മിനിറ്റ്',\n            mm : '%d മിനിറ്റ്',\n            h : 'ഒരു മണിക്കൂർ',\n            hh : '%d മണിക്കൂർ',\n            d : 'ഒരു ദിവസം',\n            dd : '%d ദിവസം',\n            M : 'ഒരു മാസം',\n            MM : '%d മാസം',\n            y : 'ഒരു വർഷം',\n            yy : '%d വർഷം'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'രാത്രി';\n            } else if (hour < 12) {\n                return 'രാവിലെ';\n            } else if (hour < 17) {\n                return 'ഉച്ച കഴിഞ്ഞ്';\n            } else if (hour < 20) {\n                return 'വൈകുന്നേരം';\n            } else {\n                return 'രാത്രി';\n            }\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Marathi (mr)\n// author : Harshad Kale : https://github.com/kalehv\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    return moment.defineLocale('mr', {\n        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat : {\n            LT : 'A h:mm वाजता',\n            LTS : 'A h:mm:ss वाजता',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[उद्या] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[काल] LT',\n            lastWeek: '[मागील] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s नंतर',\n            past : '%s पूर्वी',\n            s : 'सेकंद',\n            m: 'एक मिनिट',\n            mm: '%d मिनिटे',\n            h : 'एक तास',\n            hh : '%d तास',\n            d : 'एक दिवस',\n            dd : '%d दिवस',\n            M : 'एक महिना',\n            MM : '%d महिने',\n            y : 'एक वर्ष',\n            yy : '%d वर्षे'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiem: function (hour, minute, isLower)\n        {\n            if (hour < 4) {\n                return 'रात्री';\n            } else if (hour < 10) {\n                return 'सकाळी';\n            } else if (hour < 17) {\n                return 'दुपारी';\n            } else if (hour < 20) {\n                return 'सायंकाळी';\n            } else {\n                return 'रात्री';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Bahasa Malaysia (ms-MY)\n// author : Weldan Jamili : https://github.com/weldan\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('ms-my', {\n        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat : {\n            LT : 'HH.mm',\n            LTS : 'LT.ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY [pukul] LT',\n            LLLL : 'dddd, D MMMM YYYY [pukul] LT'\n        },\n        meridiem : function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar : {\n            sameDay : '[Hari ini pukul] LT',\n            nextDay : '[Esok pukul] LT',\n            nextWeek : 'dddd [pukul] LT',\n            lastDay : '[Kelmarin pukul] LT',\n            lastWeek : 'dddd [lepas pukul] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'dalam %s',\n            past : '%s yang lepas',\n            s : 'beberapa saat',\n            m : 'seminit',\n            mm : '%d minit',\n            h : 'sejam',\n            hh : '%d jam',\n            d : 'sehari',\n            dd : '%d hari',\n            M : 'sebulan',\n            MM : '%d bulan',\n            y : 'setahun',\n            yy : '%d tahun'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Burmese (my)\n// author : Squar team, mysquar.com\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var symbolMap = {\n        '1': '၁',\n        '2': '၂',\n        '3': '၃',\n        '4': '၄',\n        '5': '၅',\n        '6': '၆',\n        '7': '၇',\n        '8': '၈',\n        '9': '၉',\n        '0': '၀'\n    }, numberMap = {\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        '၀': '0'\n    };\n    return moment.defineLocale('my', {\n        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),\n        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),\n        weekdaysShort: 'နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        weekdaysMin: 'နွေ_လာ_င်္ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY LT',\n            LLLL: 'dddd D MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[ယနေ.] LT [မှာ]',\n            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n            nextWeek: 'dddd LT [မှာ]',\n            lastDay: '[မနေ.က] LT [မှာ]',\n            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n            sameElse: 'L'\n        },\n        relativeTime: {\n            future: 'လာမည့် %s မှာ',\n            past: 'လွန်ခဲ့သော %s က',\n            s: 'စက္ကန်.အနည်းငယ်',\n            m: 'တစ်မိနစ်',\n            mm: '%d မိနစ်',\n            h: 'တစ်နာရီ',\n            hh: '%d နာရီ',\n            d: 'တစ်ရက်',\n            dd: '%d ရက်',\n            M: 'တစ်လ',\n            MM: '%d လ',\n            y: 'တစ်နှစ်',\n            yy: '%d နှစ်'\n        },\n        preparse: function (string) {\n            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4 // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : norwegian bokmål (nb)\n// authors : Espen Hovlandsdal : https://github.com/rexxars\n//           Sigurd Gartmann : https://github.com/sigurdga\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('nb', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort : 'søn_man_tirs_ons_tors_fre_lør'.split('_'),\n        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'H.mm',\n            LTS : 'LT.ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY [kl.] LT',\n            LLLL : 'dddd D. MMMM YYYY [kl.] LT'\n        },\n        calendar : {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[forrige] dddd [kl.] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'for %s siden',\n            s : 'noen sekunder',\n            m : 'ett minutt',\n            mm : '%d minutter',\n            h : 'en time',\n            hh : '%d timer',\n            d : 'en dag',\n            dd : '%d dager',\n            M : 'en måned',\n            MM : '%d måneder',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : nepali/nepalese\n// author : suvash : https://github.com/suvash\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var symbolMap = {\n        '1': '१',\n        '2': '२',\n        '3': '३',\n        '4': '४',\n        '5': '५',\n        '6': '६',\n        '7': '७',\n        '8': '८',\n        '9': '९',\n        '0': '०'\n    },\n    numberMap = {\n        '१': '1',\n        '२': '2',\n        '३': '3',\n        '४': '4',\n        '५': '5',\n        '६': '6',\n        '७': '7',\n        '८': '8',\n        '९': '9',\n        '०': '0'\n    };\n\n    return moment.defineLocale('ne', {\n        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),\n        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),\n        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),\n        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n        weekdaysMin : 'आइ._सो._मङ्_बु._बि._शु._श.'.split('_'),\n        longDateFormat : {\n            LT : 'Aको h:mm बजे',\n            LTS : 'Aको h:mm:ss बजे',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 3) {\n                return 'राती';\n            } else if (hour < 10) {\n                return 'बिहान';\n            } else if (hour < 15) {\n                return 'दिउँसो';\n            } else if (hour < 18) {\n                return 'बेलुका';\n            } else if (hour < 20) {\n                return 'साँझ';\n            } else {\n                return 'राती';\n            }\n        },\n        calendar : {\n            sameDay : '[आज] LT',\n            nextDay : '[भोली] LT',\n            nextWeek : '[आउँदो] dddd[,] LT',\n            lastDay : '[हिजो] LT',\n            lastWeek : '[गएको] dddd[,] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%sमा',\n            past : '%s अगाडी',\n            s : 'केही समय',\n            m : 'एक मिनेट',\n            mm : '%d मिनेट',\n            h : 'एक घण्टा',\n            hh : '%d घण्टा',\n            d : 'एक दिन',\n            dd : '%d दिन',\n            M : 'एक महिना',\n            MM : '%d महिना',\n            y : 'एक बर्ष',\n            yy : '%d बर्ष'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : dutch (nl)\n// author : Joris Röling : https://github.com/jjupiter\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\n    return moment.defineLocale('nl', {\n        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n        monthsShort : function (m, format) {\n            if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD-MM-YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'over %s',\n            past : '%s geleden',\n            s : 'een paar seconden',\n            m : 'één minuut',\n            mm : '%d minuten',\n            h : 'één uur',\n            hh : '%d uur',\n            d : 'één dag',\n            dd : '%d dagen',\n            M : 'één maand',\n            MM : '%d maanden',\n            y : 'één jaar',\n            yy : '%d jaar'\n        },\n        ordinalParse: /\\d{1,2}(ste|de)/,\n        ordinal : function (number) {\n            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : norwegian nynorsk (nn)\n// author : https://github.com/mechuwind\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('nn', {\n        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),\n        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[I dag klokka] LT',\n            nextDay: '[I morgon klokka] LT',\n            nextWeek: 'dddd [klokka] LT',\n            lastDay: '[I går klokka] LT',\n            lastWeek: '[Føregåande] dddd [klokka] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'for %s sidan',\n            s : 'nokre sekund',\n            m : 'eit minutt',\n            mm : '%d minutt',\n            h : 'ein time',\n            hh : '%d timar',\n            d : 'ein dag',\n            dd : '%d dagar',\n            M : 'ein månad',\n            MM : '%d månader',\n            y : 'eit år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : polish (pl)\n// author : Rafal Hirsz : https://github.com/evoL\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),\n        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n\n    function plural(n) {\n        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n    }\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'minuta' : 'minutę';\n        case 'mm':\n            return result + (plural(number) ? 'minuty' : 'minut');\n        case 'h':\n            return withoutSuffix  ? 'godzina'  : 'godzinę';\n        case 'hh':\n            return result + (plural(number) ? 'godziny' : 'godzin');\n        case 'MM':\n            return result + (plural(number) ? 'miesiące' : 'miesięcy');\n        case 'yy':\n            return result + (plural(number) ? 'lata' : 'lat');\n        }\n    }\n\n    return moment.defineLocale('pl', {\n        months : function (momentToFormat, format) {\n            if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n        weekdaysShort : 'nie_pon_wt_śr_czw_pt_sb'.split('_'),\n        weekdaysMin : 'N_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: '[W] dddd [o] LT',\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[W zeszłą niedzielę o] LT';\n                case 3:\n                    return '[W zeszłą środę o] LT';\n                case 6:\n                    return '[W zeszłą sobotę o] LT';\n                default:\n                    return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : '%s temu',\n            s : 'kilka sekund',\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : '1 dzień',\n            dd : '%d dni',\n            M : 'miesiąc',\n            MM : translate,\n            y : 'rok',\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : brazilian portuguese (pt-br)\n// author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('pt-br', {\n        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays : 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split('_'),\n        weekdaysShort : 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),\n        weekdaysMin : 'dom_2ª_3ª_4ª_5ª_6ª_sáb'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY [às] LT',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] LT'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : '%s atrás',\n            s : 'segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        ordinalParse: /\\d{1,2}º/,\n        ordinal : '%dº'\n    });\n}));\n// moment.js locale configuration\n// locale : portuguese (pt)\n// author : Jefferson : https://github.com/jalex79\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('pt', {\n        months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),\n        monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays : 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split('_'),\n        weekdaysShort : 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),\n        weekdaysMin : 'dom_2ª_3ª_4ª_5ª_6ª_sáb'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D [de] MMMM [de] YYYY',\n            LLL : 'D [de] MMMM [de] YYYY LT',\n            LLLL : 'dddd, D [de] MMMM [de] YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return (this.day() === 0 || this.day() === 6) ?\n                    '[Último] dddd [às] LT' : // Saturday + Sunday\n                    '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'em %s',\n            past : 'há %s',\n            s : 'segundos',\n            m : 'um minuto',\n            mm : '%d minutos',\n            h : 'uma hora',\n            hh : '%d horas',\n            d : 'um dia',\n            dd : '%d dias',\n            M : 'um mês',\n            MM : '%d meses',\n            y : 'um ano',\n            yy : '%d anos'\n        },\n        ordinalParse: /\\d{1,2}º/,\n        ordinal : '%dº',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : romanian (ro)\n// author : Vlad Gurdiga : https://github.com/gurdiga\n// author : Valentin Agachi : https://github.com/avaly\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n                'mm': 'minute',\n                'hh': 'ore',\n                'dd': 'zile',\n                'MM': 'luni',\n                'yy': 'ani'\n            },\n            separator = ' ';\n        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n            separator = ' de ';\n        }\n\n        return number + separator + format[key];\n    }\n\n    return moment.defineLocale('ro', {\n        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY H:mm',\n            LLLL : 'dddd, D MMMM YYYY H:mm'\n        },\n        calendar : {\n            sameDay: '[azi la] LT',\n            nextDay: '[mâine la] LT',\n            nextWeek: 'dddd [la] LT',\n            lastDay: '[ieri la] LT',\n            lastWeek: '[fosta] dddd [la] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'peste %s',\n            past : '%s în urmă',\n            s : 'câteva secunde',\n            m : 'un minut',\n            mm : relativeTimeWithPlural,\n            h : 'o oră',\n            hh : relativeTimeWithPlural,\n            d : 'o zi',\n            dd : relativeTimeWithPlural,\n            M : 'o lună',\n            MM : relativeTimeWithPlural,\n            y : 'un an',\n            yy : relativeTimeWithPlural\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : russian (ru)\n// author : Viktorminator : https://github.com/Viktorminator\n// Author : Menelion Elensúle : https://github.com/Oire\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            'hh': 'час_часа_часов',\n            'dd': 'день_дня_дней',\n            'MM': 'месяц_месяца_месяцев',\n            'yy': 'год_года_лет'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function monthsShortCaseReplace(m, format) {\n        var monthsShort = {\n            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')\n        },\n\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return monthsShort[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')\n        },\n\n        nounCase = (/\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    return moment.defineLocale('ru', {\n        months : monthsCaseReplace,\n        monthsShort : monthsShortCaseReplace,\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY г.',\n            LLL : 'D MMMM YYYY г., LT',\n            LLLL : 'dddd, D MMMM YYYY г., LT'\n        },\n        calendar : {\n            sameDay: '[Сегодня в] LT',\n            nextDay: '[Завтра в] LT',\n            lastDay: '[Вчера в] LT',\n            nextWeek: function () {\n                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                    case 0:\n                        return '[В прошлое] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd [в] LT';\n                    } else {\n                        return '[В] dddd [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'через %s',\n            past : '%s назад',\n            s : 'несколько секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'час',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'месяц',\n            MM : relativeTimeWithPlural,\n            y : 'год',\n            yy : relativeTimeWithPlural\n        },\n\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM : function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            case 'w':\n            case 'W':\n                return number + '-я';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : slovak (sk)\n// author : Martin Minka : https://github.com/k2s\n// based on work of petrbela : https://github.com/petrbela\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),\n        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n\n    function plural(n) {\n        return (n > 1) && (n < 5);\n    }\n\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n        case 's':  // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n        case 'm':  // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'minúty' : 'minút');\n            } else {\n                return result + 'minútami';\n            }\n            break;\n        case 'h':  // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'hodiny' : 'hodín');\n            } else {\n                return result + 'hodinami';\n            }\n            break;\n        case 'd':  // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'dni' : 'dní');\n            } else {\n                return result + 'dňami';\n            }\n            break;\n        case 'M':  // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'mesiace' : 'mesiacov');\n            } else {\n                return result + 'mesiacmi';\n            }\n            break;\n        case 'y':  // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'roky' : 'rokov');\n            } else {\n                return result + 'rokmi';\n            }\n            break;\n        }\n    }\n\n    return moment.defineLocale('sk', {\n        months : months,\n        monthsShort : monthsShort,\n        monthsParse : (function (months, monthsShort) {\n            var i, _monthsParse = [];\n            for (i = 0; i < 12; i++) {\n                // use custom parser to solve problem with July (červenec)\n                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n            }\n            return _monthsParse;\n        }(months, monthsShort)),\n        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),\n        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),\n        longDateFormat : {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[dnes o] LT',\n            nextDay: '[zajtra o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[v nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [o] LT';\n                case 3:\n                    return '[v stredu o] LT';\n                case 4:\n                    return '[vo štvrtok o] LT';\n                case 5:\n                    return '[v piatok o] LT';\n                case 6:\n                    return '[v sobotu o] LT';\n                }\n            },\n            lastDay: '[včera o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[minulú nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[minulý] dddd [o] LT';\n                case 3:\n                    return '[minulú stredu o] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [o] LT';\n                case 6:\n                    return '[minulú sobotu o] LT';\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past : 'pred %s',\n            s : translate,\n            m : translate,\n            mm : translate,\n            h : translate,\n            hh : translate,\n            d : translate,\n            dd : translate,\n            M : translate,\n            MM : translate,\n            y : translate,\n            yy : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : slovenian (sl)\n// author : Robert Sedovšek : https://github.com/sedovsek\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n        case 'm':\n            return withoutSuffix ? 'ena minuta' : 'eno minuto';\n        case 'mm':\n            if (number === 1) {\n                result += 'minuta';\n            } else if (number === 2) {\n                result += 'minuti';\n            } else if (number === 3 || number === 4) {\n                result += 'minute';\n            } else {\n                result += 'minut';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'ena ura' : 'eno uro';\n        case 'hh':\n            if (number === 1) {\n                result += 'ura';\n            } else if (number === 2) {\n                result += 'uri';\n            } else if (number === 3 || number === 4) {\n                result += 'ure';\n            } else {\n                result += 'ur';\n            }\n            return result;\n        case 'dd':\n            if (number === 1) {\n                result += 'dan';\n            } else {\n                result += 'dni';\n            }\n            return result;\n        case 'MM':\n            if (number === 1) {\n                result += 'mesec';\n            } else if (number === 2) {\n                result += 'meseca';\n            } else if (number === 3 || number === 4) {\n                result += 'mesece';\n            } else {\n                result += 'mesecev';\n            }\n            return result;\n        case 'yy':\n            if (number === 1) {\n                result += 'leto';\n            } else if (number === 2) {\n                result += 'leti';\n            } else if (number === 3 || number === 4) {\n                result += 'leta';\n            } else {\n                result += 'let';\n            }\n            return result;\n        }\n    }\n\n    return moment.defineLocale('sl', {\n        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),\n        longDateFormat : {\n            LT : 'H:mm',\n            LTS : 'LT:ss',\n            L : 'DD. MM. YYYY',\n            LL : 'D. MMMM YYYY',\n            LLL : 'D. MMMM YYYY LT',\n            LLLL : 'dddd, D. MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay  : '[danes ob] LT',\n            nextDay  : '[jutri ob] LT',\n\n            nextWeek : function () {\n                switch (this.day()) {\n                case 0:\n                    return '[v] [nedeljo] [ob] LT';\n                case 3:\n                    return '[v] [sredo] [ob] LT';\n                case 6:\n                    return '[v] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[v] dddd [ob] LT';\n                }\n            },\n            lastDay  : '[včeraj ob] LT',\n            lastWeek : function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[prejšnja] dddd [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prejšnji] dddd [ob] LT';\n                }\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'čez %s',\n            past   : '%s nazaj',\n            s      : 'nekaj sekund',\n            m      : translate,\n            mm     : translate,\n            h      : translate,\n            hh     : translate,\n            d      : 'en dan',\n            dd     : translate,\n            M      : 'en mesec',\n            MM     : translate,\n            y      : 'eno leto',\n            yy     : translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Albanian (sq)\n// author : Flakërim Ismani : https://github.com/flakerimi\n// author: Menelion Elensúle: https://github.com/Oire (tests)\n// author : Oerd Cukalla : https://github.com/oerd (fixes)\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('sq', {\n        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),\n        meridiem : function (hours, minutes, isLower) {\n            return hours < 12 ? 'PD' : 'MD';\n        },\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[Sot në] LT',\n            nextDay : '[Nesër në] LT',\n            nextWeek : 'dddd [në] LT',\n            lastDay : '[Dje në] LT',\n            lastWeek : 'dddd [e kaluar në] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'në %s',\n            past : '%s më parë',\n            s : 'disa sekonda',\n            m : 'një minutë',\n            mm : '%d minuta',\n            h : 'një orë',\n            hh : '%d orë',\n            d : 'një ditë',\n            dd : '%d ditë',\n            M : 'një muaj',\n            MM : '%d muaj',\n            y : 'një vit',\n            yy : '%d vite'\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Serbian-cyrillic (sr-cyrl)\n// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var translator = {\n        words: { //Different grammatical cases\n            m: ['један минут', 'једне минуте'],\n            mm: ['минут', 'минуте', 'минута'],\n            h: ['један сат', 'једног сата'],\n            hh: ['сат', 'сата', 'сати'],\n            dd: ['дан', 'дана', 'дана'],\n            MM: ['месец', 'месеца', 'месеци'],\n            yy: ['година', 'године', 'година']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    return moment.defineLocale('sr-cyrl', {\n        months: ['јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'],\n        monthsShort: ['јан.', 'феб.', 'мар.', 'апр.', 'мај', 'јун', 'јул', 'авг.', 'сеп.', 'окт.', 'нов.', 'дец.'],\n        weekdays: ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],\n        weekdaysShort: ['нед.', 'пон.', 'уто.', 'сре.', 'чет.', 'пет.', 'суб.'],\n        weekdaysMin: ['не', 'по', 'ут', 'ср', 'че', 'пе', 'су'],\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L: 'DD. MM. YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY LT',\n            LLLL: 'dddd, D. MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[данас у] LT',\n            nextDay: '[сутра у] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[у] [недељу] [у] LT';\n                case 3:\n                    return '[у] [среду] [у] LT';\n                case 6:\n                    return '[у] [суботу] [у] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[у] dddd [у] LT';\n                }\n            },\n            lastDay  : '[јуче у] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[прошле] [недеље] [у] LT',\n                    '[прошлог] [понедељка] [у] LT',\n                    '[прошлог] [уторка] [у] LT',\n                    '[прошле] [среде] [у] LT',\n                    '[прошлог] [четвртка] [у] LT',\n                    '[прошлог] [петка] [у] LT',\n                    '[прошле] [суботе] [у] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past   : 'пре %s',\n            s      : 'неколико секунди',\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'дан',\n            dd     : translator.translate,\n            M      : 'месец',\n            MM     : translator.translate,\n            y      : 'годину',\n            yy     : translator.translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Serbian-latin (sr)\n// author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var translator = {\n        words: { //Different grammatical cases\n            m: ['jedan minut', 'jedne minute'],\n            mm: ['minut', 'minute', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mesec', 'meseca', 'meseci'],\n            yy: ['godina', 'godine', 'godina']\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n            }\n        }\n    };\n\n    return moment.defineLocale('sr', {\n        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],\n        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],\n        weekdays: ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota'],\n        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sre.', 'čet.', 'pet.', 'sub.'],\n        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS : 'LT:ss',\n            L: 'DD. MM. YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY LT',\n            LLLL: 'dddd, D. MMMM YYYY LT'\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                case 0:\n                    return '[u] [nedelju] [u] LT';\n                case 3:\n                    return '[u] [sredu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n                }\n            },\n            lastDay  : '[juče u] LT',\n            lastWeek : function () {\n                var lastWeekDays = [\n                    '[prošle] [nedelje] [u] LT',\n                    '[prošlog] [ponedeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT'\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'za %s',\n            past   : 'pre %s',\n            s      : 'nekoliko sekundi',\n            m      : translator.translate,\n            mm     : translator.translate,\n            h      : translator.translate,\n            hh     : translator.translate,\n            d      : 'dan',\n            dd     : translator.translate,\n            M      : 'mesec',\n            MM     : translator.translate,\n            y      : 'godinu',\n            yy     : translator.translate\n        },\n        ordinalParse: /\\d{1,2}\\./,\n        ordinal : '%d.',\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : swedish (sv)\n// author : Jens Alm : https://github.com/ulmus\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('sv', {\n        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'YYYY-MM-DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Idag] LT',\n            nextDay: '[Imorgon] LT',\n            lastDay: '[Igår] LT',\n            nextWeek: 'dddd LT',\n            lastWeek: '[Förra] dddd[en] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'om %s',\n            past : 'för %s sedan',\n            s : 'några sekunder',\n            m : 'en minut',\n            mm : '%d minuter',\n            h : 'en timme',\n            hh : '%d timmar',\n            d : 'en dag',\n            dd : '%d dagar',\n            M : 'en månad',\n            MM : '%d månader',\n            y : 'ett år',\n            yy : '%d år'\n        },\n        ordinalParse: /\\d{1,2}(e|a)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (~~(number % 100 / 10) === 1) ? 'e' :\n                (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                (b === 3) ? 'e' : 'e';\n            return number + output;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : tamil (ta)\n// author : Arjunkumar Krishnamoorthy : https://github.com/tk120404\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    /*var symbolMap = {\n            '1': '௧',\n            '2': '௨',\n            '3': '௩',\n            '4': '௪',\n            '5': '௫',\n            '6': '௬',\n            '7': '௭',\n            '8': '௮',\n            '9': '௯',\n            '0': '௦'\n        },\n        numberMap = {\n            '௧': '1',\n            '௨': '2',\n            '௩': '3',\n            '௪': '4',\n            '௫': '5',\n            '௬': '6',\n            '௭': '7',\n            '௮': '8',\n            '௯': '9',\n            '௦': '0'\n        }; */\n\n    return moment.defineLocale('ta', {\n        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),\n        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),\n        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY, LT',\n            LLLL : 'dddd, D MMMM YYYY, LT'\n        },\n        calendar : {\n            sameDay : '[இன்று] LT',\n            nextDay : '[நாளை] LT',\n            nextWeek : 'dddd, LT',\n            lastDay : '[நேற்று] LT',\n            lastWeek : '[கடந்த வாரம்] dddd, LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s இல்',\n            past : '%s முன்',\n            s : 'ஒரு சில விநாடிகள்',\n            m : 'ஒரு நிமிடம்',\n            mm : '%d நிமிடங்கள்',\n            h : 'ஒரு மணி நேரம்',\n            hh : '%d மணி நேரம்',\n            d : 'ஒரு நாள்',\n            dd : '%d நாட்கள்',\n            M : 'ஒரு மாதம்',\n            MM : '%d மாதங்கள்',\n            y : 'ஒரு வருடம்',\n            yy : '%d ஆண்டுகள்'\n        },\n/*        preparse: function (string) {\n            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n                return numberMap[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap[match];\n            });\n        },*/\n        ordinalParse: /\\d{1,2}வது/,\n        ordinal : function (number) {\n            return number + 'வது';\n        },\n\n\n        // refer http://ta.wikipedia.org/s/1er1\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour >= 6 && hour <= 10) {\n                return ' காலை';\n            } else if (hour >= 10 && hour <= 14) {\n                return ' நண்பகல்';\n            } else if (hour >= 14 && hour <= 18) {\n                return ' எற்பாடு';\n            } else if (hour >= 18 && hour <= 20) {\n                return ' மாலை';\n            } else if (hour >= 20 && hour <= 24) {\n                return ' இரவு';\n            } else if (hour >= 0 && hour <= 6) {\n                return ' வைகறை';\n            }\n        },\n        week : {\n            dow : 0, // Sunday is the first day of the week.\n            doy : 6  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : thai (th)\n// author : Kridsada Thanabulpong : https://github.com/sirn\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('th', {\n        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n        monthsShort : 'มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา'.split('_'),\n        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n        longDateFormat : {\n            LT : 'H นาฬิกา m นาที',\n            LTS : 'LT s วินาที',\n            L : 'YYYY/MM/DD',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY เวลา LT',\n            LLLL : 'วันddddที่ D MMMM YYYY เวลา LT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ก่อนเที่ยง';\n            } else {\n                return 'หลังเที่ยง';\n            }\n        },\n        calendar : {\n            sameDay : '[วันนี้ เวลา] LT',\n            nextDay : '[พรุ่งนี้ เวลา] LT',\n            nextWeek : 'dddd[หน้า เวลา] LT',\n            lastDay : '[เมื่อวานนี้ เวลา] LT',\n            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'อีก %s',\n            past : '%sที่แล้ว',\n            s : 'ไม่กี่วินาที',\n            m : '1 นาที',\n            mm : '%d นาที',\n            h : '1 ชั่วโมง',\n            hh : '%d ชั่วโมง',\n            d : '1 วัน',\n            dd : '%d วัน',\n            M : '1 เดือน',\n            MM : '%d เดือน',\n            y : '1 ปี',\n            yy : '%d ปี'\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Tagalog/Filipino (tl-ph)\n// author : Dan Hagman\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('tl-ph', {\n        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'MM/D/YYYY',\n            LL : 'MMMM D, YYYY',\n            LLL : 'MMMM D, YYYY LT',\n            LLLL : 'dddd, MMMM DD, YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Ngayon sa] LT',\n            nextDay: '[Bukas sa] LT',\n            nextWeek: 'dddd [sa] LT',\n            lastDay: '[Kahapon sa] LT',\n            lastWeek: 'dddd [huling linggo] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'sa loob ng %s',\n            past : '%s ang nakalipas',\n            s : 'ilang segundo',\n            m : 'isang minuto',\n            mm : '%d minuto',\n            h : 'isang oras',\n            hh : '%d oras',\n            d : 'isang araw',\n            dd : '%d araw',\n            M : 'isang buwan',\n            MM : '%d buwan',\n            y : 'isang taon',\n            yy : '%d taon'\n        },\n        ordinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : turkish (tr)\n// authors : Erhan Gundogan : https://github.com/erhangundogan,\n//           Burak Yiğit Kaya: https://github.com/BYK\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    var suffixes = {\n        1: '\\'inci',\n        5: '\\'inci',\n        8: '\\'inci',\n        70: '\\'inci',\n        80: '\\'inci',\n\n        2: '\\'nci',\n        7: '\\'nci',\n        20: '\\'nci',\n        50: '\\'nci',\n\n        3: '\\'üncü',\n        4: '\\'üncü',\n        100: '\\'üncü',\n\n        6: '\\'ncı',\n\n        9: '\\'uncu',\n        10: '\\'uncu',\n        30: '\\'uncu',\n\n        60: '\\'ıncı',\n        90: '\\'ıncı'\n    };\n\n    return moment.defineLocale('tr', {\n        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd, D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay : '[bugün saat] LT',\n            nextDay : '[yarın saat] LT',\n            nextWeek : '[haftaya] dddd [saat] LT',\n            lastDay : '[dün] LT',\n            lastWeek : '[geçen hafta] dddd [saat] LT',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : '%s sonra',\n            past : '%s önce',\n            s : 'birkaç saniye',\n            m : 'bir dakika',\n            mm : '%d dakika',\n            h : 'bir saat',\n            hh : '%d saat',\n            d : 'bir gün',\n            dd : '%d gün',\n            M : 'bir ay',\n            MM : '%d ay',\n            y : 'bir yıl',\n            yy : '%d yıl'\n        },\n        ordinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n        ordinal : function (number) {\n            if (number === 0) {  // special case for zero\n                return number + '\\'ıncı';\n            }\n            var a = number % 10,\n                b = number % 100 - a,\n                c = number >= 100 ? 100 : null;\n\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)\n// author : Abdel Said : https://github.com/abdelsaid\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('tzm-latn', {\n        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[asdkh g] LT',\n            nextDay: '[aska g] LT',\n            nextWeek: 'dddd [g] LT',\n            lastDay: '[assant g] LT',\n            lastWeek: 'dddd [g] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'dadkh s yan %s',\n            past : 'yan %s',\n            s : 'imik',\n            m : 'minuḍ',\n            mm : '%d minuḍ',\n            h : 'saɛa',\n            hh : '%d tassaɛin',\n            d : 'ass',\n            dd : '%d ossan',\n            M : 'ayowr',\n            MM : '%d iyyirn',\n            y : 'asgas',\n            yy : '%d isgasn'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : Morocco Central Atlas Tamaziɣt (tzm)\n// author : Abdel Said : https://github.com/abdelsaid\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('tzm', {\n        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS: 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'dddd D MMMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n            nextWeek: 'dddd [ⴴ] LT',\n            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n            lastWeek: 'dddd [ⴴ] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n            past : 'ⵢⴰⵏ %s',\n            s : 'ⵉⵎⵉⴽ',\n            m : 'ⵎⵉⵏⵓⴺ',\n            mm : '%d ⵎⵉⵏⵓⴺ',\n            h : 'ⵙⴰⵄⴰ',\n            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n            d : 'ⴰⵙⵙ',\n            dd : '%d oⵙⵙⴰⵏ',\n            M : 'ⴰⵢoⵓⵔ',\n            MM : '%d ⵉⵢⵢⵉⵔⵏ',\n            y : 'ⴰⵙⴳⴰⵙ',\n            yy : '%d ⵉⵙⴳⴰⵙⵏ'\n        },\n        week : {\n            dow : 6, // Saturday is the first day of the week.\n            doy : 12  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : ukrainian (uk)\n// author : zemlanin : https://github.com/zemlanin\n// Author : Menelion Elensúle : https://github.com/Oire\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n    }\n\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            'mm': 'хвилина_хвилини_хвилин',\n            'hh': 'година_години_годин',\n            'dd': 'день_дні_днів',\n            'MM': 'місяць_місяці_місяців',\n            'yy': 'рік_роки_років'\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        }\n        else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        }\n        else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    function monthsCaseReplace(m, format) {\n        var months = {\n            'nominative': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_'),\n            'accusative': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_')\n        },\n\n        nounCase = (/D[oD]? *MMMM?/).test(format) ?\n            'accusative' :\n            'nominative';\n\n        return months[nounCase][m.month()];\n    }\n\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n        },\n\n        nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n            'accusative' :\n            ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n                'genitive' :\n                'nominative');\n\n        return weekdays[nounCase][m.day()];\n    }\n\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    return moment.defineLocale('uk', {\n        months : monthsCaseReplace,\n        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n        weekdays : weekdaysCaseReplace,\n        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD.MM.YYYY',\n            LL : 'D MMMM YYYY р.',\n            LLL : 'D MMMM YYYY р., LT',\n            LLLL : 'dddd, D MMMM YYYY р., LT'\n        },\n        calendar : {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return processHoursFunction('[Минулої] dddd [').call(this);\n                case 1:\n                case 2:\n                case 4:\n                    return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : 'за %s',\n            past : '%s тому',\n            s : 'декілька секунд',\n            m : relativeTimeWithPlural,\n            mm : relativeTimeWithPlural,\n            h : 'годину',\n            hh : relativeTimeWithPlural,\n            d : 'день',\n            dd : relativeTimeWithPlural,\n            M : 'місяць',\n            MM : relativeTimeWithPlural,\n            y : 'рік',\n            yy : relativeTimeWithPlural\n        },\n\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n\n        meridiem : function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n\n        ordinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            default:\n                return number;\n            }\n        },\n\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : uzbek (uz)\n// author : Sardor Muminov : https://github.com/muminoff\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('uz', {\n        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM YYYY',\n            LLL : 'D MMMM YYYY LT',\n            LLLL : 'D MMMM YYYY, dddd LT'\n        },\n        calendar : {\n            sameDay : '[Бугун соат] LT [да]',\n            nextDay : '[Эртага] LT [да]',\n            nextWeek : 'dddd [куни соат] LT [да]',\n            lastDay : '[Кеча соат] LT [да]',\n            lastWeek : '[Утган] dddd [куни соат] LT [да]',\n            sameElse : 'L'\n        },\n        relativeTime : {\n            future : 'Якин %s ичида',\n            past : 'Бир неча %s олдин',\n            s : 'фурсат',\n            m : 'бир дакика',\n            mm : '%d дакика',\n            h : 'бир соат',\n            hh : '%d соат',\n            d : 'бир кун',\n            dd : '%d кун',\n            M : 'бир ой',\n            MM : '%d ой',\n            y : 'бир йил',\n            yy : '%d йил'\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 7  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : vietnamese (vi)\n// author : Bang Nguyen : https://github.com/bangnk\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('vi', {\n        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        longDateFormat : {\n            LT : 'HH:mm',\n            LTS : 'LT:ss',\n            L : 'DD/MM/YYYY',\n            LL : 'D MMMM [năm] YYYY',\n            LLL : 'D MMMM [năm] YYYY LT',\n            LLLL : 'dddd, D MMMM [năm] YYYY LT',\n            l : 'DD/M/YYYY',\n            ll : 'D MMM YYYY',\n            lll : 'D MMM YYYY LT',\n            llll : 'ddd, D MMM YYYY LT'\n        },\n        calendar : {\n            sameDay: '[Hôm nay lúc] LT',\n            nextDay: '[Ngày mai lúc] LT',\n            nextWeek: 'dddd [tuần tới lúc] LT',\n            lastDay: '[Hôm qua lúc] LT',\n            lastWeek: 'dddd [tuần rồi lúc] LT',\n            sameElse: 'L'\n        },\n        relativeTime : {\n            future : '%s tới',\n            past : '%s trước',\n            s : 'vài giây',\n            m : 'một phút',\n            mm : '%d phút',\n            h : 'một giờ',\n            hh : '%d giờ',\n            d : 'một ngày',\n            dd : '%d ngày',\n            M : 'một tháng',\n            MM : '%d tháng',\n            y : 'một năm',\n            yy : '%d năm'\n        },\n        ordinalParse: /\\d{1,2}/,\n        ordinal : function (number) {\n            return number;\n        },\n        week : {\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : chinese (zh-cn)\n// author : suupic : https://github.com/suupic\n// author : Zeno Zeng : https://github.com/zenozeng\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('zh-cn', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'Ah点mm',\n            LTS : 'Ah点m分s秒',\n            L : 'YYYY-MM-DD',\n            LL : 'YYYY年MMMD日',\n            LLL : 'YYYY年MMMD日LT',\n            LLLL : 'YYYY年MMMD日ddddLT',\n            l : 'YYYY-MM-DD',\n            ll : 'YYYY年MMMD日',\n            lll : 'YYYY年MMMD日LT',\n            llll : 'YYYY年MMMD日ddddLT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : function () {\n                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';\n            },\n            nextDay : function () {\n                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';\n            },\n            lastDay : function () {\n                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';\n            },\n            nextWeek : function () {\n                var startOfWeek, prefix;\n                startOfWeek = moment().startOf('week');\n                prefix = this.unix() - startOfWeek.unix() >= 7 * 24 * 3600 ? '[下]' : '[本]';\n                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';\n            },\n            lastWeek : function () {\n                var startOfWeek, prefix;\n                startOfWeek = moment().startOf('week');\n                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';\n                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';\n            },\n            sameElse : 'LL'\n        },\n        ordinalParse: /\\d{1,2}(日|月|周)/,\n        ordinal : function (number, period) {\n            switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return number + '日';\n            case 'M':\n                return number + '月';\n            case 'w':\n            case 'W':\n                return number + '周';\n            default:\n                return number;\n            }\n        },\n        relativeTime : {\n            future : '%s内',\n            past : '%s前',\n            s : '几秒',\n            m : '1分钟',\n            mm : '%d分钟',\n            h : '1小时',\n            hh : '%d小时',\n            d : '1天',\n            dd : '%d天',\n            M : '1个月',\n            MM : '%d个月',\n            y : '1年',\n            yy : '%d年'\n        },\n        week : {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow : 1, // Monday is the first day of the week.\n            doy : 4  // The week that contains Jan 4th is the first week of the year.\n        }\n    });\n}));\n// moment.js locale configuration\n// locale : traditional chinese (zh-tw)\n// author : Ben : https://github.com/ben-lin\n\n(function (factory) {\n    factory(moment);\n}(function (moment) {\n    return moment.defineLocale('zh-tw', {\n        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat : {\n            LT : 'Ah點mm',\n            LTS : 'Ah點m分s秒',\n            L : 'YYYY年MMMD日',\n            LL : 'YYYY年MMMD日',\n            LLL : 'YYYY年MMMD日LT',\n            LLLL : 'YYYY年MMMD日ddddLT',\n            l : 'YYYY年MMMD日',\n            ll : 'YYYY年MMMD日',\n            lll : 'YYYY年MMMD日LT',\n            llll : 'YYYY年MMMD日ddddLT'\n        },\n        meridiem : function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar : {\n            sameDay : '[今天]LT',\n            nextDay : '[明天]LT',\n            nextWeek : '[下]ddddLT',\n            lastDay : '[昨天]LT',\n            lastWeek : '[上]ddddLT',\n            sameElse : 'L'\n        },\n        ordinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal : function (number, period) {\n            switch (period) {\n            case 'd' :\n            case 'D' :\n            case 'DDD' :\n                return number + '日';\n            case 'M' :\n                return number + '月';\n            case 'w' :\n            case 'W' :\n                return number + '週';\n            default :\n                return number;\n            }\n        },\n        relativeTime : {\n            future : '%s內',\n            past : '%s前',\n            s : '幾秒',\n            m : '一分鐘',\n            mm : '%d分鐘',\n            h : '一小時',\n            hh : '%d小時',\n            d : '一天',\n            dd : '%d天',\n            M : '一個月',\n            MM : '%d個月',\n            y : '一年',\n            yy : '%d年'\n        }\n    });\n}));\n\n    moment.locale('en');\n\n\n    /************************************\n        Exposing Moment\n    ************************************/\n\n    function makeGlobal(shouldDeprecate) {\n        /*global ender:false */\n        if (typeof ender !== 'undefined') {\n            return;\n        }\n        oldGlobalMoment = globalScope.moment;\n        if (shouldDeprecate) {\n            globalScope.moment = deprecate(\n                    'Accessing Moment through the global scope is ' +\n                    'deprecated, and will be removed in an upcoming ' +\n                    'release.',\n                    moment);\n        } else {\n            globalScope.moment = moment;\n        }\n    }\n\n    // CommonJS module is defined\n    if (hasModule) {\n        module.exports = moment;\n    } else if (typeof define === 'function' && define.amd) {\n        define('moment', function (require, exports, module) {\n            if (module.config && module.config() && module.config().noGlobal === true) {\n                // release the global variable\n                globalScope.moment = oldGlobalMoment;\n            }\n\n            return moment;\n        });\n        makeGlobal(true);\n    } else {\n        makeGlobal();\n    }\n}).call(this);\n"],"sourceRoot":"."}