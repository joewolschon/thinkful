{"version":3,"sources":["assets/js/app.js","assets/mega-video/assets/js/directives/megaVideo.js","assets/mega-video/assets/js/directives/volumeSlider.js"],"names":[],"mappings":"AAAA,QAAA,OAAA,OAAA,aAAA,YCAA,QAAA,OAAA,OAAA,UAAA,YAAA,SAAA,MACA,OACA,SAAA,IACA,YAAA,oDACA,OAAA,EACA,YAAA,EACA,WAAA,SAAA,OAAA,SAAA,QACA,GAAA,aAAA,SAAA,KAAA,SAAA,EACA,QAAA,OACA,KAAA,WACA,YAAA,OACA,OAAA,MAAA,OAAA,QAEA,MAAA,WACA,YAAA,QACA,OAAA,MAAA,OAAA,SAEA,KAAA,WACA,YAAA,QACA,YAAA,YAAA,EACA,OAAA,MAAA,OAAA,QAEA,WAAA,WACA,QAAA,OAAA,MAAA,OAAA,KAAA,QAAA,KAAA,QAEA,MAAA,OAAA,MACA,OAAA,OAAA,OAKA,MAAA,UAAA,SAAA,OACA,YAAA,OAAA,QAGA,KAAA,SAAA,MAAA,QAAA,OAEA,QAAA,kBACA,GAAA,cACA,MAAA,KAAA,cACA,KAAA,KAAA,aACA,KAAA,KAAA,aAEA,KAAA,SAAA,aACA,MAAA,eAAA,SACA,MAAA,QAAA,MACA,KAAA,YAAA,QAAA,KACA,IAAA,KAAA,mBAAA,MAAA,WAXA,MAAA,WAkBA,qBCtDA,QAAA,OAAA,OAAA,UAAA,eAAA,WACA,OACA,QAAA,cACA,SAAA,IACA,KAAA,SAAA,MAAA,QAAA,MAAA,qBACA,GAAA,eAAA,WAAA,MAAA,cACA,qBAAA,UAAA,eACA,QAAA,QAAA,QAAA,QACA,IAAA,EACA,IAAA,EACA,KAAA,IACA,MAAA,cACA,YAAA,aACA,MAAA,SAAA,MAAA,IACA,MAAA,OAAA,WACA,oBAAA,UAAA,GAAA,UAGA,OAAA,SAAA,MAAA,IACA,MAAA,OAAA,WACA,oBAAA,UAAA,GAAA","file":"combined.min.js","sourcesContent":["angular.module('app', ['ngResource', 'ngRoute']);","angular.module('app').directive('megaVideo', function ($sce) {\n  return {\n    restrict: 'E',\n    templateUrl: 'assets/mega-video/assets/partials/mega-video.html',\n    scope: true,\n    transclude: true,\n    controller: function($scope, $element, $attrs){\n      var videoPlayer = $element.find('video')[0];\n      $scope.video =  {\n        play: function() {\n          videoPlayer.play();\n          $scope.video.status = 'play';\n        },\n        pause: function() {\n          videoPlayer.pause();\n          $scope.video.status = 'pause';\n        },\n        stop: function() {\n          videoPlayer.pause();\n          videoPlayer.currentTime = 0;\n          $scope.video.status = 'stop'\n        },\n        togglePlay: function() {\n          $scope.video.status == 'play' ? this.pause() : this.play();\n        },\n        width: $attrs.width,\n        height: $attrs.height\n      };\n\n      // what we'll expose to outside world\n      var ctrl = this;\n      this.setVolume = function(level) {\n        videoPlayer.volume = level;\n      }\n    },\n    link: function(scope, element, attrs) {\n      scope.sources = [];\n      function processSources(){\n        var sourceTypes = {\n          webm: { type: 'video/webm'},\n          mp4: { type: 'video/mp4'},\n          ogg: { type: 'video/ogg'}\n        };\n        for (source in sourceTypes) {\n          if (attrs.hasOwnProperty(source)) {\n            scope.sources.push(\n              { type: sourceTypes[source].type,\n                src: $sce.trustAsResourceUrl(attrs[source])\n              }\n            );\n          }\n        }\n\n      }\n      processSources();\n    }\n  }\n});","angular.module('app').directive('volumeSlider', function ($log) {\n  return {\n    require: '?^megaVideo',\n    restrict: 'A',\n    link: function(scope, element, attrs, megaVideoController) {\n      var initialVolume = parseFloat(attrs.initialVolume);\n      megaVideoController.setVolume(initialVolume);\n      angular.element(element.slider({\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: initialVolume,\n        orientation: \"horizontal\",\n        slide: function(event, ui) {\n          scope.$apply(function(){\n            megaVideoController.setVolume(ui.value);\n          })\n        },\n        change: function(event, ui) {\n          scope.$apply(function(){\n            megaVideoController.setVolume(ui.value);\n          })\n        }\n      }));\n    }\n  }\n});"],"sourceRoot":"."}